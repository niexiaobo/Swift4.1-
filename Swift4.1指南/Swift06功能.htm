<!DOCTYPE html>
<!-- saved from url=(0158)https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Functions.html#//apple_ref/doc/uid/TP40014097-CH10-ID158 -->
<html lang="en" class="translated-ltr"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">  
  <title>The Swift Programming Language (Swift 4.1): Functions</title>
  <link rel="stylesheet" type="text/css" href="./The Swift Programming Language (Swift 4.1)_ 功能_files/style-1.6.3.css">
  <link rel="stylesheet" type="text/css" href="./The Swift Programming Language (Swift 4.1)_ 功能_files/feedback-1.6.3.css">
   
<meta id="j-version" name="j-version" content="">
<meta id="build" name="build" content="2cff7ac52859143a0b42c92c22d84718">
<meta id="document-version" name="document-version" content="10.3.3">
<meta id="book-assignments" name="book-assignments" content="{Type/Guide}, {Topic/Swift}">
<meta scheme="apple_ref" id="identifier" name="identifier" content="//apple_ref/doc/uid/TP40014097">
<meta id="chapterId" name="chapterId" content="TP40014097-CH10">
<meta id="book-title" name="book-title" content="The Swift Programming Language (Swift 4.1)">
<meta id="book-resource-type" name="book-resource-type" content="Guide">
<meta id="book-root" name="book-root" content="./">
<meta id="book-json" name="book-json" content="book.json">
<meta id="date" name="date" content="2018-02-20">
<meta id="description" name="description" content="The definitive guide to Swift, Apple’s programming language for building iOS, macOS, watchOS, and tvOS apps.">
<meta id="IndexTitle" name="IndexTitle" content="">
<meta id="resources-uri" name="resources-uri" content="../../../../Resources/1277">
<link id="book-index-page" rel="Start" title="" type="text/html" href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/index.html">
<!-- , next_chapter: next_chapter, previous_chapter: previous_chapter -->
<link id="next-page" rel="Next" type="text/html" href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Functions.html">
<link id="previous-page" rel="Prev" type="text/html" href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Functions.html">
<meta id="devcenter" name="devcenter" content="&lt;!-- DEVCENTER_NAME --&gt;">
<meta id="devcenter-url" name="devcenter-url" content="&lt;!-- DEVCENTER_URL --&gt;">
<meta id="reflib" name="reflib" content="&lt;!-- REFLIB_NAME --&gt;">

<meta id="xcode-display" name="xcode-display" content="render">
<meta name="apple-mobile-web-app-capable" content="yes">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0">
<meta id="platforms" name="platforms" content="Xcode Developer Tools">
<link type="text/css" rel="stylesheet" charset="UTF-8" href="./The Swift Programming Language (Swift 4.1)_ 功能_files/translateelement.css"></head>

  <body id="conceptual_flow_with_tasks" class="jazz">
    
    <header id="ios_header" class="hideOnPrint hideInXcode">
  <div class="content-wrapper">
    <p class="header-text">
    	<a href="https://developer.apple.com/library/content/navigation/"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">指南和示例代码
 		</font></font></a>
 </p>
    <p id="wwdr"><img id="apple_logo" src="./The Swift Programming Language (Swift 4.1)_ 功能_files/apple2.png" height="14px" width="12px" aria-hidden="true"><a href="https://developer.apple.com/"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">开发人员</font></font></a></p>
  </div>
</header>

    <section id="valence">
  <div class="content-wrapper">
    <p id="hierarchial_navigation">
      <span id="book_title"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Swift编程语言（Swift 4.1）</font></font></span>
    </p>
    <form id="search" class="hideInXcode" method="get" action="https://developer.apple.com/search/index.php" accept-charset="utf-8" autocomplete="off">
  <input type="search" id="ssi_SearchField" placeholder="Search Guides and Sample Code" name="q" autocomplete="off" tabindex="2">
</form>

      
   
   




    <span class="download-text hideInXcode">
      <a href="https://itunes.apple.com/us/book/the-swift-programming-language/id1002622538?mt=11"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">的iBooks</font></font></a>
    </span>

    

    <img id="shortstack" src="./The Swift Programming Language (Swift 4.1)_ 功能_files/shortstack_2x.png">
  </div>
</section>
    <div class="content-wrapper">
      <nav id="navigator" class="book-parts hideInXcode" role="navigation">
    <ul class="nav-parts">
        <li data-id="//apple_ref/doc/uid/TP40014097-CH1-ID2" class="part-name">
            <a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/index.html#//apple_ref/doc/uid/TP40014097-CH3-ID0" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH3-ID0"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">欢迎来到Swift</font></font></a>
          <ul class="nav-chapters">
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/index.html#//apple_ref/doc/uid/TP40014097-CH3-ID0" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH3-ID0"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">关于Swift</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Compatibility.html#//apple_ref/doc/uid/TP40014097-CH45-ID561" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH45-ID561"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">版本兼容性</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/GuidedTour.html#//apple_ref/doc/uid/TP40014097-CH2-ID1" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH2-ID1"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">快速游览</font></font></a>
              </li>
          </ul>
        </li>
        <li data-id="//apple_ref/doc/uid/TP40014097-CH4-ID233" class="part-name nav-part-active open-part">
            <a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/TheBasics.html#//apple_ref/doc/uid/TP40014097-CH5-ID309" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH5-ID309"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">语言指南</font></font></a>
          <ul class="nav-chapters">
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/TheBasics.html#//apple_ref/doc/uid/TP40014097-CH5-ID309" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH5-ID309"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">基础</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/BasicOperators.html#//apple_ref/doc/uid/TP40014097-CH6-ID60" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH6-ID60"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">基本操作员</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/StringsAndCharacters.html#//apple_ref/doc/uid/TP40014097-CH7-ID285" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH7-ID285"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">字符串和字符</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/CollectionTypes.html#//apple_ref/doc/uid/TP40014097-CH8-ID105" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH8-ID105"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">集合类型</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/ControlFlow.html#//apple_ref/doc/uid/TP40014097-CH9-ID120" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH9-ID120"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">控制流</font></font></a>
              </li>
              <li class="nav-chapter nav-current-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Functions.html#//apple_ref/doc/uid/TP40014097-CH10-ID158" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH10-ID158"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">功能</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Closures.html#//apple_ref/doc/uid/TP40014097-CH11-ID94" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH11-ID94"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">关闭</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Enumerations.html#//apple_ref/doc/uid/TP40014097-CH12-ID145" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH12-ID145"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">枚举</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/ClassesAndStructures.html#//apple_ref/doc/uid/TP40014097-CH13-ID82" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH13-ID82"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">类和结构</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Properties.html#//apple_ref/doc/uid/TP40014097-CH14-ID254" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH14-ID254"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">属性</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Methods.html#//apple_ref/doc/uid/TP40014097-CH15-ID234" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH15-ID234"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">方法</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Subscripts.html#//apple_ref/doc/uid/TP40014097-CH16-ID305" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH16-ID305"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">标</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Inheritance.html#//apple_ref/doc/uid/TP40014097-CH17-ID193" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH17-ID193"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">遗产</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Initialization.html#//apple_ref/doc/uid/TP40014097-CH18-ID203" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH18-ID203"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">初始化</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Deinitialization.html#//apple_ref/doc/uid/TP40014097-CH19-ID142" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH19-ID142"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">反初始化</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/OptionalChaining.html#//apple_ref/doc/uid/TP40014097-CH21-ID245" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH21-ID245"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">可选链接</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/ErrorHandling.html#//apple_ref/doc/uid/TP40014097-CH42-ID508" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH42-ID508"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">错误处理</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/TypeCasting.html#//apple_ref/doc/uid/TP40014097-CH22-ID338" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH22-ID338"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">类型铸造</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/NestedTypes.html#//apple_ref/doc/uid/TP40014097-CH23-ID242" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH23-ID242"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">嵌套类型</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Extensions.html#//apple_ref/doc/uid/TP40014097-CH24-ID151" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH24-ID151"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">扩展</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Protocols.html#//apple_ref/doc/uid/TP40014097-CH25-ID267" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH25-ID267"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">协议</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Generics.html#//apple_ref/doc/uid/TP40014097-CH26-ID179" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH26-ID179"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">泛型</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/AutomaticReferenceCounting.html#//apple_ref/doc/uid/TP40014097-CH20-ID48" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH20-ID48"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">自动引用计数</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/MemorySafety.html#//apple_ref/doc/uid/TP40014097-CH46-ID567" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH46-ID567"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">内存安全</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/AccessControl.html#//apple_ref/doc/uid/TP40014097-CH41-ID3" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH41-ID3"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">访问控制</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/AdvancedOperators.html#//apple_ref/doc/uid/TP40014097-CH27-ID28" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH27-ID28"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">高级操作员</font></font></a>
              </li>
          </ul>
        </li>
        <li data-id="//apple_ref/doc/uid/TP40014097-CH28-ID427" class="part-name">
            <a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/AboutTheLanguageReference.html#//apple_ref/doc/uid/TP40014097-CH29-ID345" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH29-ID345"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">语言参考</font></font></a>
          <ul class="nav-chapters">
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/AboutTheLanguageReference.html#//apple_ref/doc/uid/TP40014097-CH29-ID345" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH29-ID345"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">关于语言参考</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/LexicalStructure.html#//apple_ref/doc/uid/TP40014097-CH30-ID410" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH30-ID410"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">词汇结构</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Types.html#//apple_ref/doc/uid/TP40014097-CH31-ID445" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH31-ID445"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">类型</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Expressions.html#//apple_ref/doc/uid/TP40014097-CH32-ID383" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH32-ID383"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">表达式</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Statements.html#//apple_ref/doc/uid/TP40014097-CH33-ID428" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH33-ID428"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">声明</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Declarations.html#//apple_ref/doc/uid/TP40014097-CH34-ID351" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH34-ID351"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">声明</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Attributes.html#//apple_ref/doc/uid/TP40014097-CH35-ID347" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH35-ID347"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">属性</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Patterns.html#//apple_ref/doc/uid/TP40014097-CH36-ID419" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH36-ID419"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">模式</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/GenericParametersAndArguments.html#//apple_ref/doc/uid/TP40014097-CH37-ID406" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH37-ID406"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">通用参数和参数</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/zzSummaryOfTheGrammar.html#//apple_ref/doc/uid/TP40014097-CH38-ID458" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH38-ID458"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">语法概要</font></font></a>
              </li>
          </ul>
        </li>
        <li data-id="//apple_ref/doc/uid/TP40014097-CH39-ID460" class="part-name">
            <a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/RevisionHistory.html#//apple_ref/doc/uid/TP40014097-CH40-ID459" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH40-ID459"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">修订记录</font></font></a>
          <ul class="nav-chapters">
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/RevisionHistory.html#//apple_ref/doc/uid/TP40014097-CH40-ID459" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH40-ID459"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">文档修订历史</font></font></a>
              </li>
          </ul>
        </li>
    </ul>
</nav>

      <menu id="bashful" type="toolbar">
  <div class="shield"></div>
  <menuitem id="jump_to" class="menu-bar-item closed">
  <span><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">在本页</font></font></span>
  <div class="chevron">
    <div class="chevy chevron-left"></div>
    <div class="chevy chevron-right"></div>
  </div>
  <menu type="list" class="details">
      <ul class="list-bullet">
          <li class="item">
            <a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Functions.html#//apple_ref/doc/uid/TP40014097-CH10-ID159">Defining and Calling Functions</a>
          </li>
          <li class="item">
            <a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Functions.html#//apple_ref/doc/uid/TP40014097-CH10-ID160">Function Parameters and Return Values</a>
          </li>
          <li class="item">
            <a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Functions.html#//apple_ref/doc/uid/TP40014097-CH10-ID166">Function Argument Labels and Parameter Names</a>
          </li>
          <li class="item">
            <a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Functions.html#//apple_ref/doc/uid/TP40014097-CH10-ID174">Function Types</a>
          </li>
          <li class="item">
            <a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Functions.html#//apple_ref/doc/uid/TP40014097-CH10-ID178">Nested Functions</a>
          </li>
      </ul>
  </menu>
</menuitem>

</menu>
<div class="pixel-line"></div>
<div class="rubber-band-gap"></div>
<article class="chapter">
  <a name="//apple_ref/doc/uid/TP40014097-CH10"></a><a name="//apple_ref/doc/uid/TP40014097-CH10-ID158"></a>

  <h2 class="chapter-name"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">功能</font></font></h2>


  
  	<section class="section">
  		<p class="para">
  <em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">函数</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">是执行特定任务的自包含代码块。</font><font style="vertical-align: inherit;">你给一个函数一个名字来标识它做了什么，这个名字用来“调用”函数在需要时执行它的任务。
</font></font></p>
<p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  Swift的统一函数语法足够灵活，可以将任何内容从一个没有参数名称的简单C风格函数转换为一个复杂的Objective-C风格方法，每个参数都有名称和参数标签。</font><font style="vertical-align: inherit;">参数可以提供默认值以简化函数调用，并且可以作为输入参数传递，这些参数在函数完成执行后修改传递的变量。
</font></font></p>
<p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  Swift中的每个函数都有一个类型，由函数的参数类型和返回类型组成。</font><font style="vertical-align: inherit;">你可以像Swift中的任何其他类型一样使用这种类型，这使得将函数作为参数传递给其他函数并从函数返回函数变得容易。</font><font style="vertical-align: inherit;">也可以在其他函数中编写函数，以在嵌套的函数范围内封装有用的功能。
</font></font></p>

		</section> 


  <section class="section">
  <a name="//apple_ref/doc/uid/TP40014097-CH10-ID159"></a>
  <h3 class="section-name" tabindex="0"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">定义和调用函数</font></font></h3>
  <p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  当你定义一个函数时，你可以选择定义一个或多个命名的类型值作为输入函数，称为</font></font><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">参数</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">你也可以选择定义一个函数在完成时作为输出</font></font><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">返回的值的类型</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，称为它的</font><em><font style="vertical-align: inherit;">返回类型</font></em><font style="vertical-align: inherit;">。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  每个函数都有一个</font></font><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">函数名称</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，它描述了函数执行的任务。</font><font style="vertical-align: inherit;">要使用某个函数，需要使用其名称“调用”该函数，并传递</font><font style="vertical-align: inherit;">与函数参数类型相匹配的</font><font style="vertical-align: inherit;">输入值（称为</font></font><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">参数</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">）。</font><font style="vertical-align: inherit;">函数的参数必须始终以与函数的参数列表相同的顺序提供。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  下面的例子中的函数被调用</font></font><code class="code-voice">greet(person:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，因为它就是这样做的 - 它将一个人的名字作为输入并返回该人的问候语。</font><font style="vertical-align: inherit;">要做到这一点，你需要定义一个输入参数 - 一个</font></font><code class="code-voice">String</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">名为</font></font><code class="code-voice">person</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">- </font><font style="vertical-align: inherit;">的</font><font style="vertical-align: inherit;">值</font><font style="vertical-align: inherit;">和一个返回类型</font></font><code class="code-voice">String</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，它将包含该人的问候语：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">func</span> <span class="vc">greet</span>(<span class="vc">person</span>: <span class="n"><!-- a href="" -->String<!-- /a --></span>) -&gt; <span class="n"><!-- a href="" -->String<!-- /a --></span> {</code></li>
            <li><code class="code-voice">    <span class="kt">let</span> <span class="vc">greeting</span> = <span class="s">"Hello, "</span> + <span class="vc">person</span> + <span class="s">"!"</span></code></li>
            <li><code class="code-voice">    <span class="kt">return</span> <span class="vc">greeting</span></code></li>
            <li><code class="code-voice">}</code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  所有这些信息都汇总到函数的</font></font><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">定义中</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，该</font><em><font style="vertical-align: inherit;">定义</font></em><font style="vertical-align: inherit;">以</font></font><code class="code-voice">func</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">关键字</font><font style="vertical-align: inherit;">为前缀</font><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">使用</font></font><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">返回箭头</font></font></em> <code class="code-voice">-&gt;</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">（连字符后跟右括号）</font><font style="vertical-align: inherit;">指示函数的返回类型，</font><font style="vertical-align: inherit;">紧接着是要返回的类型的名称。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  该定义描述了函数的功能，期望得到的内容以及完成后返回的内容。</font><font style="vertical-align: inherit;">该定义使您可以轻松地从代码中的其他位置明确调用该函数：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="vc">print</span>(<span class="vc">greet</span>(<span class="vc">person</span>: <span class="s">"Anna"</span>))</code></li>
            <li><code class="code-voice"><span class="c">// Prints "Hello, Anna!"</span></code></li>
            <li><code class="code-voice"><span class="vc">print</span>(<span class="vc">greet</span>(<span class="vc">person</span>: <span class="s">"Brian"</span>))</code></li>
            <li><code class="code-voice"><span class="c">// Prints "Hello, Brian!"</span></code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  你</font></font><code class="code-voice">greet(person:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">可以通过</font></font><code class="code-voice">String</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">在</font></font><code class="code-voice">person</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">参数标签</font><font style="vertical-align: inherit;">后面</font><font style="vertical-align: inherit;">传递一个</font><font style="vertical-align: inherit;">值来</font><font style="vertical-align: inherit;">调用</font><font style="vertical-align: inherit;">函数</font><font style="vertical-align: inherit;">，比如</font></font><code class="code-voice">greet(person: "Anna")</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">因为该函数返回一个</font></font><code class="code-voice">String</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">值，</font></font><code class="code-voice">greet(person:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">所以可以通过调用</font></font><code class="code-voice">print(_:separator:terminator:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">函数来</font><font style="vertical-align: inherit;">打包</font><font style="vertical-align: inherit;">该字符串并查看其返回值，如上所示。
</font></font></p><div class="note">
  <a name="//apple_ref/doc/uid/TP40014097-CH10-NoLink_86"></a>
  <aside class="aside">
    <p class="aside-title"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">注意
    </font></font></p>
    	<p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">该</font></font><code class="code-voice">print(_:separator:terminator:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">函数没有第一个参数的标签，其他参数是可选的，因为它们有一个默认值。</font><font style="vertical-align: inherit;">函数语法的这些变体在下面的</font></font><span class="x-name"><a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Functions.html#//apple_ref/doc/uid/TP40014097-CH10-ID166" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH10-ID166"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">函数参数标签和参数名称</font></font></a></span><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">以及</font></font><span class="x-name"><a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Functions.html#//apple_ref/doc/uid/TP40014097-CH10-ID169" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH10-ID169"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">默认参数值中讨论</font></font></a></span><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。
    	</font></font></p>
    
  </aside>
</div><p class="para"><font style="vertical-align: inherit;"></font><code class="code-voice">greet(person:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">函数</font><font style="vertical-align: inherit;">
  的主体</font><font style="vertical-align: inherit;">首先定义一个新的</font></font><code class="code-voice">String</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">常量，</font></font><code class="code-voice">greeting</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">并将其设置为一个简单的问候消息。</font><font style="vertical-align: inherit;">然后使用</font></font><code class="code-voice">return</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">关键字</font><font style="vertical-align: inherit;">将该问候语传回功能</font><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">在代码行中</font></font><code class="code-voice">return greeting</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，该函数完成其执行并返回当前值</font></font><code class="code-voice">greeting</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  您可以</font></font><code class="code-voice">greet(person:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">使用不同的输入值多次</font><font style="vertical-align: inherit;">调用该</font><font style="vertical-align: inherit;">函数。</font><font style="vertical-align: inherit;">上面的例子显示了如果使用输入值</font></font><code class="code-voice">"Anna"</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">和输入值</font><font style="vertical-align: inherit;">来调用会发生什么</font></font><code class="code-voice">"Brian"</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">该函数在每种情况下返回一个定制的问候语。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  为了使此函数的主体更短，可以将消息创建和return语句组合到一行中：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">func</span> <span class="vc">greetAgain</span>(<span class="vc">person</span>: <span class="n"><!-- a href="" -->String<!-- /a --></span>) -&gt; <span class="n"><!-- a href="" -->String<!-- /a --></span> {</code></li>
            <li><code class="code-voice">    <span class="kt">return</span> <span class="s">"Hello again, "</span> + <span class="vc">person</span> + <span class="s">"!"</span></code></li>
            <li><code class="code-voice">}</code></li>
            <li><code class="code-voice"><span class="vc">print</span>(<span class="vc">greetAgain</span>(<span class="vc">person</span>: <span class="s">"Anna"</span>))</code></li>
            <li><code class="code-voice"><span class="c">// Prints "Hello again, Anna!"</span></code></li>
        </ol>
      </div>
  </div>
</section>
  
</section>
<section class="section">
  <a name="//apple_ref/doc/uid/TP40014097-CH10-ID160"></a>
  <h3 class="section-name" tabindex="0"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">函数参数和返回值</font></font></h3>
  <p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  函数参数和返回值在Swift中非常灵活。</font><font style="vertical-align: inherit;">您可以使用具有单个未命名参数的简单实用程序函数来定义任何具有表达参数名称和不同参数选项的复杂函数。
</font></font></p>
  <section class="section">
  <a name="//apple_ref/doc/uid/TP40014097-CH10-ID162"></a>
  <h3 class="section-name" tabindex="0"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">没有参数的函数</font></font></h3>
  <p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  函数不需要定义输入参数。</font><font style="vertical-align: inherit;">这是一个没有输入参数的函数，它总是在</font></font><code class="code-voice">String</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">调用时</font><font style="vertical-align: inherit;">返回相同的</font><font style="vertical-align: inherit;">消息：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">func</span> <span class="vc">sayHelloWorld</span>() -&gt; <span class="n"><!-- a href="" -->String<!-- /a --></span> {</code></li>
            <li><code class="code-voice">    <span class="kt">return</span> <span class="s">"hello, world"</span></code></li>
            <li><code class="code-voice">}</code></li>
            <li><code class="code-voice"><span class="vc">print</span>(<span class="vc">sayHelloWorld</span>())</code></li>
            <li><code class="code-voice"><span class="c">// Prints "hello, world"</span></code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  函数定义仍然需要函数名称后面的圆括号，即使它没有使用任何参数。</font><font style="vertical-align: inherit;">函数名称后面跟着一对空括号，当调用该函数时。
</font></font></p>
  
</section>
<section class="section">
  <a name="//apple_ref/doc/uid/TP40014097-CH10-ID528"></a>
  <h3 class="section-name" tabindex="0"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">具有多个参数的函数</font></font></h3>
  <p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  函数可以有多个输入参数，它们写在函数的括号内，用逗号分隔。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  这个功能需要一个人的姓名，以及他们是否已经被输入，并返回适当的问候语给该人：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">func</span> <span class="vc">greet</span>(<span class="vc">person</span>: <span class="n"><!-- a href="" -->String<!-- /a --></span>, <span class="vc">alreadyGreeted</span>: <span class="n"><!-- a href="" -->Bool<!-- /a --></span>) -&gt; <span class="n"><!-- a href="" -->String<!-- /a --></span> {</code></li>
            <li><code class="code-voice">    <span class="kt">if</span> <span class="vc">alreadyGreeted</span> {</code></li>
            <li><code class="code-voice">        <span class="kt">return</span> <span class="vc">greetAgain</span>(<span class="vc">person</span>: <span class="vc">person</span>)</code></li>
            <li><code class="code-voice">    } <span class="kt">else</span> {</code></li>
            <li><code class="code-voice">        <span class="kt">return</span> <span class="vc">greet</span>(<span class="vc">person</span>: <span class="vc">person</span>)</code></li>
            <li><code class="code-voice">    }</code></li>
            <li><code class="code-voice">}</code></li>
            <li><code class="code-voice"><span class="vc">print</span>(<span class="vc">greet</span>(<span class="vc">person</span>: <span class="s">"Tim"</span>, <span class="vc">alreadyGreeted</span>: <span class="kt">true</span>))</code></li>
            <li><code class="code-voice"><span class="c">// Prints "Hello again, Tim!"</span></code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  您</font></font><code class="code-voice">greet(person:alreadyGreeted:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">可以通过传递一个</font></font><code class="code-voice">String</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">标记</font></font><code class="code-voice">person</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">为</font></font><code class="code-voice">Bool</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">参数值</font><font style="vertical-align: inherit;">的</font><font style="vertical-align: inherit;">参数值</font><font style="vertical-align: inherit;">和一个</font><font style="vertical-align: inherit;">标记</font></font><code class="code-voice">alreadyGreeted</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">为括号</font><font style="vertical-align: inherit;">的</font><font style="vertical-align: inherit;">参数值来</font><font style="vertical-align: inherit;">调用该</font><font style="vertical-align: inherit;">函数，并</font><font style="vertical-align: inherit;">以逗号分隔。</font><font style="vertical-align: inherit;">请注意，此功能</font></font><code class="code-voice">greet(person:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">与前面部分中显示</font><font style="vertical-align: inherit;">的</font><font style="vertical-align: inherit;">功能</font><font style="vertical-align: inherit;">不同</font><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">虽然这两个功能有打头的名称</font></font><code class="code-voice">greet</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，该</font></font><code class="code-voice">greet(person:alreadyGreeted:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">函数有两个参数，但该</font></font><code class="code-voice">greet(person:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">功能只需要一个。
</font></font></p>
  
</section>
<section class="section">
  <a name="//apple_ref/doc/uid/TP40014097-CH10-ID163"></a>
  <h3 class="section-name" tabindex="0"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">没有返回值的函数</font></font></h3>
  <p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  函数不需要定义返回类型。</font><font style="vertical-align: inherit;">下面是该</font></font><code class="code-voice">greet(person:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">函数</font><font style="vertical-align: inherit;">的一个版本</font><font style="vertical-align: inherit;">，它打印自己的</font></font><code class="code-voice">String</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">值而不是返回它：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">func</span> <span class="vc">greet</span>(<span class="vc">person</span>: <span class="n"><!-- a href="" -->String<!-- /a --></span>) {</code></li>
            <li><code class="code-voice">    <span class="vc">print</span>(<span class="s">"Hello, </span>\(<span class="vc">person</span>)<span class="s">!"</span>)</code></li>
            <li><code class="code-voice">}</code></li>
            <li><code class="code-voice"><span class="vc">greet</span>(<span class="vc">person</span>: <span class="s">"Dave"</span>)</code></li>
            <li><code class="code-voice"><span class="c">// Prints "Hello, Dave!"</span></code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  因为它不需要返回值，所以函数的定义不包含返回箭头（</font></font><code class="code-voice">-&gt;</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">）或返回类型。
</font></font></p><div class="note">
  <a name="//apple_ref/doc/uid/TP40014097-CH10-NoLink_87"></a>
  <aside class="aside">
    <p class="aside-title"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">注意
    </font></font></p>
    	<p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">严格地说，这个版本的</font></font><code class="code-voice">greet(person:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">功能</font></font><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">确实</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">还是返回一个值，即使没有返回值的定义。</font><font style="vertical-align: inherit;">没有定义返回类型的函数返回一个特殊的类型值</font></font><code class="code-voice">Void</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">这只是一个空的元组，写成</font></font><code class="code-voice">()</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。
    	</font></font></p>
    
  </aside>
</div><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  调用函数的返回值时可以忽略：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">func</span> <span class="vc">printAndCount</span>(<span class="vc">string</span>: <span class="n"><!-- a href="" -->String<!-- /a --></span>) -&gt; <span class="n"><!-- a href="" -->Int<!-- /a --></span> {</code></li>
            <li><code class="code-voice">    <span class="vc">print</span>(<span class="vc">string</span>)</code></li>
            <li><code class="code-voice">    <span class="kt">return</span> <span class="vc">string</span>.<span class="vc">count</span></code></li>
            <li><code class="code-voice">}</code></li>
            <li><code class="code-voice"><span class="kt">func</span> <span class="vc">printWithoutCounting</span>(<span class="vc">string</span>: <span class="n"><!-- a href="" -->String<!-- /a --></span>) {</code></li>
            <li><code class="code-voice">    <span class="kt">let</span> <span class="kt">_</span> = <span class="vc">printAndCount</span>(<span class="vc">string</span>: <span class="vc">string</span>)</code></li>
            <li><code class="code-voice">}</code></li>
            <li><code class="code-voice"><span class="vc">printAndCount</span>(<span class="vc">string</span>: <span class="s">"hello, world"</span>)</code></li>
            <li><code class="code-voice"><span class="c">// prints "hello, world" and returns a value of 12</span></code></li>
            <li><code class="code-voice"><span class="vc">printWithoutCounting</span>(<span class="vc">string</span>: <span class="s">"hello, world"</span>)</code></li>
            <li><code class="code-voice"><span class="c">// prints "hello, world" but does not return a value</span></code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  第一个函数，</font></font><code class="code-voice">printAndCount(string:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">打印一个字符串，然后将其字符数作为一个返回</font></font><code class="code-voice">Int</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">第二个函数</font></font><code class="code-voice">printWithoutCounting(string:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">调用第一个函数，但忽略其返回值。</font><font style="vertical-align: inherit;">当第二个函数被调用时，消息仍然由第一个函数打印，但是不使用返回的值。
</font></font></p><div class="note">
  <a name="//apple_ref/doc/uid/TP40014097-CH10-NoLink_88"></a>
  <aside class="aside">
    <p class="aside-title"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">注意
    </font></font></p>
    	<p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">返回值可以被忽略，但是一个表示它将返回一个值的函数必须始终这样做。</font><font style="vertical-align: inherit;">具有定义的返回类型的函数不允许控件在没有返回值的情况下掉到函数的底部，并且尝试这样做会导致编译时错误。
    	</font></font></p>
    
  </aside>
</div>
  
</section>
<section class="section">
  <a name="//apple_ref/doc/uid/TP40014097-CH10-ID164"></a>
  <h3 class="section-name" tabindex="0"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">具有多个返回值的函数</font></font></h3>
  <p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  您可以使用元组类型作为函数的返回类型，作为一个复合返回值的一部分返回多个值。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  下面的例子定义了一个叫做的函数</font></font><code class="code-voice">minMax(array:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，它在一个</font></font><code class="code-voice">Int</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">值</font><font style="vertical-align: inherit;">数组中找到最小和最大的数字</font><font style="vertical-align: inherit;">：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">func</span> <span class="vc">minMax</span>(<span class="vc">array</span>: [<span class="n"><!-- a href="" -->Int<!-- /a --></span>]) -&gt; (<span class="vc">min</span>: <span class="n"><!-- a href="" -->Int<!-- /a --></span>, <span class="vc">max</span>: <span class="n"><!-- a href="" -->Int<!-- /a --></span>) {</code></li>
            <li><code class="code-voice">    <span class="kt">var</span> <span class="vc">currentMin</span> = <span class="vc">array</span>[<span class="m">0</span>]</code></li>
            <li><code class="code-voice">    <span class="kt">var</span> <span class="vc">currentMax</span> = <span class="vc">array</span>[<span class="m">0</span>]</code></li>
            <li><code class="code-voice">    <span class="kt">for</span> <span class="vc">value</span> <span class="kt">in</span> <span class="vc">array</span>[<span class="m">1</span>..&lt;<span class="vc">array</span>.<span class="vc">count</span>] {</code></li>
            <li><code class="code-voice">        <span class="kt">if</span> <span class="vc">value</span> &lt; <span class="vc">currentMin</span> {</code></li>
            <li><code class="code-voice">            <span class="vc">currentMin</span> = <span class="vc">value</span></code></li>
            <li><code class="code-voice">        } <span class="kt">else</span> <span class="kt">if</span> <span class="vc">value</span> &gt; <span class="vc">currentMax</span> {</code></li>
            <li><code class="code-voice">            <span class="vc">currentMax</span> = <span class="vc">value</span></code></li>
            <li><code class="code-voice">        }</code></li>
            <li><code class="code-voice">    }</code></li>
            <li><code class="code-voice">    <span class="kt">return</span> (<span class="vc">currentMin</span>, <span class="vc">currentMax</span>)</code></li>
            <li><code class="code-voice">}</code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  该</font></font><code class="code-voice">minMax(array:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">函数返回一个包含两个</font></font><code class="code-voice">Int</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">值</font><font style="vertical-align: inherit;">的元组</font><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">这些值是标记的</font></font><code class="code-voice">min</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，</font></font><code class="code-voice">max</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">以便在查询函数的返回值时可以按名称访问它们。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  该</font></font><code class="code-voice">minMax(array:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">函数</font><font style="vertical-align: inherit;">的主体</font><font style="vertical-align: inherit;">通过设置两个调用的工作变量</font></font><code class="code-voice">currentMin</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">以及</font></font><code class="code-voice">currentMax</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">数组中第一个整数的值开始。</font><font style="vertical-align: inherit;">然后，该函数在阵列并检查在每个值的剩余值进行迭代，看它是否比的值较小或较大</font></font><code class="code-voice">currentMin</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">和</font></font><code class="code-voice">currentMax</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">分别。</font><font style="vertical-align: inherit;">最后，总体最小值和最大值作为两个</font></font><code class="code-voice">Int</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">值</font><font style="vertical-align: inherit;">的元组返回</font><font style="vertical-align: inherit;">。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  因为元组的成员值被命名为函数返回类型的一部分，所以可以用点语法访问它们以检索最小值和最大值。
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">let</span> <span class="vc">bounds</span> = <span class="vc">minMax</span>(<span class="vc">array</span>: [<span class="m">8</span>, <span class="m">-6</span>, <span class="m">2</span>, <span class="m">109</span>, <span class="m">3</span>, <span class="m">71</span>])</code></li>
            <li><code class="code-voice"><span class="vc">print</span>(<span class="s">"min is </span>\(<span class="vc">bounds</span>.<span class="vc">min</span>)<span class="s"> and max is </span>\(<span class="vc">bounds</span>.<span class="vc">max</span>)<span class="s">"</span>)</code></li>
            <li><code class="code-voice"><span class="c">// Prints "min is -6 and max is 109"</span></code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  请注意，元组的成员不需要在从函数返回元组的位置命名，因为它们的名称已经被指定为函数返回类型的一部分。
</font></font></p>
  <section class="section">
  <a name="//apple_ref/doc/uid/TP40014097-CH10-ID165"></a>
  <h3 class="section-name" tabindex="0"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">可选的元组返回类型</font></font></h3>
  <p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  如果要从函数返回的元组类型有可能对整个元组具有“无值”，那么可以使用</font></font><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">可选的</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">元组返回类型来反映整个元组可能存在的事实</font></font><code class="code-voice">nil</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">您可以通过在元组类型的右括号后面放置问号来编写可选的元组返回类型，例如</font></font><code class="code-voice">(Int, Int)?</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">或</font></font><code class="code-voice">(String, Int, Bool)?</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。
</font></font></p><div class="note">
  <a name="//apple_ref/doc/uid/TP40014097-CH10-NoLink_89"></a>
  <aside class="aside">
    <p class="aside-title"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">注意
    </font></font></p>
    	<p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">一个可选的元组类型，例如</font></font><code class="code-voice">(Int, Int)?</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">不同于包含可选类型的元组，例如</font></font><code class="code-voice">(Int?, Int?)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">使用可选的元组类型，整个元组是可选的，而不仅仅是元组中的每个单独的值。
    	</font></font></p>
    
  </aside>
</div><p class="para"><font style="vertical-align: inherit;"></font><code class="code-voice">minMax(array:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">上面</font><font style="vertical-align: inherit;">
  的</font><font style="vertical-align: inherit;">函数返回一个包含两个</font></font><code class="code-voice">Int</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">值</font><font style="vertical-align: inherit;">的元组</font><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">但是，函数不会对它传递的数组执行任何安全检查。</font><font style="vertical-align: inherit;">如果</font></font><code class="code-voice">array</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">参数包含一个空数组，则</font></font><code class="code-voice">minMax(array:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">如上所定义</font><font style="vertical-align: inherit;">的</font><font style="vertical-align: inherit;">函数将在尝试访问时触发运行时错误</font></font><code class="code-voice">array[0]</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  要安全地处理空数组，请</font></font><code class="code-voice">minMax(array:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">使用可选的元组返回类型</font><font style="vertical-align: inherit;">编写该</font><font style="vertical-align: inherit;">函数，并</font></font><code class="code-voice">nil</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">在数组为空时</font><font style="vertical-align: inherit;">返回值</font><font style="vertical-align: inherit;">：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">func</span> <span class="vc">minMax</span>(<span class="vc">array</span>: [<span class="n"><!-- a href="" -->Int<!-- /a --></span>]) -&gt; (<span class="vc">min</span>: <span class="n"><!-- a href="" -->Int<!-- /a --></span>, <span class="vc">max</span>: <span class="n"><!-- a href="" -->Int<!-- /a --></span>)? {</code></li>
            <li><code class="code-voice">    <span class="kt">if</span> <span class="vc">array</span>.<span class="vc">isEmpty</span> { <span class="kt">return</span> <span class="kt">nil</span> }</code></li>
            <li><code class="code-voice">    <span class="kt">var</span> <span class="vc">currentMin</span> = <span class="vc">array</span>[<span class="m">0</span>]</code></li>
            <li><code class="code-voice">    <span class="kt">var</span> <span class="vc">currentMax</span> = <span class="vc">array</span>[<span class="m">0</span>]</code></li>
            <li><code class="code-voice">    <span class="kt">for</span> <span class="vc">value</span> <span class="kt">in</span> <span class="vc">array</span>[<span class="m">1</span>..&lt;<span class="vc">array</span>.<span class="vc">count</span>] {</code></li>
            <li><code class="code-voice">        <span class="kt">if</span> <span class="vc">value</span> &lt; <span class="vc">currentMin</span> {</code></li>
            <li><code class="code-voice">            <span class="vc">currentMin</span> = <span class="vc">value</span></code></li>
            <li><code class="code-voice">        } <span class="kt">else</span> <span class="kt">if</span> <span class="vc">value</span> &gt; <span class="vc">currentMax</span> {</code></li>
            <li><code class="code-voice">            <span class="vc">currentMax</span> = <span class="vc">value</span></code></li>
            <li><code class="code-voice">        }</code></li>
            <li><code class="code-voice">    }</code></li>
            <li><code class="code-voice">    <span class="kt">return</span> (<span class="vc">currentMin</span>, <span class="vc">currentMax</span>)</code></li>
            <li><code class="code-voice">}</code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  您可以使用可选绑定来检查此版本的</font></font><code class="code-voice">minMax(array:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">函数</font><font style="vertical-align: inherit;">是否</font><font style="vertical-align: inherit;">返回实际的元组值或</font></font><code class="code-voice">nil</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">if</span> <span class="kt">let</span> <span class="vc">bounds</span> = <span class="vc">minMax</span>(<span class="vc">array</span>: [<span class="m">8</span>, <span class="m">-6</span>, <span class="m">2</span>, <span class="m">109</span>, <span class="m">3</span>, <span class="m">71</span>]) {</code></li>
            <li><code class="code-voice">    <span class="vc">print</span>(<span class="s">"min is </span>\(<span class="vc">bounds</span>.<span class="vc">min</span>)<span class="s"> and max is </span>\(<span class="vc">bounds</span>.<span class="vc">max</span>)<span class="s">"</span>)</code></li>
            <li><code class="code-voice">}</code></li>
            <li><code class="code-voice"><span class="c">// Prints "min is -6 and max is 109"</span></code></li>
        </ol>
      </div>
  </div>
</section>
  
</section>

</section>

</section>
<section class="section">
  <a name="//apple_ref/doc/uid/TP40014097-CH10-ID166"></a>
  <h3 class="section-name" tabindex="0"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">函数参数标签和参数名称</font></font></h3>
  <p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  每个函数参数都有一个</font></font><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">参数标签</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">和一个</font></font><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">参数名称</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">参数标签在调用函数时使用; </font><font style="vertical-align: inherit;">每个参数都在函数调用中用它的参数标签写入。</font><font style="vertical-align: inherit;">参数名称用于实现该功能。</font><font style="vertical-align: inherit;">默认情况下，参数使用其参数名称作为参数标签。
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">func</span> <span class="vc">someFunction</span>(<span class="vc">firstParameterName</span>: <span class="n"><!-- a href="" -->Int<!-- /a --></span>, <span class="vc">secondParameterName</span>: <span class="n"><!-- a href="" -->Int<!-- /a --></span>) {</code></li>
            <li><code class="code-voice">    <span class="c">// In the function body, firstParameterName and secondParameterName</span></code></li>
            <li><code class="code-voice">    <span class="c">// refer to the argument values for the first and second parameters.</span></code></li>
            <li><code class="code-voice">}</code></li>
            <li><code class="code-voice"><span class="vc">someFunction</span>(<span class="vc">firstParameterName</span>: <span class="m">1</span>, <span class="vc">secondParameterName</span>: <span class="m">2</span>)</code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  所有参数必须具有唯一的名称。</font><font style="vertical-align: inherit;">尽管多个参数可能具有相同的参数标签，但唯一参数标签有助于使代码更具可读性。
</font></font></p>
  <section class="section">
  <a name="//apple_ref/doc/uid/TP40014097-CH10-ID167"></a>
  <h3 class="section-name" tabindex="0"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">指定参数标签</font></font></h3>
  <p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  您在参数名称前面写一个参数标签，并用空格分隔：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">func</span> <span class="vc">someFunction</span>(<span class="vc">argumentLabel</span> <span class="vc">parameterName</span>: <span class="n"><!-- a href="" -->Int<!-- /a --></span>) {</code></li>
            <li><code class="code-voice">    <span class="c">// In the function body, parameterName refers to the argument value</span></code></li>
            <li><code class="code-voice">    <span class="c">// for that parameter.</span></code></li>
            <li><code class="code-voice">}</code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  下面是一个</font></font><code class="code-voice">greet(person:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">函数</font><font style="vertical-align: inherit;">的变体</font><font style="vertical-align: inherit;">，它带有一个人的名字和家乡，并返回一个问候语：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">func</span> <span class="vc">greet</span>(<span class="vc">person</span>: <span class="n"><!-- a href="" -->String<!-- /a --></span>, <span class="vc">from</span> <span class="vc">hometown</span>: <span class="n"><!-- a href="" -->String<!-- /a --></span>) -&gt; <span class="n"><!-- a href="" -->String<!-- /a --></span> {</code></li>
            <li><code class="code-voice">    <span class="kt">return</span> <span class="s">"Hello </span>\(<span class="vc">person</span>)<span class="s">!  Glad you could visit from </span>\(<span class="vc">hometown</span>)<span class="s">."</span></code></li>
            <li><code class="code-voice">}</code></li>
            <li><code class="code-voice"><span class="vc">print</span>(<span class="vc">greet</span>(<span class="vc">person</span>: <span class="s">"Bill"</span>, <span class="vc">from</span>: <span class="s">"Cupertino"</span>))</code></li>
            <li><code class="code-voice"><span class="c">// Prints "Hello Bill!  Glad you could visit from Cupertino."</span></code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  参数标签的使用可以允许以具有表达性，类似句子的方式调用函数，同时仍然提供可读且清晰的函数体。
</font></font></p>
  
</section>
<section class="section">
  <a name="//apple_ref/doc/uid/TP40014097-CH10-ID526"></a>
  <h3 class="section-name" tabindex="0"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">省略参数标签</font></font></h3>
  <p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  如果不需要参数的参数标签，请为该参数编写一个下划线（</font></font><code class="code-voice">_</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">）而不是显式参数标签。
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">func</span> <span class="vc">someFunction</span>(<span class="kt">_</span> <span class="vc">firstParameterName</span>: <span class="n"><!-- a href="" -->Int<!-- /a --></span>, <span class="vc">secondParameterName</span>: <span class="n"><!-- a href="" -->Int<!-- /a --></span>) {</code></li>
            <li><code class="code-voice">    <span class="c">// In the function body, firstParameterName and secondParameterName</span></code></li>
            <li><code class="code-voice">    <span class="c">// refer to the argument values for the first and second parameters.</span></code></li>
            <li><code class="code-voice">}</code></li>
            <li><code class="code-voice"><span class="vc">someFunction</span>(<span class="m">1</span>, <span class="vc">secondParameterName</span>: <span class="m">2</span>)</code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  如果参数具有参数标签，则</font><font style="vertical-align: inherit;">在调用函数时</font></font><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">必须</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">标记</font><font style="vertical-align: inherit;">该参数</font><font style="vertical-align: inherit;">。
</font></font></p>
  
</section>
<section class="section">
  <a name="//apple_ref/doc/uid/TP40014097-CH10-ID169"></a>
  <h3 class="section-name" tabindex="0"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">默认参数值</font></font></h3>
  <p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  您可以</font><font style="vertical-align: inherit;">通过在该参数的类型之后为该参数分配一个值来为函数中的任何参数</font><font style="vertical-align: inherit;">定义</font></font><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">默认值</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">如果定义了默认值，则可以在调用该函数时省略该参数。
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">func</span> <span class="vc">someFunction</span>(<span class="vc">parameterWithoutDefault</span>: <span class="n"><!-- a href="" -->Int<!-- /a --></span>, <span class="vc">parameterWithDefault</span>: <span class="n"><!-- a href="" -->Int<!-- /a --></span> = <span class="m">12</span>) {</code></li>
            <li><code class="code-voice">    <span class="c">// If you omit the second argument when calling this function, then</span></code></li>
            <li><code class="code-voice">    <span class="c">// the value of parameterWithDefault is 12 inside the function body.</span></code></li>
            <li><code class="code-voice">}</code></li>
            <li><code class="code-voice"><span class="vc">someFunction</span>(<span class="vc">parameterWithoutDefault</span>: <span class="m">3</span>, <span class="vc">parameterWithDefault</span>: <span class="m">6</span>) <span class="c">// parameterWithDefault is 6</span></code></li>
            <li><code class="code-voice"><span class="vc">someFunction</span>(<span class="vc">parameterWithoutDefault</span>: <span class="m">4</span>) <span class="c">// parameterWithDefault is 12</span></code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  在具有默认值的参数之前，将没有默认值的参数放置在函数参数列表的开头。</font><font style="vertical-align: inherit;">没有默认值的参数通常对函数的意义更重要 - 首先编写它们可以更容易地识别出调用了相同的函数，而不管是否省略任何默认参数。
</font></font></p>
  
</section>
<section class="section">
  <a name="//apple_ref/doc/uid/TP40014097-CH10-ID171"></a>
  <h3 class="section-name" tabindex="0"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">变量参数</font></font></h3>
  <p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  甲</font></font><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">可变参数参数</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">接受具有指定类型的零倍或更多的值。</font><font style="vertical-align: inherit;">您可以使用可变参数来指定在调用函数时可以传递不同数量的输入值。</font><font style="vertical-align: inherit;">通过</font></font><code class="code-voice">...</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">在参数的类型名称后面</font><font style="vertical-align: inherit;">插入三个句点字符（</font><font style="vertical-align: inherit;">）来</font><font style="vertical-align: inherit;">写入可变参数</font><font style="vertical-align: inherit;">。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  传递给可变参数的值可以在函数体内作为适当类型的数组使用。</font><font style="vertical-align: inherit;">例如，名称为</font></font><code class="code-voice">numbers</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">和类型的</font><font style="vertical-align: inherit;">可变参数</font></font><code class="code-voice">Double...</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">在函数体内可用作为</font></font><code class="code-voice">numbers</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">类型</font><font style="vertical-align: inherit;">的常量数组</font></font><code class="code-voice">[Double]</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  以下示例计算</font><font style="vertical-align: inherit;">任意长度的数字列表</font><font style="vertical-align: inherit;">的</font></font><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">算术平均值</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">（也称为</font></font><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">平均值</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">）：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">func</span> <span class="vc">arithmeticMean</span>(<span class="kt">_</span> <span class="vc">numbers</span>: <span class="n"><!-- a href="" -->Double<!-- /a --></span>...) -&gt; <span class="n"><!-- a href="" -->Double<!-- /a --></span> {</code></li>
            <li><code class="code-voice">    <span class="kt">var</span> <span class="vc">total</span>: <span class="n"><!-- a href="" -->Double<!-- /a --></span> = <span class="m">0</span></code></li>
            <li><code class="code-voice">    <span class="kt">for</span> <span class="vc">number</span> <span class="kt">in</span> <span class="vc">numbers</span> {</code></li>
            <li><code class="code-voice">        <span class="vc">total</span> += <span class="vc">number</span></code></li>
            <li><code class="code-voice">    }</code></li>
            <li><code class="code-voice">    <span class="kt">return</span> <span class="vc">total</span> / <span class="vc">Double</span>(<span class="vc">numbers</span>.<span class="vc">count</span>)</code></li>
            <li><code class="code-voice">}</code></li>
            <li><code class="code-voice"><span class="vc">arithmeticMean</span>(<span class="m">1</span>, <span class="m">2</span>, <span class="m">3</span>, <span class="m">4</span>, <span class="m">5</span>)</code></li>
            <li><code class="code-voice"><span class="c">// returns 3.0, which is the arithmetic mean of these five numbers</span></code></li>
            <li><code class="code-voice"><span class="vc">arithmeticMean</span>(<span class="m">3</span>, <span class="m">8.25</span>, <span class="m">18.75</span>)</code></li>
            <li><code class="code-voice"><span class="c">// returns 10.0, which is the arithmetic mean of these three numbers</span></code></li>
        </ol>
      </div>
  </div>
</section><div class="note">
  <a name="//apple_ref/doc/uid/TP40014097-CH10-NoLink_90"></a>
  <aside class="aside">
    <p class="aside-title"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">注意
    </font></font></p>
    	<p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">一个函数最多可以有一个可变参数。
    	</font></font></p>
    
  </aside>
</div>
  
</section>
<section class="section">
  <a name="//apple_ref/doc/uid/TP40014097-CH10-ID173"></a>
  <h3 class="section-name" tabindex="0"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">输入输出参数</font></font></h3>
  <p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  函数参数默认是常量。</font><font style="vertical-align: inherit;">试图从该函数体内更改函数参数的值会导致编译时错误。</font><font style="vertical-align: inherit;">这意味着你不能错误地改变参数的值。</font><font style="vertical-align: inherit;">如果您想要一个函数来修改参数的值，并且希望这些更改在函数调用结束后保持不变，请将该参数定义为输入</font></font><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">输出参数</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  通过将</font></font><code class="code-voice">inout</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">关键字</font><font style="vertical-align: inherit;">放置在</font><font style="vertical-align: inherit;">参数类型的前面</font><font style="vertical-align: inherit;">来编写输入</font><font style="vertical-align: inherit;">参数。</font><font style="vertical-align: inherit;">一个在出参数具有传递的值</font></font><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">中</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，由函数修改的功能，并将该部分送回</font></font><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">出</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">的功能来代替原来的值。</font><font style="vertical-align: inherit;">有关输入输出参数和相关编译器优化的详细讨论，请参阅</font></font><span class="x-name"><a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Declarations.html#//apple_ref/doc/uid/TP40014097-CH34-ID545" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH34-ID545"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">输入输出参数</font></font></a></span><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  您只能传递一个变量作为输入输出参数的参数。</font><font style="vertical-align: inherit;">您不能传递常量或文字值作为参数，因为常量和文字不能被修改。</font><font style="vertical-align: inherit;">将一个＆符号（</font></font><code class="code-voice">&amp;</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">）直接</font><font style="vertical-align: inherit;">放在</font><font style="vertical-align: inherit;">变量的名称前，并将其作为参数传递给一个输入输出参数，以表明它可以被该函数修改。
</font></font></p><div class="note">
  <a name="//apple_ref/doc/uid/TP40014097-CH10-NoLink_91"></a>
  <aside class="aside">
    <p class="aside-title"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">注意
    </font></font></p>
    	<p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">输入输出参数不能具有默认值，并且可变参数不能标记为</font></font><code class="code-voice">inout</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。
    	</font></font></p>
    
  </aside>
</div><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  这里的一个调用的函数的示例</font></font><code class="code-voice">swapTwoInts(_:_:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，其具有两个在出整数参数调用</font></font><code class="code-voice">a</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">和</font></font><code class="code-voice">b</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">func</span> <span class="vc">swapTwoInts</span>(<span class="kt">_</span> <span class="vc">a</span>: <span class="kt">inout</span> <span class="n"><!-- a href="" -->Int<!-- /a --></span>, <span class="kt">_</span> <span class="vc">b</span>: <span class="kt">inout</span> <span class="n"><!-- a href="" -->Int<!-- /a --></span>) {</code></li>
            <li><code class="code-voice">    <span class="kt">let</span> <span class="vc">temporaryA</span> = <span class="vc">a</span></code></li>
            <li><code class="code-voice">    <span class="vc">a</span> = <span class="vc">b</span></code></li>
            <li><code class="code-voice">    <span class="vc">b</span> = <span class="vc">temporaryA</span></code></li>
            <li><code class="code-voice">}</code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  该</font></font><code class="code-voice">swapTwoInts(_:_:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">函数只需将值</font></font><code class="code-voice">b</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">转换为</font></font><code class="code-voice">a</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，并将值</font></font><code class="code-voice">a</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">转换为</font></font><code class="code-voice">b</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">该函数通过将值存储</font></font><code class="code-voice">a</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">在一个名为临时常量中</font></font><code class="code-voice">temporaryA</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，将值赋值为</font></font><code class="code-voice">b</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">to </font></font><code class="code-voice">a</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，然后赋值</font></font><code class="code-voice">temporaryA</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">给</font><font style="vertical-align: inherit;">执行此交换</font></font><code class="code-voice">b</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  你可以</font></font><code class="code-voice">swapTwoInts(_:_:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">用两个类型的变量</font><font style="vertical-align: inherit;">来调用</font><font style="vertical-align: inherit;">函数</font></font><code class="code-voice">Int</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">来交换它们的值。</font><font style="vertical-align: inherit;">请注意，</font><font style="vertical-align: inherit;">当它们传递给</font><font style="vertical-align: inherit;">函数</font><font style="vertical-align: inherit;">时</font><font style="vertical-align: inherit;">，</font></font><code class="code-voice">someInt</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">和</font><font style="vertical-align: inherit;">的名称前</font></font><code class="code-voice">anotherInt</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">加一个＆符号</font></font><code class="code-voice">swapTwoInts(_:_:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">var</span> <span class="vc">someInt</span> = <span class="m">3</span></code></li>
            <li><code class="code-voice"><span class="kt">var</span> <span class="vc">anotherInt</span> = <span class="m">107</span></code></li>
            <li><code class="code-voice"><span class="vc">swapTwoInts</span>(&amp;<span class="vc">someInt</span>, &amp;<span class="vc">anotherInt</span>)</code></li>
            <li><code class="code-voice"><span class="vc">print</span>(<span class="s">"someInt is now </span>\(<span class="vc">someInt</span>)<span class="s">, and anotherInt is now </span>\(<span class="vc">anotherInt</span>)<span class="s">"</span>)</code></li>
            <li><code class="code-voice"><span class="c">// Prints "someInt is now 107, and anotherInt is now 3"</span></code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  上面的例子表明，</font><font style="vertical-align: inherit;">函数</font><font style="vertical-align: inherit;">的原始值</font></font><code class="code-voice">someInt</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">和</font></font><code class="code-voice">anotherInt</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">被</font></font><code class="code-voice">swapTwoInts(_:_:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">函数</font><font style="vertical-align: inherit;">修改</font><font style="vertical-align: inherit;">，尽管它们最初是在函数之外定义的。
</font></font></p><div class="note">
  <a name="//apple_ref/doc/uid/TP40014097-CH10-NoLink_92"></a>
  <aside class="aside">
    <p class="aside-title"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">注意
    </font></font></p>
    	<p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">输入输出参数与从函数返回值不同。</font><font style="vertical-align: inherit;">在</font></font><code class="code-voice">swapTwoInts</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">上面的例子不限定返回类型或返回值，但它仍然修改的值</font></font><code class="code-voice">someInt</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">和</font></font><code class="code-voice">anotherInt</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">输入输出参数是函数在函数体范围之外产生效果的替代方法。
    	</font></font></p>
    
  </aside>
</div>
  
</section>

</section>
<section class="section">
  <a name="//apple_ref/doc/uid/TP40014097-CH10-ID174"></a>
  <h3 class="section-name" tabindex="0"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">函数类型</font></font></h3>
  <p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  每个函数都有一个特定的</font></font><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">函数类型</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，由</font><em><font style="vertical-align: inherit;">函数</font></em><font style="vertical-align: inherit;">的参数类型和返回类型组成。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  例如：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">func</span> <span class="vc">addTwoInts</span>(<span class="kt">_</span> <span class="vc">a</span>: <span class="n"><!-- a href="" -->Int<!-- /a --></span>, <span class="kt">_</span> <span class="vc">b</span>: <span class="n"><!-- a href="" -->Int<!-- /a --></span>) -&gt; <span class="n"><!-- a href="" -->Int<!-- /a --></span> {</code></li>
            <li><code class="code-voice">    <span class="kt">return</span> <span class="vc">a</span> + <span class="vc">b</span></code></li>
            <li><code class="code-voice">}</code></li>
            <li><code class="code-voice"><span class="kt">func</span> <span class="vc">multiplyTwoInts</span>(<span class="kt">_</span> <span class="vc">a</span>: <span class="n"><!-- a href="" -->Int<!-- /a --></span>, <span class="kt">_</span> <span class="vc">b</span>: <span class="n"><!-- a href="" -->Int<!-- /a --></span>) -&gt; <span class="n"><!-- a href="" -->Int<!-- /a --></span> {</code></li>
            <li><code class="code-voice">    <span class="kt">return</span> <span class="vc">a</span> * <span class="vc">b</span></code></li>
            <li><code class="code-voice">}</code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  这个例子定义了两个简单的数学函数叫做</font></font><code class="code-voice">addTwoInts</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">和</font></font><code class="code-voice">multiplyTwoInts</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">这些函数每个都取两个</font></font><code class="code-voice">Int</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">值，并返回一个</font></font><code class="code-voice">Int</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">值，这是执行适当的数学运算的结果。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  这两种功能的类型是</font></font><code class="code-voice">(Int, Int) -&gt; Int</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">这可以理解为：
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  “一个函数有两个参数，都是类型</font></font><code class="code-voice">Int</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，并返回一个类型的值</font></font><code class="code-voice">Int</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。”
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  下面是另一个例子，对于没有参数或返回值的函数：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">func</span> <span class="vc">printHelloWorld</span>() {</code></li>
            <li><code class="code-voice">    <span class="vc">print</span>(<span class="s">"hello, world"</span>)</code></li>
            <li><code class="code-voice">}</code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  这个函数的类型是</font></font><code class="code-voice">() -&gt; Void</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，或“一个没有参数并返回的函数</font></font><code class="code-voice">Void</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">”。
</font></font></p>
  <section class="section">
  <a name="//apple_ref/doc/uid/TP40014097-CH10-ID175"></a>
  <h3 class="section-name" tabindex="0"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">使用函数类型</font></font></h3>
  <p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  您可以像使用Swift中的其他类型一样使用函数类型。</font><font style="vertical-align: inherit;">例如，您可以将常量或变量定义为函数类型，并为该变量分配一个适当的函数：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">var</span> <span class="vc">mathFunction</span>: (<span class="n"><!-- a href="" -->Int<!-- /a --></span>, <span class="n"><!-- a href="" -->Int<!-- /a --></span>) -&gt; <span class="n"><!-- a href="" -->Int<!-- /a --></span> = <span class="vc">addTwoInts</span></code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  这可以理解为：
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  “定义一个名为的变量</font></font><code class="code-voice">mathFunction</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，它具有一个'具有两个</font></font><code class="code-voice">Int</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">值</font><font style="vertical-align: inherit;">的函数</font><font style="vertical-align: inherit;">，并返回一个</font></font><code class="code-voice">Int</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">值'。</font><font style="vertical-align: inherit;">设置这个新变量来引用被调用的函数</font></font><code class="code-voice">addTwoInts</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。“
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  该</font></font><code class="code-voice">addTwoInts(_:_:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">函数的类型与该</font></font><code class="code-voice">mathFunction</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">变量的</font><font style="vertical-align: inherit;">类型相同</font><font style="vertical-align: inherit;">，因此Swift的类型检查程序允许此分配。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  您现在可以使用名称来调用指定的功能</font></font><code class="code-voice">mathFunction</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="vc">print</span>(<span class="s">"Result: </span>\(<span class="vc">mathFunction</span>(<span class="m">2</span>, <span class="m">3</span>))<span class="s">"</span>)</code></li>
            <li><code class="code-voice"><span class="c">// Prints "Result: 5"</span></code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  具有相同匹配类型的不同函数可以分配给相同的变量，方式与非函数类型相同：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="vc">mathFunction</span> = <span class="vc">multiplyTwoInts</span></code></li>
            <li><code class="code-voice"><span class="vc">print</span>(<span class="s">"Result: </span>\(<span class="vc">mathFunction</span>(<span class="m">2</span>, <span class="m">3</span>))<span class="s">"</span>)</code></li>
            <li><code class="code-voice"><span class="c">// Prints "Result: 6"</span></code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  和任何其他类型一样，当你给函数赋予一个常量或变量时，你可以让Swift来推断函数类型：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">let</span> <span class="vc">anotherMathFunction</span> = <span class="vc">addTwoInts</span></code></li>
            <li><code class="code-voice"><span class="c">// anotherMathFunction is inferred to be of type (Int, Int) -&gt; Int</span></code></li>
        </ol>
      </div>
  </div>
</section>
  
</section>
<section class="section">
  <a name="//apple_ref/doc/uid/TP40014097-CH10-ID176"></a>
  <h3 class="section-name" tabindex="0"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">函数类型作为参数类型</font></font></h3>
  <p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  您可以将函数类型用作</font></font><code class="code-voice">(Int, Int) -&gt; Int</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">另一个函数的参数类型。</font><font style="vertical-align: inherit;">这使您可以为函数的调用者保留函数实现的某些方面，以提供该函数何时被调用。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  下面是一个打印上面的数学函数结果的例子：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">func</span> <span class="vc">printMathResult</span>(<span class="kt">_</span> <span class="vc">mathFunction</span>: (<span class="n"><!-- a href="" -->Int<!-- /a --></span>, <span class="n"><!-- a href="" -->Int<!-- /a --></span>) -&gt; <span class="n"><!-- a href="" -->Int<!-- /a --></span>, <span class="kt">_</span> <span class="vc">a</span>: <span class="n"><!-- a href="" -->Int<!-- /a --></span>, <span class="kt">_</span> <span class="vc">b</span>: <span class="n"><!-- a href="" -->Int<!-- /a --></span>) {</code></li>
            <li><code class="code-voice">    <span class="vc">print</span>(<span class="s">"Result: </span>\(<span class="vc">mathFunction</span>(<span class="vc">a</span>, <span class="vc">b</span>))<span class="s">"</span>)</code></li>
            <li><code class="code-voice">}</code></li>
            <li><code class="code-voice"><span class="vc">printMathResult</span>(<span class="vc">addTwoInts</span>, <span class="m">3</span>, <span class="m">5</span>)</code></li>
            <li><code class="code-voice"><span class="c">// Prints "Result: 8"</span></code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  这个例子定义了一个叫做的函数</font></font><code class="code-voice">printMathResult(_:_:_:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，它有三个参数。</font><font style="vertical-align: inherit;">第一个参数被调用</font></font><code class="code-voice">mathFunction</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，并且是类型的</font></font><code class="code-voice">(Int, Int) -&gt; Int</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">您可以传递该类型的任何函数作为第一个参数的参数。</font><font style="vertical-align: inherit;">第二和第三参数被称为</font></font><code class="code-voice">a</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">和</font></font><code class="code-voice">b</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，且都是类型的</font></font><code class="code-voice">Int</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">这些被用作提供的数学函数的两个输入值。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  当</font></font><code class="code-voice">printMathResult(_:_:_:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">被调用时，它会传递</font></font><code class="code-voice">addTwoInts(_:_:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">函数，以及整数值</font></font><code class="code-voice">3</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">和</font></font><code class="code-voice">5</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">它与值调用提供的函数</font></font><code class="code-voice">3</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">和</font></font><code class="code-voice">5</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，并打印结果</font></font><code class="code-voice">8</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  其作用</font></font><code class="code-voice">printMathResult(_:_:_:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">是将调用的结果打印到适当类型的数学函数中。</font><font style="vertical-align: inherit;">这个函数的实现实际上并不重要，只是函数的类型是正确的。</font><font style="vertical-align: inherit;">这样可以</font></font><code class="code-voice">printMathResult(_:_:_:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">以类型安全的方式将其某些功能交给功能的调用者。
</font></font></p>
  
</section>
<section class="section">
  <a name="//apple_ref/doc/uid/TP40014097-CH10-ID177"></a>
  <h3 class="section-name" tabindex="0"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">函数类型作为返回类型</font></font></h3>
  <p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  您可以使用函数类型作为另一个函数的返回类型。</font><font style="vertical-align: inherit;">您可以通过</font></font><code class="code-voice">-&gt;</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">在返回函数</font><font style="vertical-align: inherit;">的返回箭头（</font><font style="vertical-align: inherit;">）</font><font style="vertical-align: inherit;">之后立即编写完整的函数类型来完成此操作</font><font style="vertical-align: inherit;">。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  下一个例子定义了两个简单的函数叫做</font></font><code class="code-voice">stepForward(_:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">和</font></font><code class="code-voice">stepBackward(_:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">该</font></font><code class="code-voice">stepForward(_:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">函数返回一个比其输入值多一个值，并且该</font></font><code class="code-voice">stepBackward(_:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">函数返回一个小于其输入值的值。</font><font style="vertical-align: inherit;">这两个函数都有一个类型</font></font><code class="code-voice">(Int) -&gt; Int</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">func</span> <span class="vc">stepForward</span>(<span class="kt">_</span> <span class="vc">input</span>: <span class="n"><!-- a href="" -->Int<!-- /a --></span>) -&gt; <span class="n"><!-- a href="" -->Int<!-- /a --></span> {</code></li>
            <li><code class="code-voice">    <span class="kt">return</span> <span class="vc">input</span> + <span class="m">1</span></code></li>
            <li><code class="code-voice">}</code></li>
            <li><code class="code-voice"><span class="kt">func</span> <span class="vc">stepBackward</span>(<span class="kt">_</span> <span class="vc">input</span>: <span class="n"><!-- a href="" -->Int<!-- /a --></span>) -&gt; <span class="n"><!-- a href="" -->Int<!-- /a --></span> {</code></li>
            <li><code class="code-voice">    <span class="kt">return</span> <span class="vc">input</span> - <span class="m">1</span></code></li>
            <li><code class="code-voice">}</code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  这是一个叫做的函数</font></font><code class="code-voice">chooseStepFunction(backward:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，它的返回类型是</font></font><code class="code-voice">(Int) -&gt; Int</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">该</font></font><code class="code-voice">chooseStepFunction(backward:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">函数</font><font style="vertical-align: inherit;">基于一个布尔参数调用</font><font style="vertical-align: inherit;">返回</font></font><code class="code-voice">stepForward(_:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">函数或</font></font><code class="code-voice">stepBackward(_:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">函数</font></font><code class="code-voice">backward</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">func</span> <span class="vc">chooseStepFunction</span>(<span class="vc">backward</span>: <span class="n"><!-- a href="" -->Bool<!-- /a --></span>) -&gt; (<span class="n"><!-- a href="" -->Int<!-- /a --></span>) -&gt; <span class="n"><!-- a href="" -->Int<!-- /a --></span> {</code></li>
            <li><code class="code-voice">    <span class="kt">return</span> <span class="vc">backward</span> ? <span class="vc">stepBackward</span> : <span class="vc">stepForward</span></code></li>
            <li><code class="code-voice">}</code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  你现在可以</font></font><code class="code-voice">chooseStepFunction(backward:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">用来获得一个方向或另一个方向的功能：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">var</span> <span class="vc">currentValue</span> = <span class="m">3</span></code></li>
            <li><code class="code-voice"><span class="kt">let</span> <span class="vc">moveNearerToZero</span> = <span class="vc">chooseStepFunction</span>(<span class="vc">backward</span>: <span class="vc">currentValue</span> &gt; <span class="m">0</span>)</code></li>
            <li><code class="code-voice"><span class="c">// moveNearerToZero now refers to the stepBackward() function</span></code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  前面的例子确定是否需要一个正的或负的步骤来将</font></font><code class="code-voice">currentValue</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">逐渐</font><font style="vertical-align: inherit;">调用的变量</font><font style="vertical-align: inherit;">移近零。</font></font><code class="code-voice">currentValue</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">有一个初始值</font></font><code class="code-voice">3</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，这意味着</font></font><code class="code-voice">currentValue &gt; 0</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">返回</font></font><code class="code-voice">true</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，导致</font></font><code class="code-voice">chooseStepFunction(backward:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">返回该</font></font><code class="code-voice">stepBackward(_:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">函数。</font><font style="vertical-align: inherit;">对返回函数的引用存储在一个调用的常量中</font></font><code class="code-voice">moveNearerToZero</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  现在</font></font><code class="code-voice">moveNearerToZero</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">指的是正确的功能，它可以用来计数到零：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="vc">print</span>(<span class="s">"Counting to zero:"</span>)</code></li>
            <li><code class="code-voice"><span class="c">// Counting to zero:</span></code></li>
            <li><code class="code-voice"><span class="kt">while</span> <span class="vc">currentValue</span> != <span class="m">0</span> {</code></li>
            <li><code class="code-voice">    <span class="vc">print</span>(<span class="s">"</span>\(<span class="vc">currentValue</span>)<span class="s">... "</span>)</code></li>
            <li><code class="code-voice">    <span class="vc">currentValue</span> = <span class="vc">moveNearerToZero</span>(<span class="vc">currentValue</span>)</code></li>
            <li><code class="code-voice">}</code></li>
            <li><code class="code-voice"><span class="vc">print</span>(<span class="s">"zero!"</span>)</code></li>
            <li><code class="code-voice"><span class="c">// 3...</span></code></li>
            <li><code class="code-voice"><span class="c">// 2...</span></code></li>
            <li><code class="code-voice"><span class="c">// 1...</span></code></li>
            <li><code class="code-voice"><span class="c">// zero!</span></code></li>
        </ol>
      </div>
  </div>
</section>
  
</section>

</section>
<section class="section">
  <a name="//apple_ref/doc/uid/TP40014097-CH10-ID178"></a>
  <h3 class="section-name" tabindex="0"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">嵌套函数</font></font></h3>
  <p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  本章到目前为止所遇到的所有功能</font><font style="vertical-align: inherit;">都是在全球范围内定义</font><font style="vertical-align: inherit;">的</font></font><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">全局功能的</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">示例</font><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">您还可以在其他函数的主体内定义函数，称为</font></font><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">嵌套函数</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  嵌套函数在默认情况下对外部世界隐藏，但仍然可以通过其封闭函数调用和使用。</font><font style="vertical-align: inherit;">封闭函数也可以返回其嵌套函数之一，以允许嵌套函数在另一个作用域中使用。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  你可以重写</font></font><code class="code-voice">chooseStepFunction(backward:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">上面</font><font style="vertical-align: inherit;">的</font><font style="vertical-align: inherit;">例子来使用并返回嵌套函数：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">func</span> <span class="vc">chooseStepFunction</span>(<span class="vc">backward</span>: <span class="n"><!-- a href="" -->Bool<!-- /a --></span>) -&gt; (<span class="n"><!-- a href="" -->Int<!-- /a --></span>) -&gt; <span class="n"><!-- a href="" -->Int<!-- /a --></span> {</code></li>
            <li><code class="code-voice">    <span class="kt">func</span> <span class="vc">stepForward</span>(<span class="vc">input</span>: <span class="n"><!-- a href="" -->Int<!-- /a --></span>) -&gt; <span class="n"><!-- a href="" -->Int<!-- /a --></span> { <span class="kt">return</span> <span class="vc">input</span> + <span class="m">1</span> }</code></li>
            <li><code class="code-voice">    <span class="kt">func</span> <span class="vc">stepBackward</span>(<span class="vc">input</span>: <span class="n"><!-- a href="" -->Int<!-- /a --></span>) -&gt; <span class="n"><!-- a href="" -->Int<!-- /a --></span> { <span class="kt">return</span> <span class="vc">input</span> - <span class="m">1</span> }</code></li>
            <li><code class="code-voice">    <span class="kt">return</span> <span class="vc">backward</span> ? <span class="vc">stepBackward</span> : <span class="vc">stepForward</span></code></li>
            <li><code class="code-voice">}</code></li>
            <li><code class="code-voice"><span class="kt">var</span> <span class="vc">currentValue</span> = <span class="m">-4</span></code></li>
            <li><code class="code-voice"><span class="kt">let</span> <span class="vc">moveNearerToZero</span> = <span class="vc">chooseStepFunction</span>(<span class="vc">backward</span>: <span class="vc">currentValue</span> &gt; <span class="m">0</span>)</code></li>
            <li><code class="code-voice"><span class="c">// moveNearerToZero now refers to the nested stepForward() function</span></code></li>
            <li><code class="code-voice"><span class="kt">while</span> <span class="vc">currentValue</span> != <span class="m">0</span> {</code></li>
            <li><code class="code-voice">    <span class="vc">print</span>(<span class="s">"</span>\(<span class="vc">currentValue</span>)<span class="s">... "</span>)</code></li>
            <li><code class="code-voice">    <span class="vc">currentValue</span> = <span class="vc">moveNearerToZero</span>(<span class="vc">currentValue</span>)</code></li>
            <li><code class="code-voice">}</code></li>
            <li><code class="code-voice"><span class="vc">print</span>(<span class="s">"zero!"</span>)</code></li>
            <li><code class="code-voice"><span class="c">// -4...</span></code></li>
            <li><code class="code-voice"><span class="c">// -3...</span></code></li>
            <li><code class="code-voice"><span class="c">// -2...</span></code></li>
            <li><code class="code-voice"><span class="c">// -1...</span></code></li>
            <li><code class="code-voice"><span class="c">// zero!</span></code></li>
        </ol>
      </div>
  </div>
</section>
  
</section>

  	
 	<section id="next_previous" class="">
    		<p class="previous-link"><a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/ControlFlow.html#//apple_ref/doc/uid/TP40014097-CH9-ID120" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH9-ID120"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">控制流</font></font></a></p>
  			<p class="next-link"><a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Closures.html#//apple_ref/doc/uid/TP40014097-CH11-ID94" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH11-ID94"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">关闭</font></font></a></p>

    <p class="copyright"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Copyright©2018 Apple Inc.保留所有权利。 
  </font></font><a class="link" href="http://www.apple.com/legal/terms/site.html" target="_blank" rel="external"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">使用条款</font></font></a><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> | 
  </font></font><a class="link" href="http://www.apple.com/privacy/" target="_blank" rel="external"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">隐私政策</font></font></a><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> | </font><font style="vertical-align: inherit;">更新日期：2018-02-20
</font></font></p>
  </section>
</article>

    </div>
    <div id="big_button"></div>
    <footer id="footer">
  <div class="content-wrapper">
  	<div id="leave_feedback" class="button" role="button" tabindex="0"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">反馈</font></font></div>
  </div>
  <script src="./The Swift Programming Language (Swift 4.1)_ 功能_files/devpubs-1.6.3.js" type="text/javascript" charset="utf-8"></script>
  <script src="./The Swift Programming Language (Swift 4.1)_ 功能_files/feedback-1.6.3.js" type="text/javascript" charset="utf-8"></script>
  <div id="_omniture_top">
<!-- SiteCatalyst code version: H.8. Copyright 1997-2006 Omniture, Inc. -->
<script type="text/javascript">
/* RSID: */
var s_account="appleglobal,appleusdeveloper,dappdeveloperlib"
</script>

<script type="text/javascript" src="./The Swift Programming Language (Swift 4.1)_ 功能_files/s_code_h.js"></script>
<script type="text/javascript">
s.pageName=AC.Tracking.pageName();
s.channel="www.us.developer"

/************* DO NOT ALTER ANYTHING BELOW THIS LINE ! **************/
var s_code=s.t();if(s_code)document.write(s_code)</script>
<!-- End SiteCatalyst code version: H.8. -->
</div>

</footer>

    
  
    <div id="blackout">
    <div id="preload"></div>
</div>
<div id="modal" aria-hidden="true">
    <div id="closebox" tabindex="0" aria-label="Close feedback form" role="button"></div>
    <div id="sending" class="hidden">
        <h2 tabindex="0">Sending feedback…</h2>
        <div id="sending_img"></div>
    </div>
    <div id="error" class="hidden">
        <h2 tabindex="0">We’re sorry, an error has occurred.</h2>
        <p>Please try submitting your feedback later.</p>
        <div id="error_icon"></div>
    </div>
    <div id="success" class="hidden">
        <h2 tabindex="0">Thank you for providing feedback!</h2>
        <p>Your input helps improve our developer documentation.</p>
        <div id="thank_you_icon"></div>
    </div>
    
    <form id="feedback" action="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Functions.html#" method="post">
        <div class="left-leaf">
            <h2 id="helpful_title" data-asterisk="a1" tabindex="0"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">这份文件有多大帮助？</font></font></h2>     
            <sup id="a1" class="asterisk" aria-hidden="true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">*</font></font></sup>

            <div id="star_group" role="radiogroup" aria-required="true">
                <label> 
                    <input class="radio" type="radio" name="helped" value="1"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> 
                    很有帮助
                </font></font></label>
                <label> 
                    <input class="radio" type="radio" name="helped" value="2"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> 
                    有点帮助
                </font></font></label>
                <label>
                    <input class="radio" type="radio" name="helped" value="3"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> 
                    没有帮助
                </font></font></label>
            </div>
        </div>
        <div class="right-leaf">
            <h2><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">我们如何改进这个文件？</font></font></h2>
            <div id="improve" class="checkboxes">
                <label>
                    <input type="checkbox" name="typo"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> 
                    修正错别字或链接
                </font></font></label>
                <label>
                    <input type="checkbox" name="infoIncorrect"> 
                    Fix incorrect information
                </label>
                <label>
                    <input type="checkbox" name="needs_examples"> 
                    Add or update code samples
                </label>
                <label>
                    <input type="checkbox" name="needs_art"> 
                    Add or update illustrations
                </label>
                <label>
                    <input type="checkbox" name="missingInfo"> 
                    Add information about...
                </label>
            </div>
        </div>

        <textarea id="comment" name="problem" cols="70" rows="8" placeholder="Please tell us more about your experience with this document" data-asterisk="a2" required=""></textarea>
        <sup id="a2" class="asterisk" aria-hidden="true">*</sup>

        <p class="fineprint">
            <em aria-hidden="true"><span>*</span> Required information</em>
        </p> 

        <input id="submit" type="button" value="Send">

        <section id="legal">
            <p>
                To submit a product bug or enhancement request, please visit the 
                <a href="https://developer.apple.com/bugreporter/" target="_blank">Bug Reporter</a> 
                page.
            </p>
            <p>
                Please read <a href="http://www.apple.com/legal/policies/ideas.html" target="_blank">Apple's Unsolicited Idea Submission Policy</a> 
                before you send us your feedback.
            </p> 
        </section>
    </form>
</div><div id="goog-gt-tt" class="skiptranslate" dir="ltr"><div style="padding: 8px;"><div><div class="logo"><img src="./The Swift Programming Language (Swift 4.1)_ 功能_files/translate_24dp.png" width="20" height="20" alt="Google 翻译"></div></div></div><div class="top" style="padding: 8px; float: left; width: 100%;"><h1 class="title gray">原文</h1></div><div class="middle" style="padding: 8px;"><div class="original-text"></div></div><div class="bottom" style="padding: 8px;"><div class="activity-links"><span class="activity-link">提供更好的翻译建议</span><span class="activity-link"></span></div><div class="started-activity-container"><hr style="color: #CCC; background-color: #CCC; height: 1px; border: none;"><div class="activity-root"></div></div></div><div class="status-message" style="display: none;"></div></div>



<div class="goog-te-spinner-pos"><div class="goog-te-spinner-animation"><svg xmlns="http://www.w3.org/2000/svg" class="goog-te-spinner" width="96px" height="96px" viewBox="0 0 66 66"><circle class="goog-te-spinner-path" fill="none" stroke-width="6" stroke-linecap="round" cx="33" cy="33" r="30"></circle></svg></div></div></body></html>