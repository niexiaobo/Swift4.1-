<!DOCTYPE html>
<!-- saved from url=(0158)https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Protocols.html#//apple_ref/doc/uid/TP40014097-CH25-ID267 -->
<html lang="en" class="translated-ltr"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">  
  <title>The Swift Programming Language (Swift 4.1): Protocols</title>
  <link rel="stylesheet" type="text/css" href="./The Swift Programming Language (Swift 4.1)_协议_files/style-1.6.3.css">
  <link rel="stylesheet" type="text/css" href="./The Swift Programming Language (Swift 4.1)_协议_files/feedback-1.6.3.css">
   
<meta id="j-version" name="j-version" content="">
<meta id="build" name="build" content="2cff7ac52859143a0b42c92c22d84718">
<meta id="document-version" name="document-version" content="10.3.3">
<meta id="book-assignments" name="book-assignments" content="{Type/Guide}, {Topic/Swift}">
<meta scheme="apple_ref" id="identifier" name="identifier" content="//apple_ref/doc/uid/TP40014097">
<meta id="chapterId" name="chapterId" content="TP40014097-CH25">
<meta id="book-title" name="book-title" content="The Swift Programming Language (Swift 4.1)">
<meta id="book-resource-type" name="book-resource-type" content="Guide">
<meta id="book-root" name="book-root" content="./">
<meta id="book-json" name="book-json" content="book.json">
<meta id="date" name="date" content="2018-02-20">
<meta id="description" name="description" content="The definitive guide to Swift, Apple’s programming language for building iOS, macOS, watchOS, and tvOS apps.">
<meta id="IndexTitle" name="IndexTitle" content="">
<meta id="resources-uri" name="resources-uri" content="../../../../Resources/1277">
<link id="book-index-page" rel="Start" title="" type="text/html" href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/index.html">
<!-- , next_chapter: next_chapter, previous_chapter: previous_chapter -->
<link id="next-page" rel="Next" type="text/html" href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Protocols.html">
<link id="previous-page" rel="Prev" type="text/html" href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Protocols.html">
<meta id="devcenter" name="devcenter" content="&lt;!-- DEVCENTER_NAME --&gt;">
<meta id="devcenter-url" name="devcenter-url" content="&lt;!-- DEVCENTER_URL --&gt;">
<meta id="reflib" name="reflib" content="&lt;!-- REFLIB_NAME --&gt;">

<meta id="xcode-display" name="xcode-display" content="render">
<meta name="apple-mobile-web-app-capable" content="yes">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0">
<meta id="platforms" name="platforms" content="Xcode Developer Tools">
<link type="text/css" rel="stylesheet" charset="UTF-8" href="./The Swift Programming Language (Swift 4.1)_协议_files/translateelement.css"></head>

  <body id="conceptual_flow_with_tasks" class="jazz">
    
    <header id="ios_header" class="hideOnPrint hideInXcode">
  <div class="content-wrapper">
    <p class="header-text">
    	<a href="https://developer.apple.com/library/content/navigation/" onclick="s_objectID=&quot;https://developer.apple.com/library/content/navigation/_1&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">指南和示例代码
 		</font></font></a>
 </p>
    <p id="wwdr"><img id="apple_logo" src="./The Swift Programming Language (Swift 4.1)_协议_files/apple2.png" height="14px" width="12px" aria-hidden="true"><a href="https://developer.apple.com/" onclick="s_objectID=&quot;https://developer.apple.com/_1&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">开发人员</font></font></a></p>
  </div>
</header>

    <section id="valence">
  <div class="content-wrapper">
    <p id="hierarchial_navigation">
      <span id="book_title"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Swift编程语言（Swift 4.1）</font></font></span>
    </p>
    <form id="search" class="hideInXcode" method="get" action="https://developer.apple.com/search/index.php" accept-charset="utf-8" autocomplete="off">
  <input type="search" id="ssi_SearchField" placeholder="Search Guides and Sample Code" name="q" autocomplete="off" tabindex="2">
</form>

      
   
   




    <span class="download-text hideInXcode">
      <a href="https://itunes.apple.com/us/book/the-swift-programming-language/id1002622538?mt=11" onclick="s_objectID=&quot;https://itunes.apple.com/us/book/the-swift-programming-language/id1002622538?mt=11_1&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">的iBooks</font></font></a>
    </span>

    

    <img id="shortstack" src="./The Swift Programming Language (Swift 4.1)_协议_files/shortstack_2x.png">
  </div>
</section>
    <div class="content-wrapper">
      <nav id="navigator" class="book-parts hideInXcode" role="navigation">
    <ul class="nav-parts">
        <li data-id="//apple_ref/doc/uid/TP40014097-CH1-ID2" class="part-name">
            <a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/index.html#//apple_ref/doc/uid/TP40014097-CH3-ID0" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH3-ID0" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_1&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">欢迎来到Swift</font></font></a>
          <ul class="nav-chapters">
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/index.html#//apple_ref/doc/uid/TP40014097-CH3-ID0" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH3-ID0" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_2&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">关于Swift</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Compatibility.html#//apple_ref/doc/uid/TP40014097-CH45-ID561" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH45-ID561" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_3&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">版本兼容性</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/GuidedTour.html#//apple_ref/doc/uid/TP40014097-CH2-ID1" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH2-ID1" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_4&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">快速游览</font></font></a>
              </li>
          </ul>
        </li>
        <li data-id="//apple_ref/doc/uid/TP40014097-CH4-ID233" class="part-name nav-part-active open-part">
            <a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/TheBasics.html#//apple_ref/doc/uid/TP40014097-CH5-ID309" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH5-ID309" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_5&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">语言指南</font></font></a>
          <ul class="nav-chapters">
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/TheBasics.html#//apple_ref/doc/uid/TP40014097-CH5-ID309" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH5-ID309" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_6&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">基础</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/BasicOperators.html#//apple_ref/doc/uid/TP40014097-CH6-ID60" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH6-ID60" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_7&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">基本操作员</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/StringsAndCharacters.html#//apple_ref/doc/uid/TP40014097-CH7-ID285" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH7-ID285" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_8&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">字符串和字符</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/CollectionTypes.html#//apple_ref/doc/uid/TP40014097-CH8-ID105" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH8-ID105" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_9&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">集合类型</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/ControlFlow.html#//apple_ref/doc/uid/TP40014097-CH9-ID120" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH9-ID120" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_10&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">控制流</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Functions.html#//apple_ref/doc/uid/TP40014097-CH10-ID158" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH10-ID158" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_11&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">功能</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Closures.html#//apple_ref/doc/uid/TP40014097-CH11-ID94" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH11-ID94" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_12&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">关闭</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Enumerations.html#//apple_ref/doc/uid/TP40014097-CH12-ID145" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH12-ID145" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_13&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">枚举</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/ClassesAndStructures.html#//apple_ref/doc/uid/TP40014097-CH13-ID82" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH13-ID82" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_14&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">类和结构</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Properties.html#//apple_ref/doc/uid/TP40014097-CH14-ID254" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH14-ID254" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_15&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">属性</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Methods.html#//apple_ref/doc/uid/TP40014097-CH15-ID234" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH15-ID234" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_16&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">方法</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Subscripts.html#//apple_ref/doc/uid/TP40014097-CH16-ID305" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH16-ID305" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_17&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">标</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Inheritance.html#//apple_ref/doc/uid/TP40014097-CH17-ID193" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH17-ID193" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_18&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">遗产</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Initialization.html#//apple_ref/doc/uid/TP40014097-CH18-ID203" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH18-ID203" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_19&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">初始化</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Deinitialization.html#//apple_ref/doc/uid/TP40014097-CH19-ID142" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH19-ID142" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_20&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">反初始化</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/OptionalChaining.html#//apple_ref/doc/uid/TP40014097-CH21-ID245" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH21-ID245" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_21&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">可选链接</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/ErrorHandling.html#//apple_ref/doc/uid/TP40014097-CH42-ID508" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH42-ID508" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_22&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">错误处理</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/TypeCasting.html#//apple_ref/doc/uid/TP40014097-CH22-ID338" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH22-ID338" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_23&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">类型铸造</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/NestedTypes.html#//apple_ref/doc/uid/TP40014097-CH23-ID242" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH23-ID242" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_24&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">嵌套类型</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Extensions.html#//apple_ref/doc/uid/TP40014097-CH24-ID151" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH24-ID151" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_25&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">扩展</font></font></a>
              </li>
              <li class="nav-chapter nav-current-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Protocols.html#//apple_ref/doc/uid/TP40014097-CH25-ID267" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH25-ID267" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_26&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">协议</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Generics.html#//apple_ref/doc/uid/TP40014097-CH26-ID179" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH26-ID179" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_27&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">泛型</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/AutomaticReferenceCounting.html#//apple_ref/doc/uid/TP40014097-CH20-ID48" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH20-ID48" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_28&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">自动引用计数</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/MemorySafety.html#//apple_ref/doc/uid/TP40014097-CH46-ID567" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH46-ID567" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_29&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">内存安全</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/AccessControl.html#//apple_ref/doc/uid/TP40014097-CH41-ID3" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH41-ID3" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_30&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">访问控制</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/AdvancedOperators.html#//apple_ref/doc/uid/TP40014097-CH27-ID28" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH27-ID28" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_31&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">高级操作员</font></font></a>
              </li>
          </ul>
        </li>
        <li data-id="//apple_ref/doc/uid/TP40014097-CH28-ID427" class="part-name">
            <a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/AboutTheLanguageReference.html#//apple_ref/doc/uid/TP40014097-CH29-ID345" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH29-ID345" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_32&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">语言参考</font></font></a>
          <ul class="nav-chapters">
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/AboutTheLanguageReference.html#//apple_ref/doc/uid/TP40014097-CH29-ID345" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH29-ID345" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_33&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">关于语言参考</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/LexicalStructure.html#//apple_ref/doc/uid/TP40014097-CH30-ID410" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH30-ID410" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_34&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">词汇结构</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Types.html#//apple_ref/doc/uid/TP40014097-CH31-ID445" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH31-ID445" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_35&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">类型</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Expressions.html#//apple_ref/doc/uid/TP40014097-CH32-ID383" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH32-ID383" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_36&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">表达式</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Statements.html#//apple_ref/doc/uid/TP40014097-CH33-ID428" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH33-ID428" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_37&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">声明</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Declarations.html#//apple_ref/doc/uid/TP40014097-CH34-ID351" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH34-ID351" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_38&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">声明</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Attributes.html#//apple_ref/doc/uid/TP40014097-CH35-ID347" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH35-ID347" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_39&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">属性</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Patterns.html#//apple_ref/doc/uid/TP40014097-CH36-ID419" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH36-ID419" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_40&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">模式</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/GenericParametersAndArguments.html#//apple_ref/doc/uid/TP40014097-CH37-ID406" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH37-ID406" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_41&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">通用参数和参数</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/zzSummaryOfTheGrammar.html#//apple_ref/doc/uid/TP40014097-CH38-ID458" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH38-ID458" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_42&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">语法概要</font></font></a>
              </li>
          </ul>
        </li>
        <li data-id="//apple_ref/doc/uid/TP40014097-CH39-ID460" class="part-name">
            <a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/RevisionHistory.html#//apple_ref/doc/uid/TP40014097-CH40-ID459" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH40-ID459" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_43&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">修订记录</font></font></a>
          <ul class="nav-chapters">
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/RevisionHistory.html#//apple_ref/doc/uid/TP40014097-CH40-ID459" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH40-ID459" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_44&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">文档修订历史</font></font></a>
              </li>
          </ul>
        </li>
    </ul>
</nav>

      <menu id="bashful" type="toolbar">
  <div class="shield"></div>
  <menuitem id="jump_to" class="menu-bar-item closed">
  <span><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">在本页</font></font></span>
  <div class="chevron">
    <div class="chevy chevron-left"></div>
    <div class="chevy chevron-right"></div>
  </div>
  <menu type="list" class="details">
      <ul class="list-bullet">
          <li class="item">
            <a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Protocols.html#//apple_ref/doc/uid/TP40014097-CH25-ID268" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_45&quot;;return this.s_oc?this.s_oc(e):true">Protocol Syntax</a>
          </li>
          <li class="item">
            <a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Protocols.html#//apple_ref/doc/uid/TP40014097-CH25-ID269" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_46&quot;;return this.s_oc?this.s_oc(e):true">Property Requirements</a>
          </li>
          <li class="item">
            <a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Protocols.html#//apple_ref/doc/uid/TP40014097-CH25-ID270" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_47&quot;;return this.s_oc?this.s_oc(e):true">Method Requirements</a>
          </li>
          <li class="item">
            <a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Protocols.html#//apple_ref/doc/uid/TP40014097-CH25-ID271" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_48&quot;;return this.s_oc?this.s_oc(e):true">Mutating Method Requirements</a>
          </li>
          <li class="item">
            <a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Protocols.html#//apple_ref/doc/uid/TP40014097-CH25-ID272" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_49&quot;;return this.s_oc?this.s_oc(e):true">Initializer Requirements</a>
          </li>
          <li class="item">
            <a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Protocols.html#//apple_ref/doc/uid/TP40014097-CH25-ID275" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_50&quot;;return this.s_oc?this.s_oc(e):true">Protocols as Types</a>
          </li>
          <li class="item">
            <a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Protocols.html#//apple_ref/doc/uid/TP40014097-CH25-ID276" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_51&quot;;return this.s_oc?this.s_oc(e):true">Delegation</a>
          </li>
          <li class="item">
            <a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Protocols.html#//apple_ref/doc/uid/TP40014097-CH25-ID277" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_52&quot;;return this.s_oc?this.s_oc(e):true">Adding Protocol Conformance with an Extension</a>
          </li>
          <li class="item">
            <a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Protocols.html#//apple_ref/doc/uid/TP40014097-CH25-ID279" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_53&quot;;return this.s_oc?this.s_oc(e):true">Collections of Protocol Types</a>
          </li>
          <li class="item">
            <a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Protocols.html#//apple_ref/doc/uid/TP40014097-CH25-ID280" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_54&quot;;return this.s_oc?this.s_oc(e):true">Protocol Inheritance</a>
          </li>
          <li class="item">
            <a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Protocols.html#//apple_ref/doc/uid/TP40014097-CH25-ID281" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_55&quot;;return this.s_oc?this.s_oc(e):true">Class-Only Protocols</a>
          </li>
          <li class="item">
            <a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Protocols.html#//apple_ref/doc/uid/TP40014097-CH25-ID282" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_56&quot;;return this.s_oc?this.s_oc(e):true">Protocol Composition</a>
          </li>
          <li class="item">
            <a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Protocols.html#//apple_ref/doc/uid/TP40014097-CH25-ID283" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_57&quot;;return this.s_oc?this.s_oc(e):true">Checking for Protocol Conformance</a>
          </li>
          <li class="item">
            <a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Protocols.html#//apple_ref/doc/uid/TP40014097-CH25-ID284" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_58&quot;;return this.s_oc?this.s_oc(e):true">Optional Protocol Requirements</a>
          </li>
          <li class="item">
            <a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Protocols.html#//apple_ref/doc/uid/TP40014097-CH25-ID521" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_59&quot;;return this.s_oc?this.s_oc(e):true">Protocol Extensions</a>
          </li>
      </ul>
  </menu>
</menuitem>

</menu>
<div class="pixel-line"></div>
<div class="rubber-band-gap"></div>
<article class="chapter">
  <a name="//apple_ref/doc/uid/TP40014097-CH25"></a><a name="//apple_ref/doc/uid/TP40014097-CH25-ID267"></a>

  <h2 class="chapter-name"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">协议</font></font></h2>


  
  	<section class="section">
  		<p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  甲</font></font><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">协议</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">定义的该适合特定任务或片的功能的方法，属性和其他要求的蓝图。</font><font style="vertical-align: inherit;">该协议然后可以</font></font><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">采用</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">由一个类，结构，或枚举，以提供实际实施方案的这些要求。</font><font style="vertical-align: inherit;">据说满足协议要求的任何类型都</font></font><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">符合</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">该协议。
</font></font></p>
<p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  除了指定符合类型必须实现的要求外，还可以扩展协议以实现其中一些要求或实现符合类型可以利用的其他功能。
</font></font></p>

		</section> 


  <section class="section">
  <a name="//apple_ref/doc/uid/TP40014097-CH25-ID268"></a>
  <h3 class="section-name" tabindex="0"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">协议语法</font></font></h3>
  <p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  您以与类，结构和枚举类似的方式定义协议：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">protocol</span> <span class="vc">SomeProtocol</span> {</code></li>
            <li><code class="code-voice">    <span class="c">// protocol definition goes here</span></code></li>
            <li><code class="code-voice">}</code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  自定义类型声明他们采用特定协议，方法是将协议名称放在类型名称后面，并用冒号分隔，作为其定义的一部分。</font><font style="vertical-align: inherit;">可以列出多个协议，并用逗号分隔：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">struct</span> <span class="vc">SomeStructure</span>: <span class="n"><!-- a href="" -->FirstProtocol<!-- /a --></span>, <span class="n"><!-- a href="" -->AnotherProtocol<!-- /a --></span> {</code></li>
            <li><code class="code-voice">    <span class="c">// structure definition goes here</span></code></li>
            <li><code class="code-voice">}</code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  如果一个类有一个超类，那么在它所采用的任何协议之前列出超类的名称，后跟一个逗号：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">class</span> <span class="vc">SomeClass</span>: <span class="n"><!-- a href="" -->SomeSuperclass<!-- /a --></span>, <span class="n"><!-- a href="" -->FirstProtocol<!-- /a --></span>, <span class="n"><!-- a href="" -->AnotherProtocol<!-- /a --></span> {</code></li>
            <li><code class="code-voice">    <span class="c">// class definition goes here</span></code></li>
            <li><code class="code-voice">}</code></li>
        </ol>
      </div>
  </div>
</section>
  
</section>
<section class="section">
  <a name="//apple_ref/doc/uid/TP40014097-CH25-ID269"></a>
  <h3 class="section-name" tabindex="0"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">物业要求</font></font></h3>
  <p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  一个协议可以要求任何一致性类型提供一个实例属性或者具有特定名称和类型的类型属性。</font><font style="vertical-align: inherit;">该协议没有指定属性是否应该是存储属性或计算属性 - 它只指定所需的属性名称和类型。</font><font style="vertical-align: inherit;">该协议还规定每个属性是否必须是可获取的或</font><font style="vertical-align: inherit;">可</font><font style="vertical-align: inherit;">获取</font></font><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">和</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">可设置的。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  如果一个协议要求一个属性是可获取和可设置的，那么该属性要求不能由一个常量存储属性或一个只读计算属性来满足。</font><font style="vertical-align: inherit;">如果协议只需要一个属性是可以获取的，那么这个需求可以通过任何类型的属性来满足，如果这个属性对你自己的代码有用的话，这个属性也是可以设置的。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  属性需求总是被声明为变量属性，并以</font></font><code class="code-voice">var</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">关键字</font><font style="vertical-align: inherit;">为前缀</font><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">Gettable和可设置的属性通过</font></font><code class="code-voice">{ get set }</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">在它们的类型声明之后</font><font style="vertical-align: inherit;">写入来指示，并且可写</font><font style="vertical-align: inherit;">属性通过写入来指示</font></font><code class="code-voice">{ get }</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">protocol</span> <span class="vc">SomeProtocol</span> {</code></li>
            <li><code class="code-voice">    <span class="kt">var</span> <span class="vc">mustBeSettable</span>: <span class="n"><!-- a href="" -->Int<!-- /a --></span> { <span class="kt">get</span> <span class="kt">set</span> }</code></li>
            <li><code class="code-voice">    <span class="kt">var</span> <span class="vc">doesNotNeedToBeSettable</span>: <span class="n"><!-- a href="" -->Int<!-- /a --></span> { <span class="kt">get</span> }</code></li>
            <li><code class="code-voice">}</code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"></font><code class="code-voice">static</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">在协议中定义关键字时，</font><font style="vertical-align: inherit;">
  始终将</font><font style="vertical-align: inherit;">关键字的</font><font style="vertical-align: inherit;">类型属性需求添加到前缀</font><font style="vertical-align: inherit;">中。</font><font style="vertical-align: inherit;">即使类型属性要求可以用</font><font style="vertical-align: inherit;">类</font></font><code class="code-voice">class</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">或者</font></font><code class="code-voice">static</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">关键字</font><font style="vertical-align: inherit;">作为前缀，但是该类仍然适用</font><font style="vertical-align: inherit;">于类：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">protocol</span> <span class="vc">AnotherProtocol</span> {</code></li>
            <li><code class="code-voice">    <span class="kt">static</span> <span class="kt">var</span> <span class="vc">someTypeProperty</span>: <span class="n"><!-- a href="" -->Int<!-- /a --></span> { <span class="kt">get</span> <span class="kt">set</span> }</code></li>
            <li><code class="code-voice">}</code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  以下是一个具有单个实例属性要求的协议示例：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">protocol</span> <span class="vc">FullyNamed</span> {</code></li>
            <li><code class="code-voice">    <span class="kt">var</span> <span class="vc">fullName</span>: <span class="n"><!-- a href="" -->String<!-- /a --></span> { <span class="kt">get</span> }</code></li>
            <li><code class="code-voice">}</code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  该</font></font><code class="code-voice">FullyNamed</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">协议要求符合类型以提供完全合格的名称。</font><font style="vertical-align: inherit;">该协议没有指定任何有关符合类型的性质 - 它仅指定该类型必须能够为其自身提供全名。</font><font style="vertical-align: inherit;">该协议规定任何</font></font><code class="code-voice">FullyNamed</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">类型都必须有一个名为gettable的实例属性</font></font><code class="code-voice">fullName</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，它是类型的</font></font><code class="code-voice">String</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  以下是采用并符合</font></font><code class="code-voice">FullyNamed</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">协议</font><font style="vertical-align: inherit;">的简单结构示例</font><font style="vertical-align: inherit;">：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">struct</span> <span class="vc">Person</span>: <span class="n"><!-- a href="" -->FullyNamed<!-- /a --></span> {</code></li>
            <li><code class="code-voice">    <span class="kt">var</span> <span class="vc">fullName</span>: <span class="n"><!-- a href="" -->String<!-- /a --></span></code></li>
            <li><code class="code-voice">}</code></li>
            <li><code class="code-voice"><span class="kt">let</span> <span class="vc">john</span> = <span class="vc">Person</span>(<span class="vc">fullName</span>: <span class="s">"John Appleseed"</span>)</code></li>
            <li><code class="code-voice"><span class="c">// john.fullName is "John Appleseed"</span></code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  这个例子定义了一个叫做的结构</font></font><code class="code-voice">Person</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，它表示一个特定的具名人员。</font><font style="vertical-align: inherit;">它表示它将该</font></font><code class="code-voice">FullyNamed</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">议定书作为其定义第一行的一部分。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  每个实例</font></font><code class="code-voice">Person</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">都有一个名为的存储属性</font></font><code class="code-voice">fullName</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，它是类型的</font></font><code class="code-voice">String</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">这符合</font></font><code class="code-voice">FullyNamed</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">协议</font><font style="vertical-align: inherit;">的单个要求</font><font style="vertical-align: inherit;">，并且意味着</font></font><code class="code-voice">Person</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">已经正确地符合协议。</font><font style="vertical-align: inherit;">（如果协议要求未满足，Swift在编译时报告错误。）
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  这是一个更复杂的类，它也采用并符合</font></font><code class="code-voice">FullyNamed</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">协议：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">class</span> <span class="vc">Starship</span>: <span class="n"><!-- a href="" -->FullyNamed<!-- /a --></span> {</code></li>
            <li><code class="code-voice">    <span class="kt">var</span> <span class="vc">prefix</span>: <span class="n"><!-- a href="" -->String<!-- /a --></span>?</code></li>
            <li><code class="code-voice">    <span class="kt">var</span> <span class="vc">name</span>: <span class="n"><!-- a href="" -->String<!-- /a --></span></code></li>
            <li><code class="code-voice">    <span class="kt">init</span>(<span class="vc">name</span>: <span class="n"><!-- a href="" -->String<!-- /a --></span>, <span class="vc">prefix</span>: <span class="n"><!-- a href="" -->String<!-- /a --></span>? = <span class="kt">nil</span>) {</code></li>
            <li><code class="code-voice">        <span class="kt">self</span>.<span class="vc">name</span> = <span class="vc">name</span></code></li>
            <li><code class="code-voice">        <span class="kt">self</span>.<span class="vc">prefix</span> = <span class="vc">prefix</span></code></li>
            <li><code class="code-voice">    }</code></li>
            <li><code class="code-voice">    <span class="kt">var</span> <span class="vc">fullName</span>: <span class="n"><!-- a href="" -->String<!-- /a --></span> {</code></li>
            <li><code class="code-voice">        <span class="kt">return</span> (<span class="vc">prefix</span> != <span class="kt">nil</span> ? <span class="vc">prefix</span>! + <span class="s">" "</span> : <span class="s">""</span>) + <span class="vc">name</span></code></li>
            <li><code class="code-voice">    }</code></li>
            <li><code class="code-voice">}</code></li>
            <li><code class="code-voice"><span class="kt">var</span> <span class="vc">ncc1701</span> = <span class="vc">Starship</span>(<span class="vc">name</span>: <span class="s">"Enterprise"</span>, <span class="vc">prefix</span>: <span class="s">"USS"</span>)</code></li>
            <li><code class="code-voice"><span class="c">// ncc1701.fullName is "USS Enterprise"</span></code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  该类将</font></font><code class="code-voice">fullName</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">属性需求作为星舰的计算只读属性实现。</font><font style="vertical-align: inherit;">每个</font></font><code class="code-voice">Starship</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">类实例都存储一个必需的</font></font><code class="code-voice">name</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">和一个可选的</font></font><code class="code-voice">prefix</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">该</font></font><code class="code-voice">fullName</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">属性使用该</font></font><code class="code-voice">prefix</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">值（如果存在），并将其预先设置</font></font><code class="code-voice">name</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">为为星舰创​​建完整名称</font><font style="vertical-align: inherit;">的开头</font><font style="vertical-align: inherit;">。
</font></font></p>
  
</section>
<section class="section">
  <a name="//apple_ref/doc/uid/TP40014097-CH25-ID270"></a>
  <h3 class="section-name" tabindex="0"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">方法要求</font></font></h3>
  <p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  协议可以要求特定的实例方法和类型方法通过符合类型来实现。</font><font style="vertical-align: inherit;">这些方法是作为协议定义的一部分编写的，与普通实例和类型方法完全相同，但没有大括号或方法体。</font><font style="vertical-align: inherit;">允许变量参数，遵循与正常方法相同的规则。</font><font style="vertical-align: inherit;">但是，不能为协议定义中的方法参数指定默认值。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  与类型属性要求一样，</font></font><code class="code-voice">static</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">当在协议中定义关键字时</font><font style="vertical-align: inherit;">，始终将类型方法要求作为前缀</font><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">即使类型方法需求</font><font style="vertical-align: inherit;">在由类实现时</font><font style="vertical-align: inherit;">带有</font></font><code class="code-voice">class</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">or </font></font><code class="code-voice">static</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">关键字</font><font style="vertical-align: inherit;">前缀，情况也是如此</font><font style="vertical-align: inherit;">：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">protocol</span> <span class="vc">SomeProtocol</span> {</code></li>
            <li><code class="code-voice">    <span class="kt">static</span> <span class="kt">func</span> <span class="vc">someTypeMethod</span>()</code></li>
            <li><code class="code-voice">}</code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  以下示例使用单个实例方法要求定义一个协议：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">protocol</span> <span class="vc">RandomNumberGenerator</span> {</code></li>
            <li><code class="code-voice">    <span class="kt">func</span> <span class="vc">random</span>() -&gt; <span class="n"><!-- a href="" -->Double<!-- /a --></span></code></li>
            <li><code class="code-voice">}</code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  这个协议</font></font><code class="code-voice">RandomNumberGenerator</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">要求任何一致性类型都有一个实例方法调用</font></font><code class="code-voice">random</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，</font></font><code class="code-voice">Double</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">它在调用时会</font><font style="vertical-align: inherit;">返回一个</font><font style="vertical-align: inherit;">值。</font><font style="vertical-align: inherit;">虽然它没有被指定为协议的一部分，但是假定这个值将是一个从</font></font><code class="code-voice">0.0</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">（但不包括）开始的数字</font></font><code class="code-voice">1.0</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  该</font></font><code class="code-voice">RandomNumberGenerator</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">协议并没有就如何每个随机数将任何假设产生的，它只是需要发电机提供一种标准方法来生成一个新的随机数。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  这是一个采用并符合</font></font><code class="code-voice">RandomNumberGenerator</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">协议</font><font style="vertical-align: inherit;">的类的实现</font><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">这个类实现了一个称为</font></font><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">线性同余发生器</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">的伪随机数生成器算法</font><font style="vertical-align: inherit;">：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">class</span> <span class="vc">LinearCongruentialGenerator</span>: <span class="n"><!-- a href="" -->RandomNumberGenerator<!-- /a --></span> {</code></li>
            <li><code class="code-voice">    <span class="kt">var</span> <span class="vc">lastRandom</span> = <span class="m">42.0</span></code></li>
            <li><code class="code-voice">    <span class="kt">let</span> <span class="vc">m</span> = <span class="m">139968.0</span></code></li>
            <li><code class="code-voice">    <span class="kt">let</span> <span class="vc">a</span> = <span class="m">3877.0</span></code></li>
            <li><code class="code-voice">    <span class="kt">let</span> <span class="vc">c</span> = <span class="m">29573.0</span></code></li>
            <li><code class="code-voice">    <span class="kt">func</span> <span class="vc">random</span>() -&gt; <span class="n"><!-- a href="" -->Double<!-- /a --></span> {</code></li>
            <li><code class="code-voice">        <span class="vc">lastRandom</span> = ((<span class="vc">lastRandom</span> * <span class="vc">a</span> + <span class="vc">c</span>).<span class="vc">truncatingRemainder</span>(<span class="vc">dividingBy</span>:<span class="vc">m</span>))</code></li>
            <li><code class="code-voice">        <span class="kt">return</span> <span class="vc">lastRandom</span> / <span class="vc">m</span></code></li>
            <li><code class="code-voice">    }</code></li>
            <li><code class="code-voice">}</code></li>
            <li><code class="code-voice"><span class="kt">let</span> <span class="vc">generator</span> = <span class="vc">LinearCongruentialGenerator</span>()</code></li>
            <li><code class="code-voice"><span class="vc">print</span>(<span class="s">"Here's a random number: </span>\(<span class="vc">generator</span>.<span class="vc">random</span>())<span class="s">"</span>)</code></li>
            <li><code class="code-voice"><span class="c">// Prints "Here's a random number: 0.37464991998171"</span></code></li>
            <li><code class="code-voice"><span class="vc">print</span>(<span class="s">"And another one: </span>\(<span class="vc">generator</span>.<span class="vc">random</span>())<span class="s">"</span>)</code></li>
            <li><code class="code-voice"><span class="c">// Prints "And another one: 0.729023776863283"</span></code></li>
        </ol>
      </div>
  </div>
</section>
  
</section>
<section class="section">
  <a name="//apple_ref/doc/uid/TP40014097-CH25-ID271"></a>
  <h3 class="section-name" tabindex="0"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">变异方法要求</font></font></h3>
  <p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  有时一种方法需要修改（或</font></font><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">改变</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">）它所属的实例。</font><font style="vertical-align: inherit;">例如，对于值类型（即结构和枚举）</font></font><code class="code-voice">mutating</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">的方法，</font><font style="vertical-align: inherit;">您可以将</font><font style="vertical-align: inherit;">关键字</font><font style="vertical-align: inherit;">放在</font><font style="vertical-align: inherit;">方法的</font></font><code class="code-voice">func</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">关键字</font><font style="vertical-align: inherit;">之前，</font><font style="vertical-align: inherit;">以指示该方法可以修改它所属的实例以及该实例的任何属性。</font><font style="vertical-align: inherit;">此过程在“ </font></font><span class="x-name"><a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Methods.html#//apple_ref/doc/uid/TP40014097-CH15-ID239" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH15-ID239" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_60&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">从实例方法</font></font></a></span><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">中</font><span class="x-name"><a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Methods.html#//apple_ref/doc/uid/TP40014097-CH15-ID239" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH15-ID239" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_61&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;">修改值类型”中</font></a></span><font style="vertical-align: inherit;">介绍</font><font style="vertical-align: inherit;">。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  如果您定义的协议实例方法要求旨在改变采用协议的任何类型的实例，请将</font></font><code class="code-voice">mutating</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">关键字</font><font style="vertical-align: inherit;">标记</font><font style="vertical-align: inherit;">为协议定义的一部分。</font><font style="vertical-align: inherit;">这使得结构和枚举可以采用协议并满足该方法的要求。
</font></font></p><div class="note">
  <a name="//apple_ref/doc/uid/TP40014097-CH25-NoLink_170"></a>
  <aside class="aside">
    <p class="aside-title"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">注意
    </font></font></p>
    	<p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">如果将协议实例方法要求标记为</font></font><code class="code-voice">mutating</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，则</font></font><code class="code-voice">mutating</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">在为该类编写该方法的实现时，</font><font style="vertical-align: inherit;">无需编写</font><font style="vertical-align: inherit;">关键字。</font><font style="vertical-align: inherit;">该</font></font><code class="code-voice">mutating</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">关键字仅用于结构和枚举。
    	</font></font></p>
    
  </aside>
</div><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  下面的例子定义了一个调用的协议</font></font><code class="code-voice">Togglable</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，它定义了一个调用的单个实例方法需求</font></font><code class="code-voice">toggle</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">顾名思义，该</font></font><code class="code-voice">toggle()</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">方法旨在切换或反转任何符合类型的状态，通常通过修改该类型的属性。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  该</font></font><code class="code-voice">toggle()</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">方法使用</font></font><code class="code-voice">mutating</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">关键字作为</font></font><code class="code-voice">Togglable</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">协议定义的</font><font style="vertical-align: inherit;">一部分进行</font><font style="vertical-align: inherit;">标记</font><font style="vertical-align: inherit;">，以指示该方法在调用时会改变符合实例的状态：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">protocol</span> <span class="vc">Togglable</span> {</code></li>
            <li><code class="code-voice">    <span class="kt">mutating</span> <span class="kt">func</span> <span class="vc">toggle</span>()</code></li>
            <li><code class="code-voice">}</code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  如果您</font></font><code class="code-voice">Togglable</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">为结构或枚举</font><font style="vertical-align: inherit;">实现</font><font style="vertical-align: inherit;">协议，则该结构或枚举可以通过提供</font></font><code class="code-voice">toggle()</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">也被标记为</font><font style="vertical-align: inherit;">的</font><font style="vertical-align: inherit;">方法</font><font style="vertical-align: inherit;">的实现来符合协议</font></font><code class="code-voice">mutating</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  下面的例子定义了一个枚举</font></font><code class="code-voice">OnOffSwitch</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">此枚举在枚举案例</font></font><code class="code-voice">on</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">和</font><font style="vertical-align: inherit;">枚举所指示的两个状态之间切换</font></font><code class="code-voice">off</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">枚举的</font></font><code class="code-voice">toggle</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">实现标记为</font></font><code class="code-voice">mutating</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">符合</font></font><code class="code-voice">Togglable</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">协议的要求：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">enum</span> <span class="vc">OnOffSwitch</span>: <span class="n"><!-- a href="" -->Togglable<!-- /a --></span> {</code></li>
            <li><code class="code-voice">    <span class="kt">case</span> <span class="vc">off</span>, <span class="vc">on</span></code></li>
            <li><code class="code-voice">    <span class="kt">mutating</span> <span class="kt">func</span> <span class="vc">toggle</span>() {</code></li>
            <li><code class="code-voice">        <span class="kt">switch</span> <span class="kt">self</span> {</code></li>
            <li><code class="code-voice">        <span class="kt">case</span> .<span class="vc">off</span>:</code></li>
            <li><code class="code-voice">            <span class="kt">self</span> = .<span class="vc">on</span></code></li>
            <li><code class="code-voice">        <span class="kt">case</span> .<span class="vc">on</span>:</code></li>
            <li><code class="code-voice">            <span class="kt">self</span> = .<span class="vc">off</span></code></li>
            <li><code class="code-voice">        }</code></li>
            <li><code class="code-voice">    }</code></li>
            <li><code class="code-voice">}</code></li>
            <li><code class="code-voice"><span class="kt">var</span> <span class="vc">lightSwitch</span> = <span class="vc">OnOffSwitch</span>.<span class="vc">off</span></code></li>
            <li><code class="code-voice"><span class="vc">lightSwitch</span>.<span class="vc">toggle</span>()</code></li>
            <li><code class="code-voice"><span class="c">// lightSwitch is now equal to .on</span></code></li>
        </ol>
      </div>
  </div>
</section>
  
</section>
<section class="section">
  <a name="//apple_ref/doc/uid/TP40014097-CH25-ID272"></a>
  <h3 class="section-name" tabindex="0"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">初始化程序要求</font></font></h3>
  <p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  协议可能需要通过符合类型来实现特定的初始化程序。</font><font style="vertical-align: inherit;">作为协议定义的一部分，这些初始化方法与正常初始化方法完全相同，但没有大括号或初始化体：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">protocol</span> <span class="vc">SomeProtocol</span> {</code></li>
            <li><code class="code-voice">    <span class="kt">init</span>(<span class="vc">someParameter</span>: <span class="n"><!-- a href="" -->Int<!-- /a --></span>)</code></li>
            <li><code class="code-voice">}</code></li>
        </ol>
      </div>
  </div>
</section>
  <section class="section">
  <a name="//apple_ref/doc/uid/TP40014097-CH25-ID273"></a>
  <h3 class="section-name" tabindex="0"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">协议初始化器要求的类实现</font></font></h3>
  <p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  您可以在符合类上实现协议初始值设定项要求作为指定初始值设定项或便利初始值设定项。</font><font style="vertical-align: inherit;">在这两种情况下，您都必须使用</font></font><code class="code-voice">required</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">修饰符</font><font style="vertical-align: inherit;">标记初始化程序实现</font><font style="vertical-align: inherit;">：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">class</span> <span class="vc">SomeClass</span>: <span class="n"><!-- a href="" -->SomeProtocol<!-- /a --></span> {</code></li>
            <li><code class="code-voice">    <span class="kt">required</span> <span class="kt">init</span>(<span class="vc">someParameter</span>: <span class="n"><!-- a href="" -->Int<!-- /a --></span>) {</code></li>
            <li><code class="code-voice">        <span class="c">// initializer implementation goes here</span></code></li>
            <li><code class="code-voice">    }</code></li>
            <li><code class="code-voice">}</code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"></font><code class="code-voice">required</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">修饰符</font><font style="vertical-align: inherit;">
  的使用</font><font style="vertical-align: inherit;">可以确保您为合格类的所有子类提供初始化器要求的显式或继承实现，以使它们也符合协议。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  有关所需初始化程序的更多信息，请参阅</font></font><span class="x-name"><a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Initialization.html#//apple_ref/doc/uid/TP40014097-CH18-ID231" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH18-ID231" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_62&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">必需初始化程序</font></font></a></span><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。
</font></font></p><div class="note">
  <a name="//apple_ref/doc/uid/TP40014097-CH25-NoLink_171"></a>
  <aside class="aside">
    <p class="aside-title"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">注意
    </font></font></p>
    	<p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">您不需要使用带</font></font><code class="code-voice">required</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">修饰符标记的类</font><font style="vertical-align: inherit;">的</font><font style="vertical-align: inherit;">修饰符</font><font style="vertical-align: inherit;">标记协议初始化程序实现</font></font><code class="code-voice">final</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，因为最终的类不能进行子类化。</font><font style="vertical-align: inherit;">有关</font></font><code class="code-voice">final</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">修饰符的</font><font style="vertical-align: inherit;">更多信息</font><font style="vertical-align: inherit;">，请参阅</font></font><span class="x-name"><a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Inheritance.html#//apple_ref/doc/uid/TP40014097-CH17-ID202" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH17-ID202" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_63&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">防止覆盖</font></font></a></span><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。
    	</font></font></p>
    
  </aside>
</div><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  如果一个子类重写了一个超类的指定初始值设定项，并且还从一个协议中实现了一个匹配的初始值设定项需求，那么使用</font></font><code class="code-voice">required</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">和</font></font><code class="code-voice">override</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">修饰符</font><font style="vertical-align: inherit;">标记初始值设定项实现</font><font style="vertical-align: inherit;">：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">protocol</span> <span class="vc">SomeProtocol</span> {</code></li>
            <li><code class="code-voice">    <span class="kt">init</span>()</code></li>
            <li><code class="code-voice">}</code></li>
            <li><code class="code-voice"> </code></li>
            <li><code class="code-voice"><span class="kt">class</span> <span class="vc">SomeSuperClass</span> {</code></li>
            <li><code class="code-voice">    <span class="kt">init</span>() {</code></li>
            <li><code class="code-voice">        <span class="c">// initializer implementation goes here</span></code></li>
            <li><code class="code-voice">    }</code></li>
            <li><code class="code-voice">}</code></li>
            <li><code class="code-voice"> </code></li>
            <li><code class="code-voice"><span class="kt">class</span> <span class="vc">SomeSubClass</span>: <span class="n"><!-- a href="" -->SomeSuperClass<!-- /a --></span>, <span class="n"><!-- a href="" -->SomeProtocol<!-- /a --></span> {</code></li>
            <li><code class="code-voice">    <span class="c">// "required" from SomeProtocol conformance; "override" from SomeSuperClass</span></code></li>
            <li><code class="code-voice">    <span class="kt">required</span> <span class="kt">override</span> <span class="kt">init</span>() {</code></li>
            <li><code class="code-voice">        <span class="c">// initializer implementation goes here</span></code></li>
            <li><code class="code-voice">    }</code></li>
            <li><code class="code-voice">}</code></li>
        </ol>
      </div>
  </div>
</section>
  
</section>
<section class="section">
  <a name="//apple_ref/doc/uid/TP40014097-CH25-ID274"></a>
  <h3 class="section-name" tabindex="0"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Failable初始化器要求</font></font></h3>
  <p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  协议可以定义符合类型的可分解的初始化器要求，如</font></font><span class="x-name"><a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Initialization.html#//apple_ref/doc/uid/TP40014097-CH18-ID224" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH18-ID224" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_64&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Failable Initializers中</font></font></a></span><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">所定义</font><font style="vertical-align: inherit;">。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  可靠的初始化器要求可以通过符合类型的failable或nonfailable初始化器来满足。</font><font style="vertical-align: inherit;">一个不可破解的初始化器需求可以由一个不可破的初始化器或一个隐式解包的可分解的初始化器来满足。
</font></font></p>
  
</section>

</section>
<section class="section">
  <a name="//apple_ref/doc/uid/TP40014097-CH25-ID275"></a>
  <h3 class="section-name" tabindex="0"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">作为类型的协议</font></font></h3>
  <p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  协议本身并不实际实现任何功能。</font><font style="vertical-align: inherit;">尽管如此，您创建的任何协议都将成为代码中使用的完整类型。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  因为它是一种类型，所以可以在允许其他类型的许多地方使用协议，包括：
</font></font></p><ul class="list-bullet">
  <li class="item"><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  作为函数，方法或初始值设定项中的参数类型或返回类型
</font></font></p>
</li><li class="item"><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  作为常量，变量或属性的类型
</font></font></p>
</li><li class="item"><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  作为数组，字典或其他容器中的项目类型
</font></font></p>
</li>
</ul><div class="note">
  <a name="//apple_ref/doc/uid/TP40014097-CH25-NoLink_172"></a>
  <aside class="aside">
    <p class="aside-title"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">注意
    </font></font></p>
    	<p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">由于协议的类型，开始他们的名称以大写字母（如</font></font><code class="code-voice">FullyNamed</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">和</font></font><code class="code-voice">RandomNumberGenerator</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">），以配合其他类型的雨燕的名称（如</font></font><code class="code-voice">Int</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，</font></font><code class="code-voice">String</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">和</font></font><code class="code-voice">Double</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">）。
    	</font></font></p>
    
  </aside>
</div><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  以下是一个用作类型的协议示例：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">class</span> <span class="vc">Dice</span> {</code></li>
            <li><code class="code-voice">    <span class="kt">let</span> <span class="vc">sides</span>: <span class="n"><!-- a href="" -->Int<!-- /a --></span></code></li>
            <li><code class="code-voice">    <span class="kt">let</span> <span class="vc">generator</span>: <span class="n"><!-- a href="" -->RandomNumberGenerator<!-- /a --></span></code></li>
            <li><code class="code-voice">    <span class="kt">init</span>(<span class="vc">sides</span>: <span class="n"><!-- a href="" -->Int<!-- /a --></span>, <span class="vc">generator</span>: <span class="n"><!-- a href="" -->RandomNumberGenerator<!-- /a --></span>) {</code></li>
            <li><code class="code-voice">        <span class="kt">self</span>.<span class="vc">sides</span> = <span class="vc">sides</span></code></li>
            <li><code class="code-voice">        <span class="kt">self</span>.<span class="vc">generator</span> = <span class="vc">generator</span></code></li>
            <li><code class="code-voice">    }</code></li>
            <li><code class="code-voice">    <span class="kt">func</span> <span class="vc">roll</span>() -&gt; <span class="n"><!-- a href="" -->Int<!-- /a --></span> {</code></li>
            <li><code class="code-voice">        <span class="kt">return</span> <span class="vc">Int</span>(<span class="vc">generator</span>.<span class="vc">random</span>() * <span class="vc">Double</span>(<span class="vc">sides</span>)) + <span class="m">1</span></code></li>
            <li><code class="code-voice">    }</code></li>
            <li><code class="code-voice">}</code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  这个例子定义了一个叫做的新类</font></font><code class="code-voice">Dice</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，它代表了</font><font style="vertical-align: inherit;">在棋盘游戏中使用</font><font style="vertical-align: inherit;">的</font></font><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">n方向</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">骰子。</font></font><code class="code-voice">Dice</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">实例具有一个调用的整数属性</font></font><code class="code-voice">sides</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，它表示它们有多少个边，以及一个叫做的属性</font></font><code class="code-voice">generator</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，它提供了一个随机数生成器，从中创建骰子滚动值。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  该</font></font><code class="code-voice">generator</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">属性是类型</font></font><code class="code-voice">RandomNumberGenerator</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">因此，您可以将其设置为</font><font style="vertical-align: inherit;">采用该</font><font style="vertical-align: inherit;">协议</font><font style="vertical-align: inherit;">的</font></font><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">任何</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">类型</font><font style="vertical-align: inherit;">的实例</font></font><code class="code-voice">RandomNumberGenerator</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">除了实例必须采用</font></font><code class="code-voice">RandomNumberGenerator</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">协议</font><font style="vertical-align: inherit;">之外，您分配给此属性的实例不需要其他任何东西</font><font style="vertical-align: inherit;">。
</font></font></p><p class="para">
  <code class="code-voice">Dice</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">也有一个初始化器，来设置它的初始状态。</font><font style="vertical-align: inherit;">这个初始化器有一个名为的参数</font></font><code class="code-voice">generator</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，它也是类型的</font></font><code class="code-voice">RandomNumberGenerator</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">初始化新</font></font><code class="code-voice">Dice</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">实例</font><font style="vertical-align: inherit;">时，可以将任何符合类型的值传递给此参数</font><font style="vertical-align: inherit;">。
</font></font></p><p class="para">
  <code class="code-voice">Dice</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">提供了一个实例方法，</font></font><code class="code-voice">roll</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">它返回1和骰子边数之间的整数值。</font><font style="vertical-align: inherit;">此方法调用生成器的</font></font><code class="code-voice">random()</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">方法在</font></font><code class="code-voice">0.0</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">和</font><font style="vertical-align: inherit;">之间创建一个新的随机数</font></font><code class="code-voice">1.0</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，并使用此随机数在正确的范围内创建骰子滚动值。</font><font style="vertical-align: inherit;">因为</font></font><code class="code-voice">generator</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">已知采用</font></font><code class="code-voice">RandomNumberGenerator</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，所以保证有一个</font></font><code class="code-voice">random()</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">方法可以调用。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  以下是如何使用这个</font></font><code class="code-voice">Dice</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">类创建一个具有</font></font><code class="code-voice">LinearCongruentialGenerator</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">实例作为随机数生成器</font><font style="vertical-align: inherit;">的六面骰子</font><font style="vertical-align: inherit;">：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">var</span> <span class="vc">d6</span> = <span class="vc">Dice</span>(<span class="vc">sides</span>: <span class="m">6</span>, <span class="vc">generator</span>: <span class="vc">LinearCongruentialGenerator</span>())</code></li>
            <li><code class="code-voice"><span class="kt">for</span> <span class="kt">_</span> <span class="kt">in</span> <span class="m">1</span>...<span class="m">5</span> {</code></li>
            <li><code class="code-voice">    <span class="vc">print</span>(<span class="s">"Random dice roll is </span>\(<span class="vc">d6</span>.<span class="vc">roll</span>())<span class="s">"</span>)</code></li>
            <li><code class="code-voice">}</code></li>
            <li><code class="code-voice"><span class="c">// Random dice roll is 3</span></code></li>
            <li><code class="code-voice"><span class="c">// Random dice roll is 5</span></code></li>
            <li><code class="code-voice"><span class="c">// Random dice roll is 4</span></code></li>
            <li><code class="code-voice"><span class="c">// Random dice roll is 5</span></code></li>
            <li><code class="code-voice"><span class="c">// Random dice roll is 4</span></code></li>
        </ol>
      </div>
  </div>
</section>
  
</section>
<section class="section">
  <a name="//apple_ref/doc/uid/TP40014097-CH25-ID276"></a>
  <h3 class="section-name" tabindex="0"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">代表团</font></font></h3>
  <p class="para">
  <em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">委托</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">是一种设计模式，它使类或结构能够</font></font><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">将</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">其某些职责交给</font><font style="vertical-align: inherit;">（或</font><em><font style="vertical-align: inherit;">委托</font></em><font style="vertical-align: inherit;">）其他类型的实例。</font><font style="vertical-align: inherit;">这种设计模式是通过定义一个封装委托职责的协议来实现的，从而保证一致性类型（称为委托）能够提供已委派的功能。</font><font style="vertical-align: inherit;">可以使用委托来响应特定操作，或者从外部源检索数据，而无需知道该源的基本类型。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  下面的例子定义了两种用于基于骰子的棋盘游戏的协议：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">protocol</span> <span class="vc">DiceGame</span> {</code></li>
            <li><code class="code-voice">    <span class="kt">var</span> <span class="vc">dice</span>: <span class="n"><!-- a href="" -->Dice<!-- /a --></span> { <span class="kt">get</span> }</code></li>
            <li><code class="code-voice">    <span class="kt">func</span> <span class="vc">play</span>()</code></li>
            <li><code class="code-voice">}</code></li>
            <li><code class="code-voice"><span class="kt">protocol</span> <span class="vc">DiceGameDelegate</span>: <span class="n"><!-- a href="" -->AnyObject<!-- /a --></span> {</code></li>
            <li><code class="code-voice">    <span class="kt">func</span> <span class="vc">gameDidStart</span>(<span class="kt">_</span> <span class="vc">game</span>: <span class="n"><!-- a href="" -->DiceGame<!-- /a --></span>)</code></li>
            <li><code class="code-voice">    <span class="kt">func</span> <span class="vc">game</span>(<span class="kt">_</span> <span class="vc">game</span>: <span class="n"><!-- a href="" -->DiceGame<!-- /a --></span>, <span class="vc">didStartNewTurnWithDiceRoll</span> <span class="vc">diceRoll</span>: <span class="n"><!-- a href="" -->Int<!-- /a --></span>)</code></li>
            <li><code class="code-voice">    <span class="kt">func</span> <span class="vc">gameDidEnd</span>(<span class="kt">_</span> <span class="vc">game</span>: <span class="n"><!-- a href="" -->DiceGame<!-- /a --></span>)</code></li>
            <li><code class="code-voice">}</code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  该</font></font><code class="code-voice">DiceGame</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">协议是一个可以被任何涉及骰子的游戏所采用的协议。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  该</font></font><code class="code-voice">DiceGameDelegate</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">协议可以被用来跟踪一个进程</font></font><code class="code-voice">DiceGame</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">为了防止强引用周期，应将代表声明为弱引用。</font><font style="vertical-align: inherit;">有关弱引用的更多信息，请参阅</font></font><span class="x-name"><a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/AutomaticReferenceCounting.html#//apple_ref/doc/uid/TP40014097-CH20-ID51" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH20-ID51" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_65&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">类实例之间的强参考循环</font></font></a></span><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">将该协议标记为仅限于类将稍后允许您声明该委托必须使用弱引用。</font><font style="vertical-align: inherit;">您将一个协议标记为仅通过继承而成的</font><span class="x-name"><a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Protocols.html#//apple_ref/doc/uid/TP40014097-CH25-ID281" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH25-ID281" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_66&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;">类</font></a></span></font><code class="code-voice">AnyObject</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，如在</font></font><span class="x-name"><a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Protocols.html#//apple_ref/doc/uid/TP40014097-CH25-ID281" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH25-ID281" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_66&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">纯类协议中所述</font></font></a></span><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  以下是</font><font style="vertical-align: inherit;">最初在</font><span class="x-name"><a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/ControlFlow.html#//apple_ref/doc/uid/TP40014097-CH9-ID120" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH9-ID120" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_67&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;">Control Flow中</font></a></span><font style="vertical-align: inherit;">引入</font><font style="vertical-align: inherit;">的一个版本的</font></font><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Snakes and Ladders</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">游戏</font><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">这个版本适合于使用</font><font style="vertical-align: inherit;">其骰子卷</font><font style="vertical-align: inherit;">的</font><font style="vertical-align: inherit;">实例; </font><font style="vertical-align: inherit;">采用</font><font style="vertical-align: inherit;">协议; </font><font style="vertical-align: inherit;">并通知</font><font style="vertical-align: inherit;">其进展情况：
</font></font><span class="x-name"><a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/ControlFlow.html#//apple_ref/doc/uid/TP40014097-CH9-ID120" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH9-ID120" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_67&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"></font></a></span><font style="vertical-align: inherit;"></font><code class="code-voice">Dice</code><font style="vertical-align: inherit;"></font><code class="code-voice">DiceGame</code><font style="vertical-align: inherit;"></font><code class="code-voice">DiceGameDelegate</code><font style="vertical-align: inherit;"></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">class</span> <span class="vc">SnakesAndLadders</span>: <span class="n"><!-- a href="" -->DiceGame<!-- /a --></span> {</code></li>
            <li><code class="code-voice">    <span class="kt">let</span> <span class="vc">finalSquare</span> = <span class="m">25</span></code></li>
            <li><code class="code-voice">    <span class="kt">let</span> <span class="vc">dice</span> = <span class="vc">Dice</span>(<span class="vc">sides</span>: <span class="m">6</span>, <span class="vc">generator</span>: <span class="vc">LinearCongruentialGenerator</span>())</code></li>
            <li><code class="code-voice">    <span class="kt">var</span> <span class="vc">square</span> = <span class="m">0</span></code></li>
            <li><code class="code-voice">    <span class="kt">var</span> <span class="vc">board</span>: [<span class="n"><!-- a href="" -->Int<!-- /a --></span>]</code></li>
            <li><code class="code-voice">    <span class="kt">init</span>() {</code></li>
            <li><code class="code-voice">        <span class="vc">board</span> = <span class="vc">Array</span>(<span class="vc">repeating</span>: <span class="m">0</span>, <span class="vc">count</span>: <span class="vc">finalSquare</span> + <span class="m">1</span>)</code></li>
            <li><code class="code-voice">        <span class="vc">board</span>[<span class="m">03</span>] = +<span class="m">08</span>; <span class="vc">board</span>[<span class="m">06</span>] = +<span class="m">11</span>; <span class="vc">board</span>[<span class="m">09</span>] = +<span class="m">09</span>; <span class="vc">board</span>[<span class="m">10</span>] = +<span class="m">02</span></code></li>
            <li><code class="code-voice">        <span class="vc">board</span>[<span class="m">14</span>] = <span class="m">-10</span>; <span class="vc">board</span>[<span class="m">19</span>] = <span class="m">-11</span>; <span class="vc">board</span>[<span class="m">22</span>] = <span class="m">-02</span>; <span class="vc">board</span>[<span class="m">24</span>] = <span class="m">-08</span></code></li>
            <li><code class="code-voice">    }</code></li>
            <li><code class="code-voice">    <span class="kt">weak</span> <span class="kt">var</span> <span class="vc">delegate</span>: <span class="n"><!-- a href="" -->DiceGameDelegate<!-- /a --></span>?</code></li>
            <li><code class="code-voice">    <span class="kt">func</span> <span class="vc">play</span>() {</code></li>
            <li><code class="code-voice">        <span class="vc">square</span> = <span class="m">0</span></code></li>
            <li><code class="code-voice">        <span class="vc">delegate</span>?.<span class="vc">gameDidStart</span>(<span class="kt">self</span>)</code></li>
            <li><code class="code-voice">        <span class="vc">gameLoop</span>: <span class="kt">while</span> <span class="vc">square</span> != <span class="vc">finalSquare</span> {</code></li>
            <li><code class="code-voice">            <span class="kt">let</span> <span class="vc">diceRoll</span> = <span class="vc">dice</span>.<span class="vc">roll</span>()</code></li>
            <li><code class="code-voice">            <span class="vc">delegate</span>?.<span class="vc">game</span>(<span class="kt">self</span>, <span class="vc">didStartNewTurnWithDiceRoll</span>: <span class="vc">diceRoll</span>)</code></li>
            <li><code class="code-voice">            <span class="kt">switch</span> <span class="vc">square</span> + <span class="vc">diceRoll</span> {</code></li>
            <li><code class="code-voice">            <span class="kt">case</span> <span class="vc">finalSquare</span>:</code></li>
            <li><code class="code-voice">                <span class="kt">break</span> <span class="vc">gameLoop</span></code></li>
            <li><code class="code-voice">            <span class="kt">case</span> <span class="kt">let</span> <span class="vc">newSquare</span> <span class="kt">where</span> <span class="vc">newSquare</span> &gt; <span class="vc">finalSquare</span>:</code></li>
            <li><code class="code-voice">                <span class="kt">continue</span> <span class="vc">gameLoop</span></code></li>
            <li><code class="code-voice">            <span class="kt">default</span>:</code></li>
            <li><code class="code-voice">                <span class="vc">square</span> += <span class="vc">diceRoll</span></code></li>
            <li><code class="code-voice">                <span class="vc">square</span> += <span class="vc">board</span>[<span class="vc">square</span>]</code></li>
            <li><code class="code-voice">            }</code></li>
            <li><code class="code-voice">        }</code></li>
            <li><code class="code-voice">        <span class="vc">delegate</span>?.<span class="vc">gameDidEnd</span>(<span class="kt">self</span>)</code></li>
            <li><code class="code-voice">    }</code></li>
            <li><code class="code-voice">}</code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  有关</font></font><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Snakes and Ladders</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">游戏玩法的说明，请参阅</font><span class="x-name"><a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/ControlFlow.html#//apple_ref/doc/uid/TP40014097-CH9-ID120" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH9-ID120" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_69&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;">控制流程的</font></a></span></font><span class="x-name"><a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/ControlFlow.html#//apple_ref/doc/uid/TP40014097-CH9-ID137" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH9-ID137" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_68&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Break</font></font></a></span><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">部分</font><font style="vertical-align: inherit;">。
</font></font><span class="x-name"><a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/ControlFlow.html#//apple_ref/doc/uid/TP40014097-CH9-ID120" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH9-ID120" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_69&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"></font></a></span><font style="vertical-align: inherit;"></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  这个版本的游戏被封装为一个叫做的类</font></font><code class="code-voice">SnakesAndLadders</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，它采用了</font></font><code class="code-voice">DiceGame</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">协议。</font><font style="vertical-align: inherit;">它提供了一个gettable </font></font><code class="code-voice">dice</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">属性和一个</font></font><code class="code-voice">play()</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">方法以符合协议。</font><font style="vertical-align: inherit;">（该</font></font><code class="code-voice">dice</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">属性被声明为一个常量属性，因为它不需要在初始化后更改，并且该协议只需要它是可以获取的。）
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  该</font></font><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">蛇和梯子</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">游戏板的设置采取类的内进行</font></font><code class="code-voice">init()</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">初始化。</font><font style="vertical-align: inherit;">所有的游戏逻辑都被移动到协议的</font></font><code class="code-voice">play</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">方法中，该方法使用协议的所需</font></font><code class="code-voice">dice</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">属性来提供其骰子滚动值。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  请注意，该</font></font><code class="code-voice">delegate</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">属性被定义为可</font></font><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">选项</font></font></em> <code class="code-voice">DiceGameDelegate</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，因为不需要委托来玩游戏。</font><font style="vertical-align: inherit;">由于它是可选类型，因此该</font></font><code class="code-voice">delegate</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">属性会自动设置为初始值</font></font><code class="code-voice">nil</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">此后，游戏实例化器可以选择将该属性设置为合适的代理。</font><font style="vertical-align: inherit;">由于</font></font><code class="code-voice">DiceGameDelegate</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">协议仅为类，因此您可以声明委托</font></font><code class="code-voice">weak</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">以防止引用循环。
</font></font></p><p class="para">
  <code class="code-voice">DiceGameDelegate</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">提供了三种跟踪游戏进度的方法。</font><font style="vertical-align: inherit;">这三种方法已被纳入上述</font></font><code class="code-voice">play()</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">方法中</font><font style="vertical-align: inherit;">的游戏逻辑</font><font style="vertical-align: inherit;">，并在新游戏开始，新游戏开始或游戏结束时被调用。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  因为该</font></font><code class="code-voice">delegate</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">属性是</font></font><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">可选的</font></font></em> <code class="code-voice">DiceGameDelegate</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，所以</font></font><code class="code-voice">play()</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">每次它在委托上调用方法时</font><font style="vertical-align: inherit;">，该</font><font style="vertical-align: inherit;">方法都会使用可选的链接。</font><font style="vertical-align: inherit;">如果该</font></font><code class="code-voice">delegate</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">属性为零，则这些委托调用会优雅而无错地失败。</font><font style="vertical-align: inherit;">如果该</font></font><code class="code-voice">delegate</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">属性为非零，则调用委托方法，并将该</font></font><code class="code-voice">SnakesAndLadders</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">实例作为参数</font><font style="vertical-align: inherit;">传递</font><font style="vertical-align: inherit;">。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  下一个例子显示了一个叫做的类</font></font><code class="code-voice">DiceGameTracker</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，它采用了这个</font></font><code class="code-voice">DiceGameDelegate</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">协议：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">class</span> <span class="vc">DiceGameTracker</span>: <span class="n"><!-- a href="" -->DiceGameDelegate<!-- /a --></span> {</code></li>
            <li><code class="code-voice">    <span class="kt">var</span> <span class="vc">numberOfTurns</span> = <span class="m">0</span></code></li>
            <li><code class="code-voice">    <span class="kt">func</span> <span class="vc">gameDidStart</span>(<span class="kt">_</span> <span class="vc">game</span>: <span class="n"><!-- a href="" -->DiceGame<!-- /a --></span>) {</code></li>
            <li><code class="code-voice">        <span class="vc">numberOfTurns</span> = <span class="m">0</span></code></li>
            <li><code class="code-voice">        <span class="kt">if</span> <span class="vc">game</span> <span class="kt">is</span> <span class="n"><!-- a href="" -->SnakesAndLadders<!-- /a --></span> {</code></li>
            <li><code class="code-voice">            <span class="vc">print</span>(<span class="s">"Started a new game of Snakes and Ladders"</span>)</code></li>
            <li><code class="code-voice">        }</code></li>
            <li><code class="code-voice">        <span class="vc">print</span>(<span class="s">"The game is using a </span>\(<span class="vc">game</span>.<span class="vc">dice</span>.<span class="vc">sides</span>)<span class="s">-sided dice"</span>)</code></li>
            <li><code class="code-voice">    }</code></li>
            <li><code class="code-voice">    <span class="kt">func</span> <span class="vc">game</span>(<span class="kt">_</span> <span class="vc">game</span>: <span class="n"><!-- a href="" -->DiceGame<!-- /a --></span>, <span class="vc">didStartNewTurnWithDiceRoll</span> <span class="vc">diceRoll</span>: <span class="n"><!-- a href="" -->Int<!-- /a --></span>) {</code></li>
            <li><code class="code-voice">        <span class="vc">numberOfTurns</span> += <span class="m">1</span></code></li>
            <li><code class="code-voice">        <span class="vc">print</span>(<span class="s">"Rolled a </span>\(<span class="vc">diceRoll</span>)<span class="s">"</span>)</code></li>
            <li><code class="code-voice">    }</code></li>
            <li><code class="code-voice">    <span class="kt">func</span> <span class="vc">gameDidEnd</span>(<span class="kt">_</span> <span class="vc">game</span>: <span class="n"><!-- a href="" -->DiceGame<!-- /a --></span>) {</code></li>
            <li><code class="code-voice">        <span class="vc">print</span>(<span class="s">"The game lasted for </span>\(<span class="vc">numberOfTurns</span>)<span class="s"> turns"</span>)</code></li>
            <li><code class="code-voice">    }</code></li>
            <li><code class="code-voice">}</code></li>
        </ol>
      </div>
  </div>
</section><p class="para">
  <code class="code-voice">DiceGameTracker</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">实现所需的所有三种方法</font></font><code class="code-voice">DiceGameDelegate</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">它使用这些方法来跟踪游戏进行的转数。</font><font style="vertical-align: inherit;">它</font></font><code class="code-voice">numberOfTurns</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">在游戏开始时将</font><font style="vertical-align: inherit;">一个</font><font style="vertical-align: inherit;">属性</font><font style="vertical-align: inherit;">重置</font><font style="vertical-align: inherit;">为零，每次新一轮开始时将其增加一次，并在游戏结束后打印总转数。
</font></font></p><p class="para"><font style="vertical-align: inherit;"></font><code class="code-voice">gameDidStart(_:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">上面显示</font><font style="vertical-align: inherit;">
  的实现</font><font style="vertical-align: inherit;">使用</font></font><code class="code-voice">game</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">参数来打印关于即将播放的游戏的一些介绍性信息。</font><font style="vertical-align: inherit;">该</font></font><code class="code-voice">game</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">参数有一个类型</font></font><code class="code-voice">DiceGame</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，不是</font></font><code class="code-voice">SnakesAndLadders</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，因此</font></font><code class="code-voice">gameDidStart(_:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">只能访问和使用作为</font></font><code class="code-voice">DiceGame</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">协议</font><font style="vertical-align: inherit;">一部分实现的方法和属性</font><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">但是，该方法仍然能够使用类型转换来查询基础实例的类型。</font><font style="vertical-align: inherit;">在这个例子中，它检查</font></font><code class="code-voice">game</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">实际上</font><font style="vertical-align: inherit;">是否</font><font style="vertical-align: inherit;">是</font></font><code class="code-voice">SnakesAndLadders</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">幕后</font><font style="vertical-align: inherit;">实例，</font><font style="vertical-align: inherit;">如果</font><font style="vertical-align: inherit;">是</font><font style="vertical-align: inherit;">，则打印适当的消息。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  该</font></font><code class="code-voice">gameDidStart(_:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">方法还访问</font></font><code class="code-voice">dice</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">传递的</font></font><code class="code-voice">game</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">参数</font><font style="vertical-align: inherit;">的</font><font style="vertical-align: inherit;">属性</font><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">因为</font></font><code class="code-voice">game</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">已知符合</font></font><code class="code-voice">DiceGame</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">协议，所以它保证有一个</font></font><code class="code-voice">dice</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">属性，所以该</font></font><code class="code-voice">gameDidStart(_:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">方法能够访问和打印骰子的</font></font><code class="code-voice">sides</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">属性，而不管正在玩什么类型的游戏。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  以下是</font></font><code class="code-voice">DiceGameTracker</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">看起来</font><font style="vertical-align: inherit;">如何</font><font style="vertical-align: inherit;">行动：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">let</span> <span class="vc">tracker</span> = <span class="vc">DiceGameTracker</span>()</code></li>
            <li><code class="code-voice"><span class="kt">let</span> <span class="vc">game</span> = <span class="vc">SnakesAndLadders</span>()</code></li>
            <li><code class="code-voice"><span class="vc">game</span>.<span class="vc">delegate</span> = <span class="vc">tracker</span></code></li>
            <li><code class="code-voice"><span class="vc">game</span>.<span class="vc">play</span>()</code></li>
            <li><code class="code-voice"><span class="c">// Started a new game of Snakes and Ladders</span></code></li>
            <li><code class="code-voice"><span class="c">// The game is using a 6-sided dice</span></code></li>
            <li><code class="code-voice"><span class="c">// Rolled a 3</span></code></li>
            <li><code class="code-voice"><span class="c">// Rolled a 5</span></code></li>
            <li><code class="code-voice"><span class="c">// Rolled a 4</span></code></li>
            <li><code class="code-voice"><span class="c">// Rolled a 5</span></code></li>
            <li><code class="code-voice"><span class="c">// The game lasted for 4 turns</span></code></li>
        </ol>
      </div>
  </div>
</section>
  
</section>
<section class="section">
  <a name="//apple_ref/doc/uid/TP40014097-CH25-ID277"></a>
  <h3 class="section-name" tabindex="0"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">添加扩展协议一致性</font></font></h3>
  <p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  即使您无法访问现有类型的源代码，也可以扩展现有类型以采用并符合新协议。</font><font style="vertical-align: inherit;">扩展可以向现有类型添加新的属性，方法和下标，因此可以添加协议可能要求的任何要求。</font><font style="vertical-align: inherit;">有关扩展的更多信息，请参阅</font></font><span class="x-name"><a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Extensions.html#//apple_ref/doc/uid/TP40014097-CH24-ID151" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH24-ID151" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_70&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">扩展</font></font></a></span><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。
</font></font></p><div class="note">
  <a name="//apple_ref/doc/uid/TP40014097-CH25-NoLink_173"></a>
  <aside class="aside">
    <p class="aside-title"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">注意
    </font></font></p>
    	<p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">当一致性被添加到扩展中的实例类型时，现有类型的实例会自动采用并符合协议。
    	</font></font></p>
    
  </aside>
</div><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  例如，这个被调用的协议</font></font><code class="code-voice">TextRepresentable</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">可以通过任何可以被表示为文本的方式来实现。</font><font style="vertical-align: inherit;">这可能是对其本身的描述，或者是其当前状态的文本版本：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">protocol</span> <span class="vc">TextRepresentable</span> {</code></li>
            <li><code class="code-voice">    <span class="kt">var</span> <span class="vc">textualDescription</span>: <span class="n"><!-- a href="" -->String<!-- /a --></span> { <span class="kt">get</span> }</code></li>
            <li><code class="code-voice">}</code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"></font><code class="code-voice">Dice</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">以前</font><font style="vertical-align: inherit;">
  的</font><font style="vertical-align: inherit;">课程可以扩展到采用并符合</font></font><code class="code-voice">TextRepresentable</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">extension</span> <span class="n"><!-- a href="" -->Dice<!-- /a --></span>: <span class="n"><!-- a href="" -->TextRepresentable<!-- /a --></span> {</code></li>
            <li><code class="code-voice">    <span class="kt">var</span> <span class="vc">textualDescription</span>: <span class="n"><!-- a href="" -->String<!-- /a --></span> {</code></li>
            <li><code class="code-voice">        <span class="kt">return</span> <span class="s">"A </span>\(<span class="vc">sides</span>)<span class="s">-sided dice"</span></code></li>
            <li><code class="code-voice">    }</code></li>
            <li><code class="code-voice">}</code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  此扩展采用新协议，方式与</font></font><code class="code-voice">Dice</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">原始实现中提供的</font><font style="vertical-align: inherit;">方式完全相同</font><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">协议名称在类型名称之后提供，以冒号分隔，协议的所有要求的实现在扩展的大括号内提供。
</font></font></p><p class="para"><font style="vertical-align: inherit;"></font><code class="code-voice">Dice</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">现在可以将</font><font style="vertical-align: inherit;">
  任何</font><font style="vertical-align: inherit;">实例视为</font></font><code class="code-voice">TextRepresentable</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">let</span> <span class="vc">d12</span> = <span class="vc">Dice</span>(<span class="vc">sides</span>: <span class="m">12</span>, <span class="vc">generator</span>: <span class="vc">LinearCongruentialGenerator</span>())</code></li>
            <li><code class="code-voice"><span class="vc">print</span>(<span class="vc">d12</span>.<span class="vc">textualDescription</span>)</code></li>
            <li><code class="code-voice"><span class="c">// Prints "A 12-sided dice"</span></code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  同样，</font></font><code class="code-voice">SnakesAndLadders</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">游戏类可以扩展为采用并符合</font></font><code class="code-voice">TextRepresentable</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">协议：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">extension</span> <span class="n"><!-- a href="" -->SnakesAndLadders<!-- /a --></span>: <span class="n"><!-- a href="" -->TextRepresentable<!-- /a --></span> {</code></li>
            <li><code class="code-voice">    <span class="kt">var</span> <span class="vc">textualDescription</span>: <span class="n"><!-- a href="" -->String<!-- /a --></span> {</code></li>
            <li><code class="code-voice">        <span class="kt">return</span> <span class="s">"A game of Snakes and Ladders with </span>\(<span class="vc">finalSquare</span>)<span class="s"> squares"</span></code></li>
            <li><code class="code-voice">    }</code></li>
            <li><code class="code-voice">}</code></li>
            <li><code class="code-voice"><span class="vc">print</span>(<span class="vc">game</span>.<span class="vc">textualDescription</span>)</code></li>
            <li><code class="code-voice"><span class="c">// Prints "A game of Snakes and Ladders with 25 squares"</span></code></li>
        </ol>
      </div>
  </div>
</section>
  <section class="section">
  <a name="//apple_ref/doc/uid/TP40014097-CH25-ID574"></a>
  <h3 class="section-name" tabindex="0"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">有条件地符合议定书</font></font></h3>
  <p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  通用类型只能在某些条件下才能满足协议的要求，例如类型的通用参数符合协议。</font><font style="vertical-align: inherit;">在扩展类型时，可以通过列出约束来使通用类型有条件地符合协议。</font></font><code class="code-voice">where</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">如</font></font><span class="x-name"><a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Generics.html#//apple_ref/doc/uid/TP40014097-CH26-ID192" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH26-ID192" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_71&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">泛型Where</font></font></a></span><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">子句中所述，</font><font style="vertical-align: inherit;">使用通用</font><font style="vertical-align: inherit;">子句</font><font style="vertical-align: inherit;">将这些约束写入采用的协议名称后面</font><font style="vertical-align: inherit;">。
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">extension</span> <span class="n"><!-- a href="" -->Array<!-- /a --></span>: <span class="n"><!-- a href="" -->TextRepresentable<!-- /a --></span> <span class="kt">where</span> <span class="vc">Element</span>: <span class="vc">TextRepresentable</span> {</code></li>
            <li><code class="code-voice">    <span class="kt">var</span> <span class="vc">textualDescription</span>: <span class="n"><!-- a href="" -->String<!-- /a --></span> {</code></li>
            <li><code class="code-voice">        <span class="kt">let</span> <span class="vc">itemsAsText</span> = <span class="kt">self</span>.<span class="vc">map</span> { <span class="vc">$0</span>.<span class="vc">textualDescription</span> }</code></li>
            <li><code class="code-voice">        <span class="kt">return</span> <span class="s">"["</span> + <span class="vc">itemsAsText</span>.<span class="vc">joined</span>(<span class="vc">separator</span>: <span class="s">", "</span>) + <span class="s">"]"</span></code></li>
            <li><code class="code-voice">    }</code></li>
            <li><code class="code-voice">}</code></li>
            <li><code class="code-voice"><span class="kt">let</span> <span class="vc">myDice</span> = [<span class="vc">d6</span>, <span class="vc">d12</span>]</code></li>
            <li><code class="code-voice"><span class="vc">print</span>(<span class="vc">myDice</span>.<span class="vc">textualDescription</span>)</code></li>
            <li><code class="code-voice"><span class="c">// Prints "[A 6-sided dice, A 12-sided dice]"</span></code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  有了这个扩展，</font></font><code class="code-voice">Array</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">实例</font></font><code class="code-voice">TextRepresentable</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">只要存储符合类型的元素就</font><font style="vertical-align: inherit;">符合</font><font style="vertical-align: inherit;">协议</font></font><code class="code-voice">TextRepresentable</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。
</font></font></p>
  
</section>
<section class="section">
  <a name="//apple_ref/doc/uid/TP40014097-CH25-ID278"></a>
  <h3 class="section-name" tabindex="0"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">使用扩展声明协议采用</font></font></h3>
  <p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  如果一个类型已经符合协议的所有要求，但尚未声明它采用该协议，则可以使其采用具有空扩展名的协议：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">struct</span> <span class="vc">Hamster</span> {</code></li>
            <li><code class="code-voice">    <span class="kt">var</span> <span class="vc">name</span>: <span class="n"><!-- a href="" -->String<!-- /a --></span></code></li>
            <li><code class="code-voice">    <span class="kt">var</span> <span class="vc">textualDescription</span>: <span class="n"><!-- a href="" -->String<!-- /a --></span> {</code></li>
            <li><code class="code-voice">        <span class="kt">return</span> <span class="s">"A hamster named </span>\(<span class="vc">name</span>)<span class="s">"</span></code></li>
            <li><code class="code-voice">    }</code></li>
            <li><code class="code-voice">}</code></li>
            <li><code class="code-voice"><span class="kt">extension</span> <span class="n"><!-- a href="" -->Hamster<!-- /a --></span>: <span class="n"><!-- a href="" -->TextRepresentable<!-- /a --></span> {}</code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"></font><code class="code-voice">Hamster</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">现在可以在任何</font></font><code class="code-voice">TextRepresentable</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">需要的类型中</font><font style="vertical-align: inherit;">使用</font><font style="vertical-align: inherit;">
  实例</font><font style="vertical-align: inherit;">：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">let</span> <span class="vc">simonTheHamster</span> = <span class="vc">Hamster</span>(<span class="vc">name</span>: <span class="s">"Simon"</span>)</code></li>
            <li><code class="code-voice"><span class="kt">let</span> <span class="vc">somethingTextRepresentable</span>: <span class="n"><!-- a href="" -->TextRepresentable<!-- /a --></span> = <span class="vc">simonTheHamster</span></code></li>
            <li><code class="code-voice"><span class="vc">print</span>(<span class="vc">somethingTextRepresentable</span>.<span class="vc">textualDescription</span>)</code></li>
            <li><code class="code-voice"><span class="c">// Prints "A hamster named Simon"</span></code></li>
        </ol>
      </div>
  </div>
</section><div class="note">
  <a name="//apple_ref/doc/uid/TP40014097-CH25-NoLink_174"></a>
  <aside class="aside">
    <p class="aside-title"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">注意
    </font></font></p>
    	<p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">只有满足其要求，类型才会自动采用协议。</font><font style="vertical-align: inherit;">他们必须始终明确宣布他们通过协议。
    	</font></font></p>
    
  </aside>
</div>
  
</section>

</section>
<section class="section">
  <a name="//apple_ref/doc/uid/TP40014097-CH25-ID279"></a>
  <h3 class="section-name" tabindex="0"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">协议类型的集合</font></font></h3>
  <p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  协议可以用作要存储在集合中的类型，如数组或字典，如</font></font><span class="x-name"><a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Protocols.html#//apple_ref/doc/uid/TP40014097-CH25-ID275" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH25-ID275" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_72&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">协议类型中所述</font></font></a></span><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">这个例子创建了一系列的</font></font><code class="code-voice">TextRepresentable</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">东西：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">let</span> <span class="vc">things</span>: [<span class="n"><!-- a href="" -->TextRepresentable<!-- /a --></span>] = [<span class="vc">game</span>, <span class="vc">d12</span>, <span class="vc">simonTheHamster</span>]</code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  现在可以遍历数组中的项目，并打印每个项目的文本描述：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">for</span> <span class="vc">thing</span> <span class="kt">in</span> <span class="vc">things</span> {</code></li>
            <li><code class="code-voice">    <span class="vc">print</span>(<span class="vc">thing</span>.<span class="vc">textualDescription</span>)</code></li>
            <li><code class="code-voice">}</code></li>
            <li><code class="code-voice"><span class="c">// A game of Snakes and Ladders with 25 squares</span></code></li>
            <li><code class="code-voice"><span class="c">// A 12-sided dice</span></code></li>
            <li><code class="code-voice"><span class="c">// A hamster named Simon</span></code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  请注意，</font></font><code class="code-voice">thing</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">常数是类型的</font></font><code class="code-voice">TextRepresentable</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">它不是类型的</font></font><code class="code-voice">Dice</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，或者</font></font><code class="code-voice">DiceGame</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，</font></font><code class="code-voice">Hamster</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">即使幕后的实际实例属于这些类型之一。</font><font style="vertical-align: inherit;">尽管如此，因为它是类型的</font></font><code class="code-voice">TextRepresentable</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，并且任何</font></font><code class="code-voice">TextRepresentable</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">已知的</font></font><code class="code-voice">textualDescription</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">属性</font><font style="vertical-align: inherit;">都有</font><font style="vertical-align: inherit;">，所以</font></font><code class="code-voice">thing.textualDescription</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">每次通过循环</font><font style="vertical-align: inherit;">访问</font><font style="vertical-align: inherit;">都是</font><font style="vertical-align: inherit;">安全</font><font style="vertical-align: inherit;">的。
</font></font></p>
  
</section>
<section class="section">
  <a name="//apple_ref/doc/uid/TP40014097-CH25-ID280"></a>
  <h3 class="section-name" tabindex="0"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">协议继承</font></font></h3>
  <p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  一个协议可以</font></font><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">继承</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">一个或多个其他协议，并且可以在其继承的需求之上添加更多的需求。</font><font style="vertical-align: inherit;">协议继承的语法与类继承的语法相似，但可以选择列出多个继承协议（用逗号分隔）：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">protocol</span> <span class="vc">InheritingProtocol</span>: <span class="n"><!-- a href="" -->SomeProtocol<!-- /a --></span>, <span class="n"><!-- a href="" -->AnotherProtocol<!-- /a --></span> {</code></li>
            <li><code class="code-voice">    <span class="c">// protocol definition goes here</span></code></li>
            <li><code class="code-voice">}</code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  以下是一个继承上述</font></font><code class="code-voice">TextRepresentable</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">协议</font><font style="vertical-align: inherit;">的协议示例</font><font style="vertical-align: inherit;">：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">protocol</span> <span class="vc">PrettyTextRepresentable</span>: <span class="n"><!-- a href="" -->TextRepresentable<!-- /a --></span> {</code></li>
            <li><code class="code-voice">    <span class="kt">var</span> <span class="vc">prettyTextualDescription</span>: <span class="n"><!-- a href="" -->String<!-- /a --></span> { <span class="kt">get</span> }</code></li>
            <li><code class="code-voice">}</code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  这个例子定义了一个新的协议</font></font><code class="code-voice">PrettyTextRepresentable</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，它从中继承</font></font><code class="code-voice">TextRepresentable</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">任何采取的措施都</font></font><code class="code-voice">PrettyTextRepresentable</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">必须满足所强制执行的所有要求</font></font><code class="code-voice">TextRepresentable</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，</font></font><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">以及</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">强制实施的附加要求</font></font><code class="code-voice">PrettyTextRepresentable</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">在这个例子中，</font></font><code class="code-voice">PrettyTextRepresentable</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">增加了一个单独的需求来提供一个叫做</font></font><code class="code-voice">prettyTextualDescription</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">返回a </font><font style="vertical-align: inherit;">的gettable属性</font></font><code class="code-voice">String</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  该</font></font><code class="code-voice">SnakesAndLadders</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">级可扩展到通过并符合</font></font><code class="code-voice">PrettyTextRepresentable</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">extension</span> <span class="n"><!-- a href="" -->SnakesAndLadders<!-- /a --></span>: <span class="n"><!-- a href="" -->PrettyTextRepresentable<!-- /a --></span> {</code></li>
            <li><code class="code-voice">    <span class="kt">var</span> <span class="vc">prettyTextualDescription</span>: <span class="n"><!-- a href="" -->String<!-- /a --></span> {</code></li>
            <li><code class="code-voice">        <span class="kt">var</span> <span class="vc">output</span> = <span class="vc">textualDescription</span> + <span class="s">":\n"</span></code></li>
            <li><code class="code-voice">        <span class="kt">for</span> <span class="vc">index</span> <span class="kt">in</span> <span class="m">1</span>...<span class="vc">finalSquare</span> {</code></li>
            <li><code class="code-voice">            <span class="kt">switch</span> <span class="vc">board</span>[<span class="vc">index</span>] {</code></li>
            <li><code class="code-voice">            <span class="kt">case</span> <span class="kt">let</span> <span class="vc">ladder</span> <span class="kt">where</span> <span class="vc">ladder</span> &gt; <span class="m">0</span>:</code></li>
            <li><code class="code-voice">                <span class="vc">output</span> += <span class="s">"▲ "</span></code></li>
            <li><code class="code-voice">            <span class="kt">case</span> <span class="kt">let</span> <span class="vc">snake</span> <span class="kt">where</span> <span class="vc">snake</span> &lt; <span class="m">0</span>:</code></li>
            <li><code class="code-voice">                <span class="vc">output</span> += <span class="s">"▼ "</span></code></li>
            <li><code class="code-voice">            <span class="kt">default</span>:</code></li>
            <li><code class="code-voice">                <span class="vc">output</span> += <span class="s">"○ "</span></code></li>
            <li><code class="code-voice">            }</code></li>
            <li><code class="code-voice">        }</code></li>
            <li><code class="code-voice">        <span class="kt">return</span> <span class="vc">output</span></code></li>
            <li><code class="code-voice">    }</code></li>
            <li><code class="code-voice">}</code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  该扩展指出它采用</font></font><code class="code-voice">PrettyTextRepresentable</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">协议并提供</font></font><code class="code-voice">prettyTextualDescription</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">该</font></font><code class="code-voice">SnakesAndLadders</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">类型</font><font style="vertical-align: inherit;">属性</font><font style="vertical-align: inherit;">的实现</font><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">任何东西也</font></font><code class="code-voice">PrettyTextRepresentable</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">必须是</font></font><code class="code-voice">TextRepresentable</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">这样的，所以</font></font><code class="code-voice">prettyTextualDescription</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">通过</font></font><code class="code-voice">textualDescription</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">从</font></font><code class="code-voice">TextRepresentable</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">协议</font><font style="vertical-align: inherit;">访问</font><font style="vertical-align: inherit;">属性</font><font style="vertical-align: inherit;">开始执行输出字符串。</font><font style="vertical-align: inherit;">它追加冒号和换行符，并将其用作其漂亮文本表示的开始。</font><font style="vertical-align: inherit;">然后它遍历棋盘方格阵列，并附加一个几何形状来表示每个方格的内容：
</font></font></p><ul class="list-bullet">
  <li class="item"><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  如果方格的值大于</font></font><code class="code-voice">0</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，则它是梯子的基础，并由其表示</font></font><code class="code-voice">▲</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。
</font></font></p>
</li><li class="item"><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  如果方格的值小于</font></font><code class="code-voice">0</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，则它是蛇的头部，并由其表示</font></font><code class="code-voice">▼</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。
</font></font></p>
</li><li class="item"><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  否则，广场的价值是</font></font><code class="code-voice">0</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，这是一个“自由”的平方，由</font></font><code class="code-voice">○</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。
</font></font></p>
</li>
</ul><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  该</font></font><code class="code-voice">prettyTextualDescription</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">属性现在可以用来打印任何</font></font><code class="code-voice">SnakesAndLadders</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">实例</font><font style="vertical-align: inherit;">的漂亮文本描述</font><font style="vertical-align: inherit;">：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="vc">print</span>(<span class="vc">game</span>.<span class="vc">prettyTextualDescription</span>)</code></li>
            <li><code class="code-voice"><span class="c">// A game of Snakes and Ladders with 25 squares:</span></code></li>
            <li><code class="code-voice"><span class="c">// ○ ○ ▲ ○ ○ ▲ ○ ○ ▲ ▲ ○ ○ ○ ▼ ○ ○ ○ ○ ▼ ○ ○ ▼ ○ ▼ ○</span></code></li>
        </ol>
      </div>
  </div>
</section>
  
</section>
<section class="section">
  <a name="//apple_ref/doc/uid/TP40014097-CH25-ID281"></a>
  <h3 class="section-name" tabindex="0"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">仅限于类的协议</font></font></h3>
  <p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  通过将</font></font><code class="code-voice">AnyObject</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">协议</font><font style="vertical-align: inherit;">添加</font><font style="vertical-align: inherit;">到协议的继承列表中，</font><font style="vertical-align: inherit;">您可以将协议采用限制为类类型（而不是结构或枚举）</font><font style="vertical-align: inherit;">。
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">protocol</span> <span class="vc">SomeClassOnlyProtocol</span>: <span class="n"><!-- a href="" -->AnyObject<!-- /a --></span>, <span class="n"><!-- a href="" -->SomeInheritedProtocol<!-- /a --></span> {</code></li>
            <li><code class="code-voice">    <span class="c">// class-only protocol definition goes here</span></code></li>
            <li><code class="code-voice">}</code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  在上面的例子中，</font></font><code class="code-voice">SomeClassOnlyProtocol</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">只能通过类类型来采用。</font><font style="vertical-align: inherit;">编写尝试采用的结构或枚举定义是编译时错误</font></font><code class="code-voice">SomeClassOnlyProtocol</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。
</font></font></p><div class="note">
  <a name="//apple_ref/doc/uid/TP40014097-CH25-NoLink_175"></a>
  <aside class="aside">
    <p class="aside-title"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">注意
    </font></font></p>
    	<p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">当协议要求定义的行为假定或要求符合类型具有引用语义而不是值语义时，请使用仅类别协议。</font><font style="vertical-align: inherit;">有关引用和值语义的更多信息，请参阅</font></font><span class="x-name"><a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/ClassesAndStructures.html#//apple_ref/doc/uid/TP40014097-CH13-ID88" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH13-ID88" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_73&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">结构和枚举是值类型</font></font></a></span><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">和</font></font><span class="x-name"><a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/ClassesAndStructures.html#//apple_ref/doc/uid/TP40014097-CH13-ID89" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH13-ID89" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_74&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">类是引用类型</font></font></a></span><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。
    	</font></font></p>
    
  </aside>
</div>
  
</section>
<section class="section">
  <a name="//apple_ref/doc/uid/TP40014097-CH25-ID282"></a>
  <h3 class="section-name" tabindex="0"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">协议组成</font></font></h3>
  <p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  要求类型同时符合多个协议会很有用。</font><font style="vertical-align: inherit;">您可以使用</font></font><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">协议组合</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">将多个协议组合成单个需求</font><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">协议组合的行为就好像您定义了一个临时本地协议，该协议具有组合中所有协议的组合要求。</font><font style="vertical-align: inherit;">协议组合不定义任何新的协议类型。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  协议组合具有这种形式</font></font><code class="code-voice">SomeProtocol &amp; AnotherProtocol</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">您可以根据需要列出尽可能多的协议，并用＆符号（</font></font><code class="code-voice">&amp;</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">）</font><font style="vertical-align: inherit;">分隔它们</font><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">除协议列表之外，协议组合还可以包含一个类类型，您可以使用它来指定所需的超类。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  以下是一个将两个协议调用</font></font><code class="code-voice">Named</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">并</font></font><code class="code-voice">Aged</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">组合成一个函数参数的单个协议组合需求</font><font style="vertical-align: inherit;">的示例</font><font style="vertical-align: inherit;">：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">protocol</span> <span class="vc">Named</span> {</code></li>
            <li><code class="code-voice">    <span class="kt">var</span> <span class="vc">name</span>: <span class="n"><!-- a href="" -->String<!-- /a --></span> { <span class="kt">get</span> }</code></li>
            <li><code class="code-voice">}</code></li>
            <li><code class="code-voice"><span class="kt">protocol</span> <span class="vc">Aged</span> {</code></li>
            <li><code class="code-voice">    <span class="kt">var</span> <span class="vc">age</span>: <span class="n"><!-- a href="" -->Int<!-- /a --></span> { <span class="kt">get</span> }</code></li>
            <li><code class="code-voice">}</code></li>
            <li><code class="code-voice"><span class="kt">struct</span> <span class="vc">Person</span>: <span class="n"><!-- a href="" -->Named<!-- /a --></span>, <span class="n"><!-- a href="" -->Aged<!-- /a --></span> {</code></li>
            <li><code class="code-voice">    <span class="kt">var</span> <span class="vc">name</span>: <span class="n"><!-- a href="" -->String<!-- /a --></span></code></li>
            <li><code class="code-voice">    <span class="kt">var</span> <span class="vc">age</span>: <span class="n"><!-- a href="" -->Int<!-- /a --></span></code></li>
            <li><code class="code-voice">}</code></li>
            <li><code class="code-voice"><span class="kt">func</span> <span class="vc">wishHappyBirthday</span>(<span class="vc">to</span> <span class="vc">celebrator</span>: <span class="n"><!-- a href="" -->Named<!-- /a --></span> &amp; <span class="n"><!-- a href="" -->Aged<!-- /a --></span>) {</code></li>
            <li><code class="code-voice">    <span class="vc">print</span>(<span class="s">"Happy birthday, </span>\(<span class="vc">celebrator</span>.<span class="vc">name</span>)<span class="s">, you're </span>\(<span class="vc">celebrator</span>.<span class="vc">age</span>)<span class="s">!"</span>)</code></li>
            <li><code class="code-voice">}</code></li>
            <li><code class="code-voice"><span class="kt">let</span> <span class="vc">birthdayPerson</span> = <span class="vc">Person</span>(<span class="vc">name</span>: <span class="s">"Malcolm"</span>, <span class="vc">age</span>: <span class="m">21</span>)</code></li>
            <li><code class="code-voice"><span class="vc">wishHappyBirthday</span>(<span class="vc">to</span>: <span class="vc">birthdayPerson</span>)</code></li>
            <li><code class="code-voice"><span class="c">// Prints "Happy birthday, Malcolm, you're 21!"</span></code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  在这个例子中，该</font></font><code class="code-voice">Named</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">协议对于</font></font><code class="code-voice">String</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">所谓</font><font style="vertical-align: inherit;">的gettable </font><font style="vertical-align: inherit;">属性</font><font style="vertical-align: inherit;">有一个单独的要求</font></font><code class="code-voice">name</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">该</font></font><code class="code-voice">Aged</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">协议对于</font></font><code class="code-voice">Int</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">所谓</font><font style="vertical-align: inherit;">的gettable </font><font style="vertical-align: inherit;">属性</font><font style="vertical-align: inherit;">有一个单独的要求</font></font><code class="code-voice">age</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">两个协议都被一个叫做结构的结构采用</font></font><code class="code-voice">Person</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  该示例还定义了一个</font></font><code class="code-voice">wishHappyBirthday(to:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">函数。</font></font><code class="code-voice">celebrator</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">参数</font><font style="vertical-align: inherit;">的类型</font><font style="vertical-align: inherit;">是</font></font><code class="code-voice">Named &amp; Aged</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，意思是“符合</font></font><code class="code-voice">Named</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">和</font></font><code class="code-voice">Aged</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">协议的</font><font style="vertical-align: inherit;">任何类型” </font><font style="vertical-align: inherit;">。只要它符合所需的两种协议，传递给函数的是哪一种特定的类型并不重要。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  然后该示例创建一个新</font></font><code class="code-voice">Person</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">实例</font></font><code class="code-voice">birthdayPerson</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，并将该新实例传递给该</font></font><code class="code-voice">wishHappyBirthday(to:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">函数。</font><font style="vertical-align: inherit;">由于</font></font><code class="code-voice">Person</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">符合两种协议，此调用是有效的，并且该</font></font><code class="code-voice">wishHappyBirthday(to:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">函数可以打印其生日问候语。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  下面是一个将</font></font><code class="code-voice">Named</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">前</font><font style="vertical-align: inherit;">一个示例中的</font><font style="vertical-align: inherit;">协议与一个</font></font><code class="code-voice">Location</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">类</font><font style="vertical-align: inherit;">相结合的</font><font style="vertical-align: inherit;">示例</font><font style="vertical-align: inherit;">：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">class</span> <span class="vc">Location</span> {</code></li>
            <li><code class="code-voice">    <span class="kt">var</span> <span class="vc">latitude</span>: <span class="n"><!-- a href="" -->Double<!-- /a --></span></code></li>
            <li><code class="code-voice">    <span class="kt">var</span> <span class="vc">longitude</span>: <span class="n"><!-- a href="" -->Double<!-- /a --></span></code></li>
            <li><code class="code-voice">    <span class="kt">init</span>(<span class="vc">latitude</span>: <span class="n"><!-- a href="" -->Double<!-- /a --></span>, <span class="vc">longitude</span>: <span class="n"><!-- a href="" -->Double<!-- /a --></span>) {</code></li>
            <li><code class="code-voice">        <span class="kt">self</span>.<span class="vc">latitude</span> = <span class="vc">latitude</span></code></li>
            <li><code class="code-voice">        <span class="kt">self</span>.<span class="vc">longitude</span> = <span class="vc">longitude</span></code></li>
            <li><code class="code-voice">    }</code></li>
            <li><code class="code-voice">}</code></li>
            <li><code class="code-voice"><span class="kt">class</span> <span class="vc">City</span>: <span class="n"><!-- a href="" -->Location<!-- /a --></span>, <span class="n"><!-- a href="" -->Named<!-- /a --></span> {</code></li>
            <li><code class="code-voice">    <span class="kt">var</span> <span class="vc">name</span>: <span class="n"><!-- a href="" -->String<!-- /a --></span></code></li>
            <li><code class="code-voice">    <span class="kt">init</span>(<span class="vc">name</span>: <span class="n"><!-- a href="" -->String<!-- /a --></span>, <span class="vc">latitude</span>: <span class="n"><!-- a href="" -->Double<!-- /a --></span>, <span class="vc">longitude</span>: <span class="n"><!-- a href="" -->Double<!-- /a --></span>) {</code></li>
            <li><code class="code-voice">        <span class="kt">self</span>.<span class="vc">name</span> = <span class="vc">name</span></code></li>
            <li><code class="code-voice">        <span class="kt">super</span>.<span class="kt">init</span>(<span class="vc">latitude</span>: <span class="vc">latitude</span>, <span class="vc">longitude</span>: <span class="vc">longitude</span>)</code></li>
            <li><code class="code-voice">    }</code></li>
            <li><code class="code-voice">}</code></li>
            <li><code class="code-voice"><span class="kt">func</span> <span class="vc">beginConcert</span>(<span class="vc">in</span> <span class="vc">location</span>: <span class="n"><!-- a href="" -->Location<!-- /a --></span> &amp; <span class="n"><!-- a href="" -->Named<!-- /a --></span>) {</code></li>
            <li><code class="code-voice">    <span class="vc">print</span>(<span class="s">"Hello, </span>\(<span class="vc">location</span>.<span class="vc">name</span>)<span class="s">!"</span>)</code></li>
            <li><code class="code-voice">}</code></li>
            <li><code class="code-voice"> </code></li>
            <li><code class="code-voice"><span class="kt">let</span> <span class="vc">seattle</span> = <span class="vc">City</span>(<span class="vc">name</span>: <span class="s">"Seattle"</span>, <span class="vc">latitude</span>: <span class="m">47.6</span>, <span class="vc">longitude</span>: <span class="m">-122.3</span>)</code></li>
            <li><code class="code-voice"><span class="vc">beginConcert</span>(<span class="vc">in</span>: <span class="vc">seattle</span>)</code></li>
            <li><code class="code-voice"><span class="c">// Prints "Hello, Seattle!"</span></code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  该</font></font><code class="code-voice">beginConcert(in:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">函数接受一个类型参数</font></font><code class="code-voice">Location &amp; Named</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，这意味着“任何类型都是</font><font style="vertical-align: inherit;">协议</font><font style="vertical-align: inherit;">的子类，</font></font><code class="code-voice">Location</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">并且符合</font></font><code class="code-voice">Named</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">协议。”在这种情况下，</font></font><code class="code-voice">City</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">满足这两个要求。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  传递</font></font><code class="code-voice">birthdayPerson</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">给</font></font><code class="code-voice">beginConcert(in:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">函数是无效的，因为</font></font><code class="code-voice">Person</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">它不是的子类</font></font><code class="code-voice">Location</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">同样，如果您创建了</font></font><code class="code-voice">Location</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">不符合</font></font><code class="code-voice">Named</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">协议</font><font style="vertical-align: inherit;">的子类，则</font></font><code class="code-voice">beginConcert(in:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">使用该类型的实例进行</font><font style="vertical-align: inherit;">调用</font><font style="vertical-align: inherit;">也是无效的。
</font></font></p>
  
</section>
<section class="section">
  <a name="//apple_ref/doc/uid/TP40014097-CH25-ID283"></a>
  <h3 class="section-name" tabindex="0"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">检查协议一致性</font></font></h3>
  <p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  您可以使用</font><span class="x-name"><a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/TypeCasting.html#//apple_ref/doc/uid/TP40014097-CH22-ID338" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH22-ID338" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_75&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;">类型转换中</font></a></span><font style="vertical-align: inherit;">描述</font><font style="vertical-align: inherit;">的</font></font><code class="code-voice">is</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">和</font></font><code class="code-voice">as</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">运算符</font><font style="vertical-align: inherit;">来检查协议一致性，并转换为特定的协议。</font><font style="vertical-align: inherit;">检查并转换为协议遵循与检查和转换为类型完全相同的语法：
</font></font><span class="x-name"><a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/TypeCasting.html#//apple_ref/doc/uid/TP40014097-CH22-ID338" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH22-ID338" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_75&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"></font></a></span><font style="vertical-align: inherit;"></font></p><ul class="list-bullet">
  <li class="item"><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  该</font></font><code class="code-voice">is</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">运算符返回</font></font><code class="code-voice">true</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">如果一个实例遵循的协议，并返回</font></font><code class="code-voice">false</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，如果它不。
</font></font></p>
</li><li class="item"><p class="para"><font style="vertical-align: inherit;"></font><code class="code-voice">as?</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">downcast运算符</font><font style="vertical-align: inherit;">
  的</font><font style="vertical-align: inherit;">版本返回协议类型的可选值，</font></font><code class="code-voice">nil</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">如果实例不符合该协议</font><font style="vertical-align: inherit;">，则此值为</font><font style="vertical-align: inherit;">。
</font></font></p>
</li><li class="item"><p class="para"><font style="vertical-align: inherit;"></font><code class="code-voice">as!</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">downcast操作符</font><font style="vertical-align: inherit;">
  的</font><font style="vertical-align: inherit;">版本强制downcast转换为协议类型，如果downcast不成功，则触发运行时错误。
</font></font></p>
</li>
</ul><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  这个例子定义了一个调用的协议</font></font><code class="code-voice">HasArea</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，其中一个gettable </font></font><code class="code-voice">Double</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">属性</font><font style="vertical-align: inherit;">的单个属性需求</font><font style="vertical-align: inherit;">叫做</font></font><code class="code-voice">area</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">protocol</span> <span class="vc">HasArea</span> {</code></li>
            <li><code class="code-voice">    <span class="kt">var</span> <span class="vc">area</span>: <span class="n"><!-- a href="" -->Double<!-- /a --></span> { <span class="kt">get</span> }</code></li>
            <li><code class="code-voice">}</code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  这里有两个类，</font></font><code class="code-voice">Circle</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">并且</font></font><code class="code-voice">Country</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，这两者的符合</font></font><code class="code-voice">HasArea</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">协议：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">class</span> <span class="vc">Circle</span>: <span class="n"><!-- a href="" -->HasArea<!-- /a --></span> {</code></li>
            <li><code class="code-voice">    <span class="kt">let</span> <span class="vc">pi</span> = <span class="m">3.1415927</span></code></li>
            <li><code class="code-voice">    <span class="kt">var</span> <span class="vc">radius</span>: <span class="n"><!-- a href="" -->Double<!-- /a --></span></code></li>
            <li><code class="code-voice">    <span class="kt">var</span> <span class="vc">area</span>: <span class="n"><!-- a href="" -->Double<!-- /a --></span> { <span class="kt">return</span> <span class="vc">pi</span> * <span class="vc">radius</span> * <span class="vc">radius</span> }</code></li>
            <li><code class="code-voice">    <span class="kt">init</span>(<span class="vc">radius</span>: <span class="n"><!-- a href="" -->Double<!-- /a --></span>) { <span class="kt">self</span>.<span class="vc">radius</span> = <span class="vc">radius</span> }</code></li>
            <li><code class="code-voice">}</code></li>
            <li><code class="code-voice"><span class="kt">class</span> <span class="vc">Country</span>: <span class="n"><!-- a href="" -->HasArea<!-- /a --></span> {</code></li>
            <li><code class="code-voice">    <span class="kt">var</span> <span class="vc">area</span>: <span class="n"><!-- a href="" -->Double<!-- /a --></span></code></li>
            <li><code class="code-voice">    <span class="kt">init</span>(<span class="vc">area</span>: <span class="n"><!-- a href="" -->Double<!-- /a --></span>) { <span class="kt">self</span>.<span class="vc">area</span> = <span class="vc">area</span> }</code></li>
            <li><code class="code-voice">}</code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  的</font></font><code class="code-voice">Circle</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">类实现</font></font><code class="code-voice">area</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">性能要求作为一个计算的属性的基础上，所存储的</font></font><code class="code-voice">radius</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">属性。</font><font style="vertical-align: inherit;">本</font></font><code class="code-voice">Country</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">类实现了</font></font><code class="code-voice">area</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">直接需求的存储性能。</font><font style="vertical-align: inherit;">两个类都正确地符合</font></font><code class="code-voice">HasArea</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">协议。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  这是一个叫做的类</font></font><code class="code-voice">Animal</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，它不符合</font></font><code class="code-voice">HasArea</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">协议：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">class</span> <span class="vc">Animal</span> {</code></li>
            <li><code class="code-voice">    <span class="kt">var</span> <span class="vc">legs</span>: <span class="n"><!-- a href="" -->Int<!-- /a --></span></code></li>
            <li><code class="code-voice">    <span class="kt">init</span>(<span class="vc">legs</span>: <span class="n"><!-- a href="" -->Int<!-- /a --></span>) { <span class="kt">self</span>.<span class="vc">legs</span> = <span class="vc">legs</span> }</code></li>
            <li><code class="code-voice">}</code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  的</font></font><code class="code-voice">Circle</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，</font></font><code class="code-voice">Country</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">而</font></font><code class="code-voice">Animal</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">类没有共享的基类。</font><font style="vertical-align: inherit;">尽管如此，它们都是类，所有这三种类型的实例都可以用来初始化一个存储类型值的数组</font></font><code class="code-voice">AnyObject</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">let</span> <span class="vc">objects</span>: [<span class="n"><!-- a href="" -->AnyObject<!-- /a --></span>] = [</code></li>
            <li><code class="code-voice">    <span class="vc">Circle</span>(<span class="vc">radius</span>: <span class="m">2.0</span>),</code></li>
            <li><code class="code-voice">    <span class="vc">Country</span>(<span class="vc">area</span>: <span class="m">243_610</span>),</code></li>
            <li><code class="code-voice">    <span class="vc">Animal</span>(<span class="vc">legs</span>: <span class="m">4</span>)</code></li>
            <li><code class="code-voice">]</code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  该</font></font><code class="code-voice">objects</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">阵列被初始化为常量，其中包含的阵列</font></font><code class="code-voice">Circle</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">具有2个单位的半径实例; </font><font style="vertical-align: inherit;">一个</font></font><code class="code-voice">Country</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">以平方公里的英国地表面积初始化</font><font style="vertical-align: inherit;">的</font><font style="vertical-align: inherit;">例子; </font><font style="vertical-align: inherit;">和</font></font><code class="code-voice">Animal</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">四条腿</font><font style="vertical-align: inherit;">的</font><font style="vertical-align: inherit;">例子。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  的</font></font><code class="code-voice">objects</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">阵列现在可以重复，并且阵列中的每个对象可以被检查，看它是否符合</font></font><code class="code-voice">HasArea</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">协议：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">for</span> <span class="vc">object</span> <span class="kt">in</span> <span class="vc">objects</span> {</code></li>
            <li><code class="code-voice">    <span class="kt">if</span> <span class="kt">let</span> <span class="vc">objectWithArea</span> = <span class="vc">object</span> <span class="kt">as</span>? <span class="n"><!-- a href="" -->HasArea<!-- /a --></span> {</code></li>
            <li><code class="code-voice">        <span class="vc">print</span>(<span class="s">"Area is </span>\(<span class="vc">objectWithArea</span>.<span class="vc">area</span>)<span class="s">"</span>)</code></li>
            <li><code class="code-voice">    } <span class="kt">else</span> {</code></li>
            <li><code class="code-voice">        <span class="vc">print</span>(<span class="s">"Something that doesn't have an area"</span>)</code></li>
            <li><code class="code-voice">    }</code></li>
            <li><code class="code-voice">}</code></li>
            <li><code class="code-voice"><span class="c">// Area is 12.5663708</span></code></li>
            <li><code class="code-voice"><span class="c">// Area is 243610.0</span></code></li>
            <li><code class="code-voice"><span class="c">// Something that doesn't have an area</span></code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  只要数组中的某个对象符合该</font></font><code class="code-voice">HasArea</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">协议，</font></font><code class="code-voice">as?</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">运算符</font><font style="vertical-align: inherit;">返回的可选值</font><font style="vertical-align: inherit;">就会使用可选的绑定解压到一个名为常量的常量中</font></font><code class="code-voice">objectWithArea</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">该</font></font><code class="code-voice">objectWithArea</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">常数是已知的类型</font></font><code class="code-voice">HasArea</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，因此其</font></font><code class="code-voice">area</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">属性可以以类型安全的方式访问和打印。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  请注意，投射过程不会更改底层对象。</font><font style="vertical-align: inherit;">他们继续是一个</font></font><code class="code-voice">Circle</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，一个</font></font><code class="code-voice">Country</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">和一个</font></font><code class="code-voice">Animal</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">然而，在它们存储在</font></font><code class="code-voice">objectWithArea</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">常量中的时候，它们只知道是类型的</font></font><code class="code-voice">HasArea</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，所以只有它们的</font></font><code class="code-voice">area</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">属性可以被访问。
</font></font></p>
  
</section>
<section class="section">
  <a name="//apple_ref/doc/uid/TP40014097-CH25-ID284"></a>
  <h3 class="section-name" tabindex="0"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">可选协议要求</font></font></h3>
  <p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  您可以</font><font style="vertical-align: inherit;">为协议</font><font style="vertical-align: inherit;">定义</font></font><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">可选的需求</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，这些需求不一定要通过符合协议的类型来实现。</font></font><code class="code-voice">optional</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">作为协议定义的一部分，</font><font style="vertical-align: inherit;">可选要求由</font><font style="vertical-align: inherit;">修饰符作为</font><font style="vertical-align: inherit;">前缀</font><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">可选的需求是可用的，以便您可以编写与Objective-C互操作的代码。</font><font style="vertical-align: inherit;">协议和可选要求都必须用</font></font><code class="code-voice">@objc</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">属性</font><font style="vertical-align: inherit;">标记</font><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">请注意，</font></font><code class="code-voice">@objc</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">协议只能由继承自Objective-C类或其他</font></font><code class="code-voice">@objc</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">类的类采用。</font><font style="vertical-align: inherit;">它们不能被结构或枚举所采用。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  当您在可选需求中使用方法或属性时，其类型自动成为可选项。</font><font style="vertical-align: inherit;">例如，类型的方法</font></font><code class="code-voice">(Int) -&gt; String</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">变为</font></font><code class="code-voice">((Int) -&gt; String)?</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">请注意，整个函数类型都包含在可选项中，而不是方法的返回值。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  一个可选的协议需求可以通过可选的链接来调用，以说明需求没有被一个符合协议的类型实现的可能性。</font><font style="vertical-align: inherit;">通过在调用方法名称后面写一个问号来检查可选方法的实现，例如</font></font><code class="code-voice">someOptionalMethod?(someArgument)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">有关可选链接的信息，请参阅</font></font><span class="x-name"><a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/OptionalChaining.html#//apple_ref/doc/uid/TP40014097-CH21-ID245" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH21-ID245" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_76&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">可选链接</font></font></a></span><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  以下示例定义了一个称为的整数计数类</font></font><code class="code-voice">Counter</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，它使用外部数据源来提供其增量。</font><font style="vertical-align: inherit;">该数据源由</font></font><code class="code-voice">CounterDataSource</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">协议</font><font style="vertical-align: inherit;">定义，该</font><font style="vertical-align: inherit;">协议有两个可选要求：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">@objc</span> <span class="kt">protocol</span> <span class="vc">CounterDataSource</span> {</code></li>
            <li><code class="code-voice">    <span class="kt">@objc</span> <span class="kt">optional</span> <span class="kt">func</span> <span class="vc">increment</span>(<span class="vc">forCount</span> <span class="vc">count</span>: <span class="n"><!-- a href="" -->Int<!-- /a --></span>) -&gt; <span class="n"><!-- a href="" -->Int<!-- /a --></span></code></li>
            <li><code class="code-voice">    <span class="kt">@objc</span> <span class="kt">optional</span> <span class="kt">var</span> <span class="vc">fixedIncrement</span>: <span class="n"><!-- a href="" -->Int<!-- /a --></span> { <span class="kt">get</span> }</code></li>
            <li><code class="code-voice">}</code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  该</font></font><code class="code-voice">CounterDataSource</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">协议定义了一个可选的方法需求调用</font></font><code class="code-voice">increment(forCount:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">和一个可选的属性需求</font></font><code class="code-voice">fixedIncrement</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">这些要求为数据源定义了两种不同的方式来为</font></font><code class="code-voice">Counter</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">实例</font><font style="vertical-align: inherit;">提供适当的增量</font><font style="vertical-align: inherit;">。
</font></font></p><div class="note">
  <a name="//apple_ref/doc/uid/TP40014097-CH25-NoLink_176"></a>
  <aside class="aside">
    <p class="aside-title"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">注意
    </font></font></p>
    	<p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">严格地说，您可以编写一个自定义的类，以符合</font></font><code class="code-voice">CounterDataSource</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">不需要执行</font></font><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">任何</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">协议要求。</font><font style="vertical-align: inherit;">毕竟，它们都是可选的。</font><font style="vertical-align: inherit;">尽管技术上允许，但这不会构成非常好的数据源。
    	</font></font></p>
    
  </aside>
</div><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  的</font></font><code class="code-voice">Counter</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">类，下面定义，具有可选的</font></font><code class="code-voice">dataSource</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">类型的属性</font></font><code class="code-voice">CounterDataSource?</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">class</span> <span class="vc">Counter</span> {</code></li>
            <li><code class="code-voice">    <span class="kt">var</span> <span class="vc">count</span> = <span class="m">0</span></code></li>
            <li><code class="code-voice">    <span class="kt">var</span> <span class="vc">dataSource</span>: <span class="n"><!-- a href="" -->CounterDataSource<!-- /a --></span>?</code></li>
            <li><code class="code-voice">    <span class="kt">func</span> <span class="vc">increment</span>() {</code></li>
            <li><code class="code-voice">        <span class="kt">if</span> <span class="kt">let</span> <span class="vc">amount</span> = <span class="vc">dataSource</span>?.<span class="vc">increment</span>?(<span class="vc">forCount</span>: <span class="vc">count</span>) {</code></li>
            <li><code class="code-voice">            <span class="vc">count</span> += <span class="vc">amount</span></code></li>
            <li><code class="code-voice">        } <span class="kt">else</span> <span class="kt">if</span> <span class="kt">let</span> <span class="vc">amount</span> = <span class="vc">dataSource</span>?.<span class="vc">fixedIncrement</span> {</code></li>
            <li><code class="code-voice">            <span class="vc">count</span> += <span class="vc">amount</span></code></li>
            <li><code class="code-voice">        }</code></li>
            <li><code class="code-voice">    }</code></li>
            <li><code class="code-voice">}</code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  在</font></font><code class="code-voice">Counter</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">类存储在一个名为变量属性的当前值</font></font><code class="code-voice">count</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">的</font></font><code class="code-voice">Counter</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">类也定义了一个称为方法</font></font><code class="code-voice">increment</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，其中递增</font></font><code class="code-voice">count</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">每次方法调用时属性。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  该</font></font><code class="code-voice">increment()</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">方法首先尝试通过</font></font><code class="code-voice">increment(forCount:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">在其数据源上</font><font style="vertical-align: inherit;">查找该</font><font style="vertical-align: inherit;">方法</font><font style="vertical-align: inherit;">的实现来检索增量量</font><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">该</font></font><code class="code-voice">increment()</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">方法使用可选的链接来尝试调用</font></font><code class="code-voice">increment(forCount:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，并将当前</font></font><code class="code-voice">count</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">值作为方法的单个参数</font><font style="vertical-align: inherit;">传递</font><font style="vertical-align: inherit;">。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  请注意，这里有</font></font><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">两个</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">级别的可选链接。</font><font style="vertical-align: inherit;">首先，这可能是</font></font><code class="code-voice">dataSource</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">可能的</font></font><code class="code-voice">nil</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，因此</font></font><code class="code-voice">dataSource</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">在其名称后面有一个问号，表示</font></font><code class="code-voice">increment(forCount:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">只有在</font></font><code class="code-voice">dataSource</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">没有</font><font style="vertical-align: inherit;">问号</font><font style="vertical-align: inherit;">时才应该调用</font><font style="vertical-align: inherit;">它</font></font><code class="code-voice">nil</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">其次，即使</font></font><code class="code-voice">dataSource</code> <em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">不</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">存在，也不能保证它实现了</font></font><code class="code-voice">increment(forCount:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，因为它是一个可选的要求。</font><font style="vertical-align: inherit;">在这里，</font></font><code class="code-voice">increment(forCount:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">可能没有实现</font><font style="vertical-align: inherit;">的可能性</font><font style="vertical-align: inherit;">也由可选链处理。</font></font><code class="code-voice">increment(forCount:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">只有在</font></font><code class="code-voice">increment(forCount:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">存在的</font><font style="vertical-align: inherit;">情况下才会发生</font><font style="vertical-align: inherit;">呼叫</font><font style="vertical-align: inherit;">- 即，如果不存在</font></font><code class="code-voice">nil</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">这就是为什么</font></font><code class="code-voice">increment(forCount:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">在它的名字后面写上一个问号。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  由于</font></font><code class="code-voice">increment(forCount:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">以上两种原因之一致使</font><font style="vertical-align: inherit;">呼叫</font><font style="vertical-align: inherit;">可能失败，因此呼叫将返回</font></font><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">可选</font></font></em> <code class="code-voice">Int</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">值。</font><font style="vertical-align: inherit;">即使</font></font><code class="code-voice">increment(forCount:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">被定义为</font></font><code class="code-voice">Int</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">在</font><font style="vertical-align: inherit;">定义中返回非选项</font><font style="vertical-align: inherit;">值，情况也是如此</font></font><code class="code-voice">CounterDataSource</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">即使有两个可选的链接操作，一个接一个，结果仍然包装在一个可选的。</font><font style="vertical-align: inherit;">有关使用多个可选链接操作的更多信息，请参阅</font></font><span class="x-name"><a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/OptionalChaining.html#//apple_ref/doc/uid/TP40014097-CH21-ID252" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH21-ID252" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_77&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">链接多个链接级别</font></font></a></span><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  打完电话后</font></font><code class="code-voice">increment(forCount:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，可选的</font></font><code class="code-voice">Int</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，它返回的是解开到一个名为常量</font></font><code class="code-voice">amount</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，使用可选的绑定。</font><font style="vertical-align: inherit;">如果可选</font></font><code class="code-voice">Int</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">包含一个值（即，如果委托和方法都存在，并且方法返回值），则将解包的</font></font><code class="code-voice">amount</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">内容添加到存储的</font></font><code class="code-voice">count</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">属性中，并且增量完成。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  如果</font></font><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">无法</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">从</font></font><code class="code-voice">increment(forCount:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">方法中</font><font style="vertical-align: inherit;">检索值</font><font style="vertical-align: inherit;">（无论是因为</font></font><code class="code-voice">dataSource</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">nil，还是因为数据源未实现），</font></font><code class="code-voice">increment(forCount:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">那么该</font></font><code class="code-voice">increment()</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">方法会尝试从数据源的</font></font><code class="code-voice">fixedIncrement</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">属性中</font><font style="vertical-align: inherit;">检索值</font><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">该</font></font><code class="code-voice">fixedIncrement</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">属性也是一个可选的需求，所以它的值是一个可选</font></font><code class="code-voice">Int</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">值，尽管它</font></font><code class="code-voice">fixedIncrement</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">被定义为非可选</font></font><code class="code-voice">Int</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">属性作为</font></font><code class="code-voice">CounterDataSource</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">协议定义的</font><font style="vertical-align: inherit;">一部分</font><font style="vertical-align: inherit;">。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  这是一个简单的</font></font><code class="code-voice">CounterDataSource</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">实现，数据源在</font></font><code class="code-voice">3</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">每次查询时</font><font style="vertical-align: inherit;">返回一个常量值</font><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">它通过实现可选的</font></font><code class="code-voice">fixedIncrement</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">属性需求</font><font style="vertical-align: inherit;">来实现这一点</font><font style="vertical-align: inherit;">：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">class</span> <span class="vc">ThreeSource</span>: <span class="n"><!-- a href="" -->NSObject<!-- /a --></span>, <span class="n"><!-- a href="" -->CounterDataSource<!-- /a --></span> {</code></li>
            <li><code class="code-voice">    <span class="kt">let</span> <span class="vc">fixedIncrement</span> = <span class="m">3</span></code></li>
            <li><code class="code-voice">}</code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  您可以使用一个实例</font></font><code class="code-voice">ThreeSource</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">作为新</font></font><code class="code-voice">Counter</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">实例</font><font style="vertical-align: inherit;">的数据源</font><font style="vertical-align: inherit;">：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">var</span> <span class="vc">counter</span> = <span class="vc">Counter</span>()</code></li>
            <li><code class="code-voice"><span class="vc">counter</span>.<span class="vc">dataSource</span> = <span class="vc">ThreeSource</span>()</code></li>
            <li><code class="code-voice"><span class="kt">for</span> <span class="kt">_</span> <span class="kt">in</span> <span class="m">1</span>...<span class="m">4</span> {</code></li>
            <li><code class="code-voice">    <span class="vc">counter</span>.<span class="vc">increment</span>()</code></li>
            <li><code class="code-voice">    <span class="vc">print</span>(<span class="vc">counter</span>.<span class="vc">count</span>)</code></li>
            <li><code class="code-voice">}</code></li>
            <li><code class="code-voice"><span class="c">// 3</span></code></li>
            <li><code class="code-voice"><span class="c">// 6</span></code></li>
            <li><code class="code-voice"><span class="c">// 9</span></code></li>
            <li><code class="code-voice"><span class="c">// 12</span></code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  上面的代码创建一个新的</font></font><code class="code-voice">Counter</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">实例; </font><font style="vertical-align: inherit;">将其数据源设置为新</font></font><code class="code-voice">ThreeSource</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">实例; </font><font style="vertical-align: inherit;">并调用计数器的</font></font><code class="code-voice">increment()</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">方法四次。</font><font style="vertical-align: inherit;">正如所料，该柜台的</font></font><code class="code-voice">count</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">财产每次增加三次</font></font><code class="code-voice">increment()</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  这是一个更复杂的数据源</font></font><code class="code-voice">TowardsZeroSource</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，它使</font></font><code class="code-voice">Counter</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">实例从当前</font></font><code class="code-voice">count</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">值</font><font style="vertical-align: inherit;">向上或向下趋近于零</font><font style="vertical-align: inherit;">：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">class</span> <span class="vc">TowardsZeroSource</span>: <span class="n"><!-- a href="" -->NSObject<!-- /a --></span>, <span class="n"><!-- a href="" -->CounterDataSource<!-- /a --></span> {</code></li>
            <li><code class="code-voice">    <span class="kt">func</span> <span class="vc">increment</span>(<span class="vc">forCount</span> <span class="vc">count</span>: <span class="n"><!-- a href="" -->Int<!-- /a --></span>) -&gt; <span class="n"><!-- a href="" -->Int<!-- /a --></span> {</code></li>
            <li><code class="code-voice">        <span class="kt">if</span> <span class="vc">count</span> == <span class="m">0</span> {</code></li>
            <li><code class="code-voice">            <span class="kt">return</span> <span class="m">0</span></code></li>
            <li><code class="code-voice">        } <span class="kt">else</span> <span class="kt">if</span> <span class="vc">count</span> &lt; <span class="m">0</span> {</code></li>
            <li><code class="code-voice">            <span class="kt">return</span> <span class="m">1</span></code></li>
            <li><code class="code-voice">        } <span class="kt">else</span> {</code></li>
            <li><code class="code-voice">            <span class="kt">return</span> <span class="m">-1</span></code></li>
            <li><code class="code-voice">        }</code></li>
            <li><code class="code-voice">    }</code></li>
            <li><code class="code-voice">}</code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  的</font></font><code class="code-voice">TowardsZeroSource</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">类实现可选的</font></font><code class="code-voice">increment(forCount:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">从方法</font></font><code class="code-voice">CounterDataSource</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">协议并使用该</font></font><code class="code-voice">count</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">参数值，以计算出在计数的方向。如果</font></font><code class="code-voice">count</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">已经是零，则该方法返回</font></font><code class="code-voice">0</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">到表示没有进一步的计数应该发生。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  您可以使用</font></font><code class="code-voice">TowardsZeroSource</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">现有</font></font><code class="code-voice">Counter</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">实例的实例从</font></font><code class="code-voice">-4</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">0 </font><font style="vertical-align: inherit;">开始计数</font><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">一旦计数器达到零，不再进行计数：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="vc">counter</span>.<span class="vc">count</span> = <span class="m">-4</span></code></li>
            <li><code class="code-voice"><span class="vc">counter</span>.<span class="vc">dataSource</span> = <span class="vc">TowardsZeroSource</span>()</code></li>
            <li><code class="code-voice"><span class="kt">for</span> <span class="kt">_</span> <span class="kt">in</span> <span class="m">1</span>...<span class="m">5</span> {</code></li>
            <li><code class="code-voice">    <span class="vc">counter</span>.<span class="vc">increment</span>()</code></li>
            <li><code class="code-voice">    <span class="vc">print</span>(<span class="vc">counter</span>.<span class="vc">count</span>)</code></li>
            <li><code class="code-voice">}</code></li>
            <li><code class="code-voice"><span class="c">// -3</span></code></li>
            <li><code class="code-voice"><span class="c">// -2</span></code></li>
            <li><code class="code-voice"><span class="c">// -1</span></code></li>
            <li><code class="code-voice"><span class="c">// 0</span></code></li>
            <li><code class="code-voice"><span class="c">// 0</span></code></li>
        </ol>
      </div>
  </div>
</section>
  
</section>
<section class="section">
  <a name="//apple_ref/doc/uid/TP40014097-CH25-ID521"></a>
  <h3 class="section-name" tabindex="0"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">协议扩展</font></font></h3>
  <p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  可以扩展协议以向符合类型提供方法，初始化程序，下标和计算属性实现。</font><font style="vertical-align: inherit;">这允许您定义协议本身的行为，而不是每个类型的单独一致性或全局函数。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  例如，</font></font><code class="code-voice">RandomNumberGenerator</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">协议可以扩展为提供一种</font></font><code class="code-voice">randomBool()</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">方法，该方法使用所需</font></font><code class="code-voice">random()</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">方法</font><font style="vertical-align: inherit;">的结果</font><font style="vertical-align: inherit;">返回一个随机</font></font><code class="code-voice">Bool</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">值：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">extension</span> <span class="n"><!-- a href="" -->RandomNumberGenerator<!-- /a --></span> {</code></li>
            <li><code class="code-voice">    <span class="kt">func</span> <span class="vc">randomBool</span>() -&gt; <span class="n"><!-- a href="" -->Bool<!-- /a --></span> {</code></li>
            <li><code class="code-voice">        <span class="kt">return</span> <span class="vc">random</span>() &gt; <span class="m">0.5</span></code></li>
            <li><code class="code-voice">    }</code></li>
            <li><code class="code-voice">}</code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  通过在协议上创建扩展，所有符合类型自动获得此方法实现，无需任何额外的修改。
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">let</span> <span class="vc">generator</span> = <span class="vc">LinearCongruentialGenerator</span>()</code></li>
            <li><code class="code-voice"><span class="vc">print</span>(<span class="s">"Here's a random number: </span>\(<span class="vc">generator</span>.<span class="vc">random</span>())<span class="s">"</span>)</code></li>
            <li><code class="code-voice"><span class="c">// Prints "Here's a random number: 0.37464991998171"</span></code></li>
            <li><code class="code-voice"><span class="vc">print</span>(<span class="s">"And here's a random Boolean: </span>\(<span class="vc">generator</span>.<span class="vc">randomBool</span>())<span class="s">"</span>)</code></li>
            <li><code class="code-voice"><span class="c">// Prints "And here's a random Boolean: true"</span></code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  协议扩展可以将实现添加到符合类型，但不能使协议扩展或从另一个协议继承。</font><font style="vertical-align: inherit;">协议继承总是在协议声明本身中指定的。
</font></font></p>
  <section class="section">
  <a name="//apple_ref/doc/uid/TP40014097-CH25-ID529"></a>
  <h3 class="section-name" tabindex="0"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">提供默认实现</font></font></h3>
  <p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  您可以使用协议扩展来为该协议的任何方法或计算属性要求提供默认实现。</font><font style="vertical-align: inherit;">如果一致性类型提供了自己的必需方法或属性的实现，则将使用该实现来代替扩展提供的实现。
</font></font></p><div class="note">
  <a name="//apple_ref/doc/uid/TP40014097-CH25-NoLink_177"></a>
  <aside class="aside">
    <p class="aside-title"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">注意
    </font></font></p>
    	<p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">通过扩展提供的默认实现的协议要求与可选的协议要求不同。</font><font style="vertical-align: inherit;">尽管符合类型不必提供它们自己的实现，但可以在没有可选链接的情况下调用具有默认实现的需求。
    	</font></font></p>
    
  </aside>
</div><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  例如，</font></font><code class="code-voice">PrettyTextRepresentable</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">继承</font></font><code class="code-voice">TextRepresentable</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">协议的协议可以提供其必需</font></font><code class="code-voice">prettyTextualDescription</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">属性</font><font style="vertical-align: inherit;">的默认实现，</font><font style="vertical-align: inherit;">以简单地返回访问该</font></font><code class="code-voice">textualDescription</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">属性</font><font style="vertical-align: inherit;">的结果</font><font style="vertical-align: inherit;">：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">extension</span> <span class="n"><!-- a href="" -->PrettyTextRepresentable<!-- /a --></span>  {</code></li>
            <li><code class="code-voice">    <span class="kt">var</span> <span class="vc">prettyTextualDescription</span>: <span class="n"><!-- a href="" -->String<!-- /a --></span> {</code></li>
            <li><code class="code-voice">        <span class="kt">return</span> <span class="vc">textualDescription</span></code></li>
            <li><code class="code-voice">    }</code></li>
            <li><code class="code-voice">}</code></li>
        </ol>
      </div>
  </div>
</section>
  
</section>
<section class="section">
  <a name="//apple_ref/doc/uid/TP40014097-CH25-ID527"></a>
  <h3 class="section-name" tabindex="0"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">将约束添加到协议扩展</font></font></h3>
  <p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  定义协议扩展时，可以指定符合类型在扩展的方法和属性可用之前必须满足的约束。</font><font style="vertical-align: inherit;">您可以使用泛型</font></font><code class="code-voice">where</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">子句</font><font style="vertical-align: inherit;">在您要扩展的协议名称之后编写这些约束</font><font style="vertical-align: inherit;">，如</font></font><span class="x-name"><a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Generics.html#//apple_ref/doc/uid/TP40014097-CH26-ID192" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH26-ID192" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_78&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">泛型Where子句中所述</font></font></a></span><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  例如，您可以定义</font></font><code class="code-voice">Collection</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">适用于元素符合</font></font><code class="code-voice">Equatable</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">协议的</font><font style="vertical-align: inherit;">任何集合</font><font style="vertical-align: inherit;">的</font><font style="vertical-align: inherit;">协议</font><font style="vertical-align: inherit;">的扩展</font><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">通过将集合的元素约束到</font></font><code class="code-voice">Equatable</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">协议（标准库的一部分），可以使用</font></font><code class="code-voice">==</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">和</font></font><code class="code-voice">!=</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">运算符来检查两个元素之间的等式和不等式。
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">extension</span> <span class="n"><!-- a href="" -->Collection<!-- /a --></span> <span class="kt">where</span> <span class="vc">Element</span>: <span class="vc">Equatable</span> {</code></li>
            <li><code class="code-voice">    <span class="kt">func</span> <span class="vc">allEqual</span>() -&gt; <span class="n"><!-- a href="" -->Bool<!-- /a --></span> {</code></li>
            <li><code class="code-voice">        <span class="kt">for</span> <span class="vc">element</span> <span class="kt">in</span> <span class="kt">self</span> {</code></li>
            <li><code class="code-voice">            <span class="kt">if</span> <span class="vc">element</span> != <span class="kt">self</span>.<span class="vc">first</span> {</code></li>
            <li><code class="code-voice">                <span class="kt">return</span> <span class="kt">false</span></code></li>
            <li><code class="code-voice">            }</code></li>
            <li><code class="code-voice">        }</code></li>
            <li><code class="code-voice">        <span class="kt">return</span> <span class="kt">true</span></code></li>
            <li><code class="code-voice">    }</code></li>
            <li><code class="code-voice">}</code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  该</font></font><code class="code-voice">allEqual()</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">方法</font></font><code class="code-voice">true</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">仅在集合中的所有元素相等时才</font><font style="vertical-align: inherit;">返回</font><font style="vertical-align: inherit;">。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  考虑两个整数数组，一个是所有元素都相同，另一个不是：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">let</span> <span class="vc">equalNumbers</span> = [<span class="m">100</span>, <span class="m">100</span>, <span class="m">100</span>, <span class="m">100</span>, <span class="m">100</span>]</code></li>
            <li><code class="code-voice"><span class="kt">let</span> <span class="vc">differentNumbers</span> = [<span class="m">100</span>, <span class="m">100</span>, <span class="m">200</span>, <span class="m">100</span>, <span class="m">200</span>]</code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  因为数组符合</font></font><code class="code-voice">Collection</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">和整数符合</font></font><code class="code-voice">Equatable</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，</font></font><code class="code-voice">equalNumbers</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">并且</font></font><code class="code-voice">differentNumbers</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">可以使用该</font></font><code class="code-voice">allEqual()</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">方法：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="vc">print</span>(<span class="vc">equalNumbers</span>.<span class="vc">allEqual</span>())</code></li>
            <li><code class="code-voice"><span class="c">// Prints "true"</span></code></li>
            <li><code class="code-voice"><span class="vc">print</span>(<span class="vc">differentNumbers</span>.<span class="vc">allEqual</span>())</code></li>
            <li><code class="code-voice"><span class="c">// Prints "false"</span></code></li>
        </ol>
      </div>
  </div>
</section><div class="note">
  <a name="//apple_ref/doc/uid/TP40014097-CH25-NoLink_178"></a>
  <aside class="aside">
    <p class="aside-title"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">注意
    </font></font></p>
    	<p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">如果符合类型满足多个约束扩展的要求，这些扩展为相同的方法或属性提供实现，则Swift使用与最专用约束相对应的实现。
    	</font></font></p>
    
  </aside>
</div>
  
</section>

</section>

  	
 	<section id="next_previous" class="">
    		<p class="previous-link"><a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Extensions.html#//apple_ref/doc/uid/TP40014097-CH24-ID151" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH24-ID151" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_79&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">扩展</font></font></a></p>
  			<p class="next-link"><a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Generics.html#//apple_ref/doc/uid/TP40014097-CH26-ID179" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH26-ID179" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_80&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">泛型</font></font></a></p>

    <p class="copyright"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Copyright©2018 Apple Inc.保留所有权利。 
  </font></font><a class="link" href="http://www.apple.com/legal/terms/site.html" target="_blank" rel="external" onclick="s_objectID=&quot;http://www.apple.com/legal/terms/site.html_1&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">使用条款</font></font></a><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> | 
  </font></font><a class="link" href="http://www.apple.com/privacy/" target="_blank" rel="external" onclick="s_objectID=&quot;http://www.apple.com/privacy/_1&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">隐私政策</font></font></a><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> | </font><font style="vertical-align: inherit;">更新日期：2018-02-20
</font></font></p>
  </section>
</article>

    </div>
    <div id="big_button"></div>
    <footer id="footer">
  <div class="content-wrapper">
  	<div id="leave_feedback" class="button" role="button" tabindex="0"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">反馈</font></font></div>
  </div>
  <script src="./The Swift Programming Language (Swift 4.1)_协议_files/devpubs-1.6.3.js" type="text/javascript" charset="utf-8"></script>
  <script src="./The Swift Programming Language (Swift 4.1)_协议_files/feedback-1.6.3.js" type="text/javascript" charset="utf-8"></script>
  <div id="_omniture_top">
<!-- SiteCatalyst code version: H.8. Copyright 1997-2006 Omniture, Inc. -->
<script type="text/javascript">
/* RSID: */
var s_account="appleglobal,appleusdeveloper,dappdeveloperlib"
</script>

<script type="text/javascript" src="./The Swift Programming Language (Swift 4.1)_协议_files/s_code_h.js"></script>
<script type="text/javascript">
s.pageName=AC.Tracking.pageName();
s.channel="www.us.developer"

/************* DO NOT ALTER ANYTHING BELOW THIS LINE ! **************/
var s_code=s.t();if(s_code)document.write(s_code)</script>
<!-- End SiteCatalyst code version: H.8. -->
</div>

</footer>

    
  
    <div id="blackout">
    <div id="preload"></div>
</div>
<div id="modal" aria-hidden="true">
    <div id="closebox" tabindex="0" aria-label="Close feedback form" role="button"></div>
    <div id="sending" class="hidden">
        <h2 tabindex="0">Sending feedback…</h2>
        <div id="sending_img"></div>
    </div>
    <div id="error" class="hidden">
        <h2 tabindex="0">We’re sorry, an error has occurred.</h2>
        <p>Please try submitting your feedback later.</p>
        <div id="error_icon"></div>
    </div>
    <div id="success" class="hidden">
        <h2 tabindex="0">Thank you for providing feedback!</h2>
        <p>Your input helps improve our developer documentation.</p>
        <div id="thank_you_icon"></div>
    </div>
    
    <form id="feedback" action="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Protocols.html#" method="post">
        <div class="left-leaf">
            <h2 id="helpful_title" data-asterisk="a1" tabindex="0"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">这份文件有多大帮助？</font></font></h2>     
            <sup id="a1" class="asterisk" aria-hidden="true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">*</font></font></sup>

            <div id="star_group" role="radiogroup" aria-required="true">
                <label> 
                    <input class="radio" type="radio" name="helped" value="1"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> 
                    很有帮助
                </font></font></label>
                <label> 
                    <input class="radio" type="radio" name="helped" value="2"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> 
                    有点帮助
                </font></font></label>
                <label>
                    <input class="radio" type="radio" name="helped" value="3"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> 
                    没有帮助
                </font></font></label>
            </div>
        </div>
        <div class="right-leaf">
            <h2><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">我们如何改进这个文件？</font></font></h2>
            <div id="improve" class="checkboxes">
                <label>
                    <input type="checkbox" name="typo"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> 
                    修正错别字或链接
                </font></font></label>
                <label>
                    <input type="checkbox" name="infoIncorrect"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> 
                    修正错误的信息
                </font></font></label>
                <label>
                    <input type="checkbox" name="needs_examples"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> 
                    添加或更新代码示例
                </font></font></label>
                <label>
                    <input type="checkbox" name="needs_art"> 
                    Add or update illustrations
                </label>
                <label>
                    <input type="checkbox" name="missingInfo"> 
                    Add information about...
                </label>
            </div>
        </div>

        <textarea id="comment" name="problem" cols="70" rows="8" placeholder="Please tell us more about your experience with this document" data-asterisk="a2" required=""></textarea>
        <sup id="a2" class="asterisk" aria-hidden="true">*</sup>

        <p class="fineprint">
            <em aria-hidden="true"><span>*</span> Required information</em>
        </p> 

        <input id="submit" type="button" value="Send">

        <section id="legal">
            <p>
                To submit a product bug or enhancement request, please visit the 
                <a href="https://developer.apple.com/bugreporter/" target="_blank" onclick="s_objectID=&quot;https://developer.apple.com/bugreporter/_1&quot;;return this.s_oc?this.s_oc(e):true">Bug Reporter</a> 
                page.
            </p>
            <p>
                Please read <a href="http://www.apple.com/legal/policies/ideas.html" target="_blank" onclick="s_objectID=&quot;http://www.apple.com/legal/policies/ideas.html_1&quot;;return this.s_oc?this.s_oc(e):true">Apple's Unsolicited Idea Submission Policy</a> 
                before you send us your feedback.
            </p> 
        </section>
    </form>
</div><div id="goog-gt-tt" class="skiptranslate" dir="ltr"><div style="padding: 8px;"><div><div class="logo"><img src="./The Swift Programming Language (Swift 4.1)_协议_files/translate_24dp.png" width="20" height="20" alt="Google 翻译"></div></div></div><div class="top" style="padding: 8px; float: left; width: 100%;"><h1 class="title gray">原文</h1></div><div class="middle" style="padding: 8px;"><div class="original-text"></div></div><div class="bottom" style="padding: 8px;"><div class="activity-links"><span class="activity-link">提供更好的翻译建议</span><span class="activity-link"></span></div><div class="started-activity-container"><hr style="color: #CCC; background-color: #CCC; height: 1px; border: none;"><div class="activity-root"></div></div></div><div class="status-message" style="display: none;"></div></div>



<div class="goog-te-spinner-pos"><div class="goog-te-spinner-animation"><svg xmlns="http://www.w3.org/2000/svg" class="goog-te-spinner" width="96px" height="96px" viewBox="0 0 66 66"><circle class="goog-te-spinner-path" fill="none" stroke-width="6" stroke-linecap="round" cx="33" cy="33" r="30"></circle></svg></div></div></body></html>