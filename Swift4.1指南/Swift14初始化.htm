<!DOCTYPE html>
<!-- saved from url=(0163)https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Initialization.html#//apple_ref/doc/uid/TP40014097-CH18-ID203 -->
<html lang="en" class="translated-ltr"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">  
  <title>Swift编程语言（Swift 4.1）：初始化</title>
  <link rel="stylesheet" type="text/css" href="./Swift编程语言（Swift 4.1）：初始化_files/style-1.6.3.css">
  <link rel="stylesheet" type="text/css" href="./Swift编程语言（Swift 4.1）：初始化_files/feedback-1.6.3.css">
   
<meta id="j-version" name="j-version" content="">
<meta id="build" name="build" content="2cff7ac52859143a0b42c92c22d84718">
<meta id="document-version" name="document-version" content="10.3.3">
<meta id="book-assignments" name="book-assignments" content="{Type/Guide}, {Topic/Swift}">
<meta scheme="apple_ref" id="identifier" name="identifier" content="//apple_ref/doc/uid/TP40014097">
<meta id="chapterId" name="chapterId" content="TP40014097-CH18">
<meta id="book-title" name="book-title" content="The Swift Programming Language (Swift 4.1)">
<meta id="book-resource-type" name="book-resource-type" content="Guide">
<meta id="book-root" name="book-root" content="./">
<meta id="book-json" name="book-json" content="book.json">
<meta id="date" name="date" content="2018-02-20">
<meta id="description" name="description" content="The definitive guide to Swift, Apple’s programming language for building iOS, macOS, watchOS, and tvOS apps.">
<meta id="IndexTitle" name="IndexTitle" content="">
<meta id="resources-uri" name="resources-uri" content="../../../../Resources/1277">
<link id="book-index-page" rel="Start" title="" type="text/html" href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/index.html">
<!-- , next_chapter: next_chapter, previous_chapter: previous_chapter -->
<link id="next-page" rel="Next" type="text/html" href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Initialization.html">
<link id="previous-page" rel="Prev" type="text/html" href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Initialization.html">
<meta id="devcenter" name="devcenter" content="&lt;!-- DEVCENTER_NAME --&gt;">
<meta id="devcenter-url" name="devcenter-url" content="&lt;!-- DEVCENTER_URL --&gt;">
<meta id="reflib" name="reflib" content="&lt;!-- REFLIB_NAME --&gt;">

<meta id="xcode-display" name="xcode-display" content="render">
<meta name="apple-mobile-web-app-capable" content="yes">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0">
<meta id="platforms" name="platforms" content="Xcode Developer Tools">
<link type="text/css" rel="stylesheet" charset="UTF-8" href="./Swift编程语言（Swift 4.1）：初始化_files/translateelement.css"></head>

  <body id="conceptual_flow_with_tasks" class="jazz">
    
    <header id="ios_header" class="hideOnPrint hideInXcode">
  <div class="content-wrapper">
    <p class="header-text">
    	<a href="https://developer.apple.com/library/content/navigation/" onclick="s_objectID=&quot;https://developer.apple.com/library/content/navigation/_1&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">指南和示例代码
 		</font></font></a>
 </p>
    <p id="wwdr"><img id="apple_logo" src="./Swift编程语言（Swift 4.1）：初始化_files/apple2.png" height="14px" width="12px" aria-hidden="true"><a href="https://developer.apple.com/" onclick="s_objectID=&quot;https://developer.apple.com/_1&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">开发人员</font></font></a></p>
  </div>
</header>

    <section id="valence">
  <div class="content-wrapper">
    <p id="hierarchial_navigation">
      <span id="book_title"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Swift编程语言（Swift 4.1）</font></font></span>
    </p>
    <form id="search" class="hideInXcode" method="get" action="https://developer.apple.com/search/index.php" accept-charset="utf-8" autocomplete="off">
  <input type="search" id="ssi_SearchField" placeholder="Search Guides and Sample Code" name="q" autocomplete="off" tabindex="2">
</form>

      
   
   




    <span class="download-text hideInXcode">
      <a href="https://itunes.apple.com/us/book/the-swift-programming-language/id1002622538?mt=11" onclick="s_objectID=&quot;https://itunes.apple.com/us/book/the-swift-programming-language/id1002622538?mt=11_1&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">的iBooks</font></font></a>
    </span>

    

    <img id="shortstack" src="./Swift编程语言（Swift 4.1）：初始化_files/shortstack_2x.png">
  </div>
</section>
    <div class="content-wrapper">
      <nav id="navigator" class="book-parts hideInXcode" role="navigation">
    <ul class="nav-parts">
        <li data-id="//apple_ref/doc/uid/TP40014097-CH1-ID2" class="part-name">
            <a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/index.html#//apple_ref/doc/uid/TP40014097-CH3-ID0" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH3-ID0" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_1&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">欢迎来到Swift</font></font></a>
          <ul class="nav-chapters">
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/index.html#//apple_ref/doc/uid/TP40014097-CH3-ID0" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH3-ID0" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_2&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">关于Swift</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Compatibility.html#//apple_ref/doc/uid/TP40014097-CH45-ID561" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH45-ID561" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_3&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">版本兼容性</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/GuidedTour.html#//apple_ref/doc/uid/TP40014097-CH2-ID1" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH2-ID1" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_4&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">快速游览</font></font></a>
              </li>
          </ul>
        </li>
        <li data-id="//apple_ref/doc/uid/TP40014097-CH4-ID233" class="part-name nav-part-active open-part">
            <a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/TheBasics.html#//apple_ref/doc/uid/TP40014097-CH5-ID309" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH5-ID309" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_5&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">语言指南</font></font></a>
          <ul class="nav-chapters">
              <li class="nav-chapter">
              	<a href="" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH5-ID309" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_6&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">基础</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/BasicOperators.html#//apple_ref/doc/uid/TP40014097-CH6-ID60" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH6-ID60" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_7&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">基本操作员</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="Swift编程语言（Swift 4.1）：字符串和字符.htm#//apple_ref/doc/uid/TP40014097-CH7" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH7-ID285" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_8&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">字符串和字符</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/CollectionTypes.html#//apple_ref/doc/uid/TP40014097-CH8-ID105" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH8-ID105" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_9&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">集合类型</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/ControlFlow.html#//apple_ref/doc/uid/TP40014097-CH9-ID120" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH9-ID120" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_10&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">控制流</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Functions.html#//apple_ref/doc/uid/TP40014097-CH10-ID158" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH10-ID158" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_11&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">功能</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Closures.html#//apple_ref/doc/uid/TP40014097-CH11-ID94" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH11-ID94" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_12&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">关闭</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Enumerations.html#//apple_ref/doc/uid/TP40014097-CH12-ID145" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH12-ID145" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_13&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">枚举</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/ClassesAndStructures.html#//apple_ref/doc/uid/TP40014097-CH13-ID82" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH13-ID82" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_14&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">类和结构</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Properties.html#//apple_ref/doc/uid/TP40014097-CH14-ID254" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH14-ID254" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_15&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">属性</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Methods.html#//apple_ref/doc/uid/TP40014097-CH15-ID234" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH15-ID234" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_16&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">方法</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Subscripts.html#//apple_ref/doc/uid/TP40014097-CH16-ID305" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH16-ID305" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_17&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">标</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Inheritance.html#//apple_ref/doc/uid/TP40014097-CH17-ID193" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH17-ID193" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_18&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">遗产</font></font></a>
              </li>
              <li class="nav-chapter nav-current-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Initialization.html#//apple_ref/doc/uid/TP40014097-CH18-ID203" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH18-ID203" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_19&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">初始化</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Deinitialization.html#//apple_ref/doc/uid/TP40014097-CH19-ID142" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH19-ID142" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_20&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">反初始化</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/OptionalChaining.html#//apple_ref/doc/uid/TP40014097-CH21-ID245" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH21-ID245" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_21&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">可选链接</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/ErrorHandling.html#//apple_ref/doc/uid/TP40014097-CH42-ID508" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH42-ID508" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_22&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">错误处理</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/TypeCasting.html#//apple_ref/doc/uid/TP40014097-CH22-ID338" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH22-ID338" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_23&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">类型铸造</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/NestedTypes.html#//apple_ref/doc/uid/TP40014097-CH23-ID242" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH23-ID242" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_24&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">嵌套类型</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Extensions.html#//apple_ref/doc/uid/TP40014097-CH24-ID151" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH24-ID151" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_25&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">扩展</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Protocols.html#//apple_ref/doc/uid/TP40014097-CH25-ID267" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH25-ID267" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_26&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">协议</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Generics.html#//apple_ref/doc/uid/TP40014097-CH26-ID179" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH26-ID179" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_27&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">泛型</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/AutomaticReferenceCounting.html#//apple_ref/doc/uid/TP40014097-CH20-ID48" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH20-ID48" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_28&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">自动引用计数</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/MemorySafety.html#//apple_ref/doc/uid/TP40014097-CH46-ID567" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH46-ID567" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_29&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">内存安全</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/AccessControl.html#//apple_ref/doc/uid/TP40014097-CH41-ID3" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH41-ID3" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_30&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">访问控制</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/AdvancedOperators.html#//apple_ref/doc/uid/TP40014097-CH27-ID28" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH27-ID28" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_31&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">高级操作员</font></font></a>
              </li>
          </ul>
        </li>
        <li data-id="//apple_ref/doc/uid/TP40014097-CH28-ID427" class="part-name">
            <a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/AboutTheLanguageReference.html#//apple_ref/doc/uid/TP40014097-CH29-ID345" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH29-ID345" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_32&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">语言参考</font></font></a>
          <ul class="nav-chapters">
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/AboutTheLanguageReference.html#//apple_ref/doc/uid/TP40014097-CH29-ID345" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH29-ID345" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_33&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">关于语言参考</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/LexicalStructure.html#//apple_ref/doc/uid/TP40014097-CH30-ID410" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH30-ID410" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_34&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">词汇结构</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Types.html#//apple_ref/doc/uid/TP40014097-CH31-ID445" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH31-ID445" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_35&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">类型</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Expressions.html#//apple_ref/doc/uid/TP40014097-CH32-ID383" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH32-ID383" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_36&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">表达式</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Statements.html#//apple_ref/doc/uid/TP40014097-CH33-ID428" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH33-ID428" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_37&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">声明</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Declarations.html#//apple_ref/doc/uid/TP40014097-CH34-ID351" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH34-ID351" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_38&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">声明</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Attributes.html#//apple_ref/doc/uid/TP40014097-CH35-ID347" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH35-ID347" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_39&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">属性</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Patterns.html#//apple_ref/doc/uid/TP40014097-CH36-ID419" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH36-ID419" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_40&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">模式</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/GenericParametersAndArguments.html#//apple_ref/doc/uid/TP40014097-CH37-ID406" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH37-ID406" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_41&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">通用参数和参数</font></font></a>
              </li>
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/zzSummaryOfTheGrammar.html#//apple_ref/doc/uid/TP40014097-CH38-ID458" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH38-ID458" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_42&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">语法概要</font></font></a>
              </li>
          </ul>
        </li>
        <li data-id="//apple_ref/doc/uid/TP40014097-CH39-ID460" class="part-name">
            <a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/RevisionHistory.html#//apple_ref/doc/uid/TP40014097-CH40-ID459" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH40-ID459" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_43&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">修订记录</font></font></a>
          <ul class="nav-chapters">
              <li class="nav-chapter">
              	<a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/RevisionHistory.html#//apple_ref/doc/uid/TP40014097-CH40-ID459" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH40-ID459" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_44&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">文档修订历史</font></font></a>
              </li>
          </ul>
        </li>
    </ul>
</nav>

      <menu id="bashful" type="toolbar">
  <div class="shield"></div>
  <menuitem id="jump_to" class="menu-bar-item closed">
  <span><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">在本页</font></font></span>
  <div class="chevron">
    <div class="chevy chevron-left"></div>
    <div class="chevy chevron-right"></div>
  </div>
  <menu type="list" class="details">
      <ul class="list-bullet">
          <li class="item">
            <a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Initialization.html#//apple_ref/doc/uid/TP40014097-CH18-ID204" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_45&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">为存储属性设置初始值</font></font></a>
          </li>
          <li class="item">
            <a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Initialization.html#//apple_ref/doc/uid/TP40014097-CH18-ID207" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_46&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">自定义初始化</font></font></a>
          </li>
          <li class="item">
            <a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Initialization.html#//apple_ref/doc/uid/TP40014097-CH18-ID213" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_47&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">默认初始化程序</font></font></a>
          </li>
          <li class="item">
            <a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Initialization.html#//apple_ref/doc/uid/TP40014097-CH18-ID215" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_48&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">值类型的初始化程序委托</font></font></a>
          </li>
          <li class="item">
            <a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Initialization.html#//apple_ref/doc/uid/TP40014097-CH18-ID216" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_49&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">类继承和初始化</font></font></a>
          </li>
          <li class="item">
            <a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Initialization.html#//apple_ref/doc/uid/TP40014097-CH18-ID224" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_50&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Failable初始化器</font></font></a>
          </li>
          <li class="item">
            <a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Initialization.html#//apple_ref/doc/uid/TP40014097-CH18-ID231" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_51&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">必需的初始化器</font></font></a>
          </li>
          <li class="item">
            <a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Initialization.html#//apple_ref/doc/uid/TP40014097-CH18-ID232" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_52&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">使用闭包或函数设置默认属性值</font></font></a>
          </li>
      </ul>
  </menu>
</menuitem>

</menu>
<div class="pixel-line"></div>
<div class="rubber-band-gap"></div>
<article class="chapter">
  <a name="//apple_ref/doc/uid/TP40014097-CH18"></a><a name="//apple_ref/doc/uid/TP40014097-CH18-ID203"></a>

  <h2 class="chapter-name"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">初始化</font></font></h2>


  
  	<section class="section">
  		<p class="para">
  <em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">初始化</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">是准备要使用的类，结构或枚举的实例的过程。</font><font style="vertical-align: inherit;">该过程包括为该实例上的每个存储属性设置一个初始值，并在新实例准备好使用之前执行所需的任何其他设置或初始化。
</font></font></p>
<p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  您可以通过定义实现这个初始化过程</font></font><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">初始化</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，这就像特殊的方法，可以被调用来创建特定类型的新实例。</font><font style="vertical-align: inherit;">与Objective-C初始化器不同，Swift初始化器不返回值。</font><font style="vertical-align: inherit;">它们的主要作用是确保类型的新实例在第一次使用前正确初始化。
</font></font></p>
<p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  类类型的实例也可以实现一个</font></font><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">deinitializer</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，它在该类的实例被释放之前执行任何自定义清理。</font><font style="vertical-align: inherit;">有关</font></font><span class="x-name"><a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Deinitialization.html#//apple_ref/doc/uid/TP40014097-CH19-ID142" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH19-ID142" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_53&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">取消初始化程序的</font></font></a></span><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">更多信息，请参阅</font><span class="x-name"><a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Deinitialization.html#//apple_ref/doc/uid/TP40014097-CH19-ID142" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH19-ID142" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_54&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;">取消初始化</font></a></span><font style="vertical-align: inherit;">。
</font></font></p>

		</section> 


  <section class="section">
  <a name="//apple_ref/doc/uid/TP40014097-CH18-ID204"></a>
  <h3 class="section-name" tabindex="0"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">为存储属性设置初始值</font></font></h3>
  <p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">在创建该类或结构的实例时，</font><font style="vertical-align: inherit;">
  类和结构</font></font><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">必须</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">将其存储的所有属性设置为适当的初始值。</font><font style="vertical-align: inherit;">存储的属性不能处于不确定状态。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  您可以在初始化程序中为存储的属性设置初始值，或者通过将默认属性值指定为属性定义的一部分。</font><font style="vertical-align: inherit;">这些操作在以下各节中进行介绍。
</font></font></p><div class="note">
  <a name="//apple_ref/doc/uid/TP40014097-CH18-NoLink_129"></a>
  <aside class="aside">
    <p class="aside-title"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">注意
    </font></font></p>
    	<p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">当您将默认值分配给存储属性或在初始化程序中设置其初始值时，该属性的值将直接设置，而不调用任何属性观察器。
    	</font></font></p>
    
  </aside>
</div>
  <section class="section">
  <a name="//apple_ref/doc/uid/TP40014097-CH18-ID205"></a>
  <h3 class="section-name" tabindex="0"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">初始化器</font></font></h3>
  <p class="para">
  <em><font style="vertical-align: inherit;"></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">调用</font><em><font style="vertical-align: inherit;">初始化</font></em><font style="vertical-align: inherit;">器来创建特定类型的新实例。</font><font style="vertical-align: inherit;">以最简单的形式，初始化器就像不带参数的实例方法，使用</font></font><code class="code-voice">init</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">关键字</font><font style="vertical-align: inherit;">编写</font><font style="vertical-align: inherit;">：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">init</span>() {</code></li>
            <li><code class="code-voice">    <span class="c">// perform some initialization here</span></code></li>
            <li><code class="code-voice">}</code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  下面的例子定义了一个叫做</font></font><code class="code-voice">Fahrenheit</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">存储以华氏温标表示的温度</font><font style="vertical-align: inherit;">的新结构</font><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">该</font></font><code class="code-voice">Fahrenheit</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">结构有一个存储的属性</font></font><code class="code-voice">temperature</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，它的类型为</font></font><code class="code-voice">Double</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">struct</span> <span class="vc">Fahrenheit</span> {</code></li>
            <li><code class="code-voice">    <span class="kt">var</span> <span class="vc">temperature</span>: <span class="n"><!-- a href="" -->Double<!-- /a --></span></code></li>
            <li><code class="code-voice">    <span class="kt">init</span>() {</code></li>
            <li><code class="code-voice">        <span class="vc">temperature</span> = <span class="m">32.0</span></code></li>
            <li><code class="code-voice">    }</code></li>
            <li><code class="code-voice">}</code></li>
            <li><code class="code-voice"><span class="kt">var</span> <span class="vc">f</span> = <span class="vc">Fahrenheit</span>()</code></li>
            <li><code class="code-voice"><span class="vc">print</span>(<span class="s">"The default temperature is </span>\(<span class="vc">f</span>.<span class="vc">temperature</span>)<span class="s">° Fahrenheit"</span>)</code></li>
            <li><code class="code-voice"><span class="c">// Prints "The default temperature is 32.0° Fahrenheit"</span></code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  该结构定义了一个单独的初始化器，</font></font><code class="code-voice">init</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">没有参数，它用一个数值</font></font><code class="code-voice">32.0</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">（华氏度的水凝固点）</font><font style="vertical-align: inherit;">初始化储存的温度</font><font style="vertical-align: inherit;">。
</font></font></p>
  
</section>
<section class="section">
  <a name="//apple_ref/doc/uid/TP40014097-CH18-ID206"></a>
  <h3 class="section-name" tabindex="0"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">默认属性值</font></font></h3>
  <p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  您可以在初始化程序中设置存储属性的初始值，如上所示。</font><font style="vertical-align: inherit;">或者，指定</font></font><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">默认属性值</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">作为属性声明的一部分。</font><font style="vertical-align: inherit;">通过在定义属性时指定初始值来指定默认属性值。
</font></font></p><div class="note">
  <a name="//apple_ref/doc/uid/TP40014097-CH18-NoLink_130"></a>
  <aside class="aside">
    <p class="aside-title"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">注意
    </font></font></p>
    	<p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">如果属性始终采用相同的初始值，请提供默认值，而不是在初始化程序中设置值。</font><font style="vertical-align: inherit;">最终结果是相同的，但默认值更紧密地将属性的初始化绑定到其声明。</font><font style="vertical-align: inherit;">它使得初始化器更简洁，更清晰，并使您能够从其默认值推断出属性的类型。</font><font style="vertical-align: inherit;">如本章后面所述，默认值还使您更容易利用默认初始化程序和初始化程序继承。
    	</font></font></p>
    
  </aside>
</div><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  您可以</font></font><code class="code-voice">Fahrenheit</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">通过</font></font><code class="code-voice">temperature</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">在声明属性的位置</font><font style="vertical-align: inherit;">为其</font><font style="vertical-align: inherit;">属性</font><font style="vertical-align: inherit;">提供默认值，以较简单的形式从上面</font><font style="vertical-align: inherit;">编写</font><font style="vertical-align: inherit;">结构</font><font style="vertical-align: inherit;">：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">struct</span> <span class="vc">Fahrenheit</span> {</code></li>
            <li><code class="code-voice">    <span class="kt">var</span> <span class="vc">temperature</span> = <span class="m">32.0</span></code></li>
            <li><code class="code-voice">}</code></li>
        </ol>
      </div>
  </div>
</section>
  
</section>

</section>
<section class="section">
  <a name="//apple_ref/doc/uid/TP40014097-CH18-ID207"></a>
  <h3 class="section-name" tabindex="0"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">自定义初始化</font></font></h3>
  <p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  您可以使用输入参数和可选属性类型定制初始化过程，也可以通过在初始化过程中分配常量属性来进行定制，如以下各节所述。
</font></font></p>
  <section class="section">
  <a name="//apple_ref/doc/uid/TP40014097-CH18-ID208"></a>
  <h3 class="section-name" tabindex="0"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">初始化参数</font></font></h3>
  <p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  您可以提供</font></font><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">初始化参数</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">作为初始化程序定义的一部分，以定义自定义初始化过程的值的类型和名称。</font><font style="vertical-align: inherit;">初始化参数与函数和方法参数具有相同的功能和语法。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  以下示例定义了一个称为的结构</font></font><code class="code-voice">Celsius</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，它存储以摄氏度表示的温度。</font><font style="vertical-align: inherit;">该</font></font><code class="code-voice">Celsius</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">结构实现了两个名为</font></font><code class="code-voice">init(fromFahrenheit:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">and的</font><font style="vertical-align: inherit;">自定义初始化程序</font></font><code class="code-voice">init(fromKelvin:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，它使用不同温度值的值初始化结构的新实例：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">struct</span> <span class="vc">Celsius</span> {</code></li>
            <li><code class="code-voice">    <span class="kt">var</span> <span class="vc">temperatureInCelsius</span>: <span class="n"><!-- a href="" -->Double<!-- /a --></span></code></li>
            <li><code class="code-voice">    <span class="kt">init</span>(<span class="vc">fromFahrenheit</span> <span class="vc">fahrenheit</span>: <span class="n"><!-- a href="" -->Double<!-- /a --></span>) {</code></li>
            <li><code class="code-voice">        <span class="vc">temperatureInCelsius</span> = (<span class="vc">fahrenheit</span> - <span class="m">32.0</span>) / <span class="m">1.8</span></code></li>
            <li><code class="code-voice">    }</code></li>
            <li><code class="code-voice">    <span class="kt">init</span>(<span class="vc">fromKelvin</span> <span class="vc">kelvin</span>: <span class="n"><!-- a href="" -->Double<!-- /a --></span>) {</code></li>
            <li><code class="code-voice">        <span class="vc">temperatureInCelsius</span> = <span class="vc">kelvin</span> - <span class="m">273.15</span></code></li>
            <li><code class="code-voice">    }</code></li>
            <li><code class="code-voice">}</code></li>
            <li><code class="code-voice"><span class="kt">let</span> <span class="vc">boilingPointOfWater</span> = <span class="vc">Celsius</span>(<span class="vc">fromFahrenheit</span>: <span class="m">212.0</span>)</code></li>
            <li><code class="code-voice"><span class="c">// boilingPointOfWater.temperatureInCelsius is 100.0</span></code></li>
            <li><code class="code-voice"><span class="kt">let</span> <span class="vc">freezingPointOfWater</span> = <span class="vc">Celsius</span>(<span class="vc">fromKelvin</span>: <span class="m">273.15</span>)</code></li>
            <li><code class="code-voice"><span class="c">// freezingPointOfWater.temperatureInCelsius is 0.0</span></code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  第一个初始化器具有一个初始化参数，其参数标号为</font></font><code class="code-voice">fromFahrenheit</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，参数名称为</font></font><code class="code-voice">fahrenheit</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">第二个初始化器具有一个初始化参数，其参数标号为</font></font><code class="code-voice">fromKelvin</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，参数名称为</font></font><code class="code-voice">kelvin</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">两个初始化器都将其单个参数转换为相应的摄氏度值，并将该值存储在一个名为的属性中</font></font><code class="code-voice">temperatureInCelsius</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。
</font></font></p>
  
</section>
<section class="section">
  <a name="//apple_ref/doc/uid/TP40014097-CH18-ID209"></a>
  <h3 class="section-name" tabindex="0"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">参数名称和参数标签</font></font></h3>
  <p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  与函数和方法参数一样，初始化参数可以同时具有在初始化器主体内使用的参数名称和调用初始化器时使用的参数标签。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  但是，初始化程序在函数和方法所做的括号之前没有标识函数名称。</font><font style="vertical-align: inherit;">因此，初始化程序参数的名称和类型在识别应调用哪个初始化程序中起着特别重要的作用。</font><font style="vertical-align: inherit;">因此，</font><font style="vertical-align: inherit;">如果不提供一个参数</font><font style="vertical-align: inherit;">，Swift将为</font><font style="vertical-align: inherit;">初始化程序中的</font></font><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">每个</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">参数</font><font style="vertical-align: inherit;">提供一个自动参数标签</font><font style="vertical-align: inherit;">。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  下面的例子定义了一个名为结构</font></font><code class="code-voice">Color</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，具有三个恒定属性叫做</font></font><code class="code-voice">red</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，</font></font><code class="code-voice">green</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，和</font></font><code class="code-voice">blue</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">这些属性之间存储一个值</font></font><code class="code-voice">0.0</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，</font></font><code class="code-voice">1.0</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">用于指示颜色中红色，绿色和蓝色的数量。
</font></font></p><p class="para">
  <code class="code-voice">Color</code><font style="vertical-align: inherit;"></font><code class="code-voice">Double</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">为它的红色，绿色和蓝色组件</font><font style="vertical-align: inherit;">提供了一个具有三个适当命名的类型参数的初始化</font><font style="vertical-align: inherit;">程序。</font></font><code class="code-voice">Color</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">还提供了一个带有单个</font></font><code class="code-voice">white</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">参数</font><font style="vertical-align: inherit;">的第二个初始化程序，该</font><font style="vertical-align: inherit;">参数用于为所有三个颜色分量提供相同的值。
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">struct</span> <span class="vc">Color</span> {</code></li>
            <li><code class="code-voice">    <span class="kt">let</span> <span class="vc">red</span>, <span class="vc">green</span>, <span class="vc">blue</span>: <span class="n"><!-- a href="" -->Double<!-- /a --></span></code></li>
            <li><code class="code-voice">    <span class="kt">init</span>(<span class="vc">red</span>: <span class="n"><!-- a href="" -->Double<!-- /a --></span>, <span class="vc">green</span>: <span class="n"><!-- a href="" -->Double<!-- /a --></span>, <span class="vc">blue</span>: <span class="n"><!-- a href="" -->Double<!-- /a --></span>) {</code></li>
            <li><code class="code-voice">        <span class="kt">self</span>.<span class="vc">red</span>   = <span class="vc">red</span></code></li>
            <li><code class="code-voice">        <span class="kt">self</span>.<span class="vc">green</span> = <span class="vc">green</span></code></li>
            <li><code class="code-voice">        <span class="kt">self</span>.<span class="vc">blue</span>  = <span class="vc">blue</span></code></li>
            <li><code class="code-voice">    }</code></li>
            <li><code class="code-voice">    <span class="kt">init</span>(<span class="vc">white</span>: <span class="n"><!-- a href="" -->Double<!-- /a --></span>) {</code></li>
            <li><code class="code-voice">        <span class="vc">red</span>   = <span class="vc">white</span></code></li>
            <li><code class="code-voice">        <span class="vc">green</span> = <span class="vc">white</span></code></li>
            <li><code class="code-voice">        <span class="vc">blue</span>  = <span class="vc">white</span></code></li>
            <li><code class="code-voice">    }</code></li>
            <li><code class="code-voice">}</code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"></font><code class="code-voice">Color</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">通过为每个初始化参数提供命名值，</font><font style="vertical-align: inherit;">
  两个初始化器都可用于创建新</font><font style="vertical-align: inherit;">实例：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">let</span> <span class="vc">magenta</span> = <span class="vc">Color</span>(<span class="vc">red</span>: <span class="m">1.0</span>, <span class="vc">green</span>: <span class="m">0.0</span>, <span class="vc">blue</span>: <span class="m">1.0</span>)</code></li>
            <li><code class="code-voice"><span class="kt">let</span> <span class="vc">halfGray</span> = <span class="vc">Color</span>(<span class="vc">white</span>: <span class="m">0.5</span>)</code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  请注意，不使用参数标签就不能调用这些初始化器。</font><font style="vertical-align: inherit;">参数标签必须始终在初始化程序中使用（如果已定义），并省略它们是编译时错误：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">let</span> <span class="vc">veryGreen</span> = <span class="vc">Color</span>(<span class="m">0.0</span>, <span class="m">1.0</span>, <span class="m">0.0</span>)</code></li>
            <li><code class="code-voice"><span class="c">// this reports a compile-time error - argument labels are required</span></code></li>
        </ol>
      </div>
  </div>
</section>
  
</section>
<section class="section">
  <a name="//apple_ref/doc/uid/TP40014097-CH18-ID210"></a>
  <h3 class="section-name" tabindex="0"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">不带参数标签的初始化参数</font></font></h3>
  <p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  如果您不想为初始化参数使用参数标签，请为该参数编写一个下划线（</font></font><code class="code-voice">_</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">）而不是显式参数标签来覆盖默认行为。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  这是</font></font><code class="code-voice">Celsius</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">以前</font><font style="vertical-align: inherit;">的</font><font style="vertical-align: inherit;">示例</font><font style="vertical-align: inherit;">的扩展版本</font><font style="vertical-align: inherit;">，使用额外的初始化工具</font></font><code class="code-voice">Celsius</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">从</font></font><code class="code-voice">Double</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">已经处于摄氏度</font><font style="vertical-align: inherit;">的</font><font style="vertical-align: inherit;">值</font><font style="vertical-align: inherit;">创建新</font><font style="vertical-align: inherit;">实例</font><font style="vertical-align: inherit;">：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">struct</span> <span class="vc">Celsius</span> {</code></li>
            <li><code class="code-voice">    <span class="kt">var</span> <span class="vc">temperatureInCelsius</span>: <span class="n"><!-- a href="" -->Double<!-- /a --></span></code></li>
            <li><code class="code-voice">    <span class="kt">init</span>(<span class="vc">fromFahrenheit</span> <span class="vc">fahrenheit</span>: <span class="n"><!-- a href="" -->Double<!-- /a --></span>) {</code></li>
            <li><code class="code-voice">        <span class="vc">temperatureInCelsius</span> = (<span class="vc">fahrenheit</span> - <span class="m">32.0</span>) / <span class="m">1.8</span></code></li>
            <li><code class="code-voice">    }</code></li>
            <li><code class="code-voice">    <span class="kt">init</span>(<span class="vc">fromKelvin</span> <span class="vc">kelvin</span>: <span class="n"><!-- a href="" -->Double<!-- /a --></span>) {</code></li>
            <li><code class="code-voice">        <span class="vc">temperatureInCelsius</span> = <span class="vc">kelvin</span> - <span class="m">273.15</span></code></li>
            <li><code class="code-voice">    }</code></li>
            <li><code class="code-voice">    <span class="kt">init</span>(<span class="kt">_</span> <span class="vc">celsius</span>: <span class="n"><!-- a href="" -->Double<!-- /a --></span>) {</code></li>
            <li><code class="code-voice">        <span class="vc">temperatureInCelsius</span> = <span class="vc">celsius</span></code></li>
            <li><code class="code-voice">    }</code></li>
            <li><code class="code-voice">}</code></li>
            <li><code class="code-voice"><span class="kt">let</span> <span class="vc">bodyTemperature</span> = <span class="vc">Celsius</span>(<span class="m">37.0</span>)</code></li>
            <li><code class="code-voice"><span class="c">// bodyTemperature.temperatureInCelsius is 37.0</span></code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  初始化器调用</font></font><code class="code-voice">Celsius(37.0)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">在其意图中是清楚的，而不需要参数标签。</font><font style="vertical-align: inherit;">因此，编写该初始化程序是合适的，</font></font><code class="code-voice">init(_ celsius: Double)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">以便可以通过提供未命名的</font></font><code class="code-voice">Double</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">值</font><font style="vertical-align: inherit;">来调用它</font><font style="vertical-align: inherit;">。
</font></font></p>
  
</section>
<section class="section">
  <a name="//apple_ref/doc/uid/TP40014097-CH18-ID211"></a>
  <h3 class="section-name" tabindex="0"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">可选属性类型</font></font></h3>
  <p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  如果您的自定义类型的存储属性在逻辑上被允许具有“无值” - 也许是因为它的值不能在初始化过程中设置，或者因为它允许在稍后的某个点上具有“无值” - 请声明属性</font></font><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">可选</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">类型。</font><font style="vertical-align: inherit;">可选类型的属性会自动初始化为一个值</font></font><code class="code-voice">nil</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，表示该属性在初始化期间故意打算具有“没有值”。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  以下示例定义了一个名为的类</font></font><code class="code-voice">SurveyQuestion</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，并带有一个</font></font><code class="code-voice">String</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">名为</font><font style="vertical-align: inherit;">可选</font><font style="vertical-align: inherit;">属性</font></font><code class="code-voice">response</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">class</span> <span class="vc">SurveyQuestion</span> {</code></li>
            <li><code class="code-voice">    <span class="kt">var</span> <span class="vc">text</span>: <span class="n"><!-- a href="" -->String<!-- /a --></span></code></li>
            <li><code class="code-voice">    <span class="kt">var</span> <span class="vc">response</span>: <span class="n"><!-- a href="" -->String<!-- /a --></span>?</code></li>
            <li><code class="code-voice">    <span class="kt">init</span>(<span class="vc">text</span>: <span class="n"><!-- a href="" -->String<!-- /a --></span>) {</code></li>
            <li><code class="code-voice">        <span class="kt">self</span>.<span class="vc">text</span> = <span class="vc">text</span></code></li>
            <li><code class="code-voice">    }</code></li>
            <li><code class="code-voice">    <span class="kt">func</span> <span class="vc">ask</span>() {</code></li>
            <li><code class="code-voice">        <span class="vc">print</span>(<span class="vc">text</span>)</code></li>
            <li><code class="code-voice">    }</code></li>
            <li><code class="code-voice">}</code></li>
            <li><code class="code-voice"><span class="kt">let</span> <span class="vc">cheeseQuestion</span> = <span class="vc">SurveyQuestion</span>(<span class="vc">text</span>: <span class="s">"Do you like cheese?"</span>)</code></li>
            <li><code class="code-voice"><span class="vc">cheeseQuestion</span>.<span class="vc">ask</span>()</code></li>
            <li><code class="code-voice"><span class="c">// Prints "Do you like cheese?"</span></code></li>
            <li><code class="code-voice"><span class="vc">cheeseQuestion</span>.<span class="vc">response</span> = <span class="s">"Yes, I do like cheese."</span></code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  对调查问题的回答只有在被问到后才能知道，因此该</font></font><code class="code-voice">response</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">属性是用一种</font></font><code class="code-voice">String?</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">或“可选的</font></font><code class="code-voice">String</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">” </font><font style="vertical-align: inherit;">类型声明的</font><font style="vertical-align: inherit;">。</font></font><code class="code-voice">nil</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">当一个新实例</font></font><code class="code-voice">SurveyQuestion</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">被初始化</font><font style="vertical-align: inherit;">时</font><font style="vertical-align: inherit;">，会自动分配一个默认值</font><font style="vertical-align: inherit;">，意思是“没有字符串” </font><font style="vertical-align: inherit;">。
</font></font></p>
  
</section>
<section class="section">
  <a name="//apple_ref/doc/uid/TP40014097-CH18-ID212"></a>
  <h3 class="section-name" tabindex="0"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">在初始化期间分配常量属性</font></font></h3>
  <p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  只要在初始化完成时将其设置为一个确定的值，就可以在初始化过程中的任何时间点将值赋给常量属性。</font><font style="vertical-align: inherit;">一旦一个常量属性被分配一个值，它就不能被进一步修改。
</font></font></p><div class="note">
  <a name="//apple_ref/doc/uid/TP40014097-CH18-NoLink_131"></a>
  <aside class="aside">
    <p class="aside-title"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">注意
    </font></font></p>
    	<p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">对于类实例，可以在初始化期间仅通过引入它的类来修改常量属性。</font><font style="vertical-align: inherit;">它不能被子类修改。
    	</font></font></p>
    
  </aside>
</div><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  您可以修改</font></font><code class="code-voice">SurveyQuestion</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">上面</font><font style="vertical-align: inherit;">的</font><font style="vertical-align: inherit;">示例，以便为问题的</font></font><code class="code-voice">text</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">属性</font><font style="vertical-align: inherit;">使用常量属性而不是变量属性</font><font style="vertical-align: inherit;">，以指示在</font></font><code class="code-voice">SurveyQuestion</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">创建</font><font style="vertical-align: inherit;">实例后问题不会更改</font><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">即使</font></font><code class="code-voice">text</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">属性现在是一个常量，它仍然可以在类的初始化程序中设置：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">class</span> <span class="vc">SurveyQuestion</span> {</code></li>
            <li><code class="code-voice">    <span class="kt">let</span> <span class="vc">text</span>: <span class="n"><!-- a href="" -->String<!-- /a --></span></code></li>
            <li><code class="code-voice">    <span class="kt">var</span> <span class="vc">response</span>: <span class="n"><!-- a href="" -->String<!-- /a --></span>?</code></li>
            <li><code class="code-voice">    <span class="kt">init</span>(<span class="vc">text</span>: <span class="n"><!-- a href="" -->String<!-- /a --></span>) {</code></li>
            <li><code class="code-voice">        <span class="kt">self</span>.<span class="vc">text</span> = <span class="vc">text</span></code></li>
            <li><code class="code-voice">    }</code></li>
            <li><code class="code-voice">    <span class="kt">func</span> <span class="vc">ask</span>() {</code></li>
            <li><code class="code-voice">        <span class="vc">print</span>(<span class="vc">text</span>)</code></li>
            <li><code class="code-voice">    }</code></li>
            <li><code class="code-voice">}</code></li>
            <li><code class="code-voice"><span class="kt">let</span> <span class="vc">beetsQuestion</span> = <span class="vc">SurveyQuestion</span>(<span class="vc">text</span>: <span class="s">"How about beets?"</span>)</code></li>
            <li><code class="code-voice"><span class="vc">beetsQuestion</span>.<span class="vc">ask</span>()</code></li>
            <li><code class="code-voice"><span class="c">// Prints "How about beets?"</span></code></li>
            <li><code class="code-voice"><span class="vc">beetsQuestion</span>.<span class="vc">response</span> = <span class="s">"I also like beets. (But not with cheese.)"</span></code></li>
        </ol>
      </div>
  </div>
</section>
  
</section>

</section>
<section class="section">
  <a name="//apple_ref/doc/uid/TP40014097-CH18-ID213"></a>
  <h3 class="section-name" tabindex="0"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">默认初始化程序</font></font></h3>
  <p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  Swift </font><font style="vertical-align: inherit;">为任何结构或类</font><font style="vertical-align: inherit;">提供了一个</font></font><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">默认的初始</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">值设定项，它为其所有属性提供默认值，并且不会提供至少一个初始化程序本身。</font><font style="vertical-align: inherit;">默认初始化器只是创建一个新的实例，并将其所有属性设置为默认值。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  这个例子定义了一个叫做的类</font></font><code class="code-voice">ShoppingListItem</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，它将一个项目的名称，数量和购买状态封装在一个购物清单中：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">class</span> <span class="vc">ShoppingListItem</span> {</code></li>
            <li><code class="code-voice">    <span class="kt">var</span> <span class="vc">name</span>: <span class="n"><!-- a href="" -->String<!-- /a --></span>?</code></li>
            <li><code class="code-voice">    <span class="kt">var</span> <span class="vc">quantity</span> = <span class="m">1</span></code></li>
            <li><code class="code-voice">    <span class="kt">var</span> <span class="vc">purchased</span> = <span class="kt">false</span></code></li>
            <li><code class="code-voice">}</code></li>
            <li><code class="code-voice"><span class="kt">var</span> <span class="vc">item</span> = <span class="vc">ShoppingListItem</span>()</code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  因为</font></font><code class="code-voice">ShoppingListItem</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">该类的</font><font style="vertical-align: inherit;">所有属性</font><font style="vertical-align: inherit;">都具有默认值，并且因为它是不带超类的基类，所以会</font></font><code class="code-voice">ShoppingListItem</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">自动获得默认初始化器实现，该实现会创建一个新实例，并将其所有属性设置为其默认值。</font><font style="vertical-align: inherit;">（该</font></font><code class="code-voice">name</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">属性是一个可选</font></font><code class="code-voice">String</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">属性，因此它会自动接收默认值</font></font><code class="code-voice">nil</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，即使此值未写入代码中。）上面的示例使用</font></font><code class="code-voice">ShoppingListItem</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">该类</font><font style="vertical-align: inherit;">的默认初始化程序</font><font style="vertical-align: inherit;">来创建具有</font><font style="vertical-align: inherit;">初始化程序的</font><font style="vertical-align: inherit;">类的新实例语法，写为</font></font><code class="code-voice">ShoppingListItem()</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，并将这个新实例分配给一个名为的变量</font></font><code class="code-voice">item</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。
</font></font></p>
  <section class="section">
  <a name="//apple_ref/doc/uid/TP40014097-CH18-ID214"></a>
  <h3 class="section-name" tabindex="0"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">结构类型的成员初始化程序</font></font></h3>
  <p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  如果结构类型</font><font style="vertical-align: inherit;">未定义任何自定义</font></font><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">初始值设定项，</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">则会</font><font style="vertical-align: inherit;">自动接收</font><em><font style="vertical-align: inherit;">成员</font></em><font style="vertical-align: inherit;">初始值设定项。</font><font style="vertical-align: inherit;">与默认初始值设定项不同，即使结构存储了没有默认值的属性，结构也会收到成员初始值设定项。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  成员初始化程序是初始化新结构实例的成员属性的简写方法。</font><font style="vertical-align: inherit;">新实例的属性的初始值可以通过名称传递给成员初始值设定项。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  下面的例子定义了一个</font></font><code class="code-voice">Size</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">叫做“ </font></font><code class="code-voice">width</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">and”的</font><font style="vertical-align: inherit;">两个属性</font><font style="vertical-align: inherit;">的结构</font></font><code class="code-voice">height</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。</font></font><code class="code-voice">Double</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">通过分配一个默认值</font><font style="vertical-align: inherit;">来推断这两个属性都是类型</font><font style="vertical-align: inherit;">的</font></font><code class="code-voice">0.0</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  该</font></font><code class="code-voice">Size</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">结构自动接收</font></font><code class="code-voice">init(width:height:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">成员初始化程序，您可以使用它初始化新的</font></font><code class="code-voice">Size</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">实例：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">struct</span> <span class="vc">Size</span> {</code></li>
            <li><code class="code-voice">    <span class="kt">var</span> <span class="vc">width</span> = <span class="m">0.0</span>, <span class="vc">height</span> = <span class="m">0.0</span></code></li>
            <li><code class="code-voice">}</code></li>
            <li><code class="code-voice"><span class="kt">let</span> <span class="vc">twoByTwo</span> = <span class="vc">Size</span>(<span class="vc">width</span>: <span class="m">2.0</span>, <span class="vc">height</span>: <span class="m">2.0</span>)</code></li>
        </ol>
      </div>
  </div>
</section>
  
</section>

</section>
<section class="section">
  <a name="//apple_ref/doc/uid/TP40014097-CH18-ID215"></a>
  <h3 class="section-name" tabindex="0"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">值类型的初始化程序委托</font></font></h3>
  <p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  初始化器可以调用其他初始化器来执行实例初始化的一部分。</font><font style="vertical-align: inherit;">此过程称为</font></font><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">初始化器委派</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，可避免跨多个初始化器复制代码。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  对于值类型和类类型，初始化器委派如何工作以及允许使用哪种形式的委派的规则是不同的。</font><font style="vertical-align: inherit;">值类型（结构和枚举）不支持继承，因此它们的初始化器委派过程相对简单，因为它们只能委托给它们自己提供的另一个初始化器。</font><font style="vertical-align: inherit;">但是，类可以继承其他类，如</font></font><span class="x-name"><a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Inheritance.html#//apple_ref/doc/uid/TP40014097-CH17-ID193" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH17-ID193" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_55&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">继承中所述</font></font></a></span><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">这意味着类需要额外的责任来确保它们继承的所有存储属性在初始化期间被分配一个合适的值。</font><font style="vertical-align: inherit;">这些职责在</font><font style="vertical-align: inherit;">下面的</font></font><span class="x-name"><a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Initialization.html#//apple_ref/doc/uid/TP40014097-CH18-ID216" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH18-ID216" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_56&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">类继承和初始化</font></font></a></span><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">中描述</font><font style="vertical-align: inherit;">。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  对于值类型，</font></font><code class="code-voice">self.init</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">在编写自己的自定义初始值设定项时</font><font style="vertical-align: inherit;">，</font><font style="vertical-align: inherit;">用于引用来自相同值类型的其他初始值设定项。</font><font style="vertical-align: inherit;">您</font></font><code class="code-voice">self.init</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">只能从初始化程序中</font><font style="vertical-align: inherit;">调用</font><font style="vertical-align: inherit;">。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  请注意，如果您为值类型定义了自定义初始值设定项，那么您将不再有权访问该类型的默认初始值设定项（或成员初始值设定项，如果它是结构体）。</font><font style="vertical-align: inherit;">这个约束防止了一个情况，即在一个更复杂的初始化器中提供的附加基本设置被使用其中一个自动初始化器的人不小心规避了。
</font></font></p><div class="note">
  <a name="//apple_ref/doc/uid/TP40014097-CH18-NoLink_132"></a>
  <aside class="aside">
    <p class="aside-title"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">注意
    </font></font></p>
    	<p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">如果您希望自定义值类型可以使用默认初始化程序和成员初始化程序以及您自己的自定义初始化程序进行初始化，请将自定义初始化程序写入扩展中，而不是作为值类型原始实现的一部分。</font><font style="vertical-align: inherit;">有关更多信息，请参阅</font></font><span class="x-name"><a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Extensions.html#//apple_ref/doc/uid/TP40014097-CH24-ID151" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH24-ID151" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_57&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">扩展</font></font></a></span><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。
    	</font></font></p>
    
  </aside>
</div><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  以下示例定义了一个自定义</font></font><code class="code-voice">Rect</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">结构来表示一个几何矩形。</font><font style="vertical-align: inherit;">的例子需要两个称为支撑结构</font></font><code class="code-voice">Size</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">和</font></font><code class="code-voice">Point</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，两者都提供的默认值</font></font><code class="code-voice">0.0</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">对于所有其属性的：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">struct</span> <span class="vc">Size</span> {</code></li>
            <li><code class="code-voice">    <span class="kt">var</span> <span class="vc">width</span> = <span class="m">0.0</span>, <span class="vc">height</span> = <span class="m">0.0</span></code></li>
            <li><code class="code-voice">}</code></li>
            <li><code class="code-voice"><span class="kt">struct</span> <span class="vc">Point</span> {</code></li>
            <li><code class="code-voice">    <span class="kt">var</span> <span class="vc">x</span> = <span class="m">0.0</span>, <span class="vc">y</span> = <span class="m">0.0</span></code></li>
            <li><code class="code-voice">}</code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  您可以</font></font><code class="code-voice">Rect</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">通过三种方式之一</font><font style="vertical-align: inherit;">初始化</font><font style="vertical-align: inherit;">下面</font><font style="vertical-align: inherit;">的</font><font style="vertical-align: inherit;">结构 - 通过使用默认的零初始</font><font style="vertical-align: inherit;">值</font></font><code class="code-voice">origin</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">和</font></font><code class="code-voice">size</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">属性值，通过提供特定的原点和大小，或通过提供特定的中心点和大小。</font><font style="vertical-align: inherit;">这些初始化选项由作为</font></font><code class="code-voice">Rect</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">结构定义</font><font style="vertical-align: inherit;">一部分的三个自定义初始化程序代表</font><font style="vertical-align: inherit;">：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">struct</span> <span class="vc">Rect</span> {</code></li>
            <li><code class="code-voice">    <span class="kt">var</span> <span class="vc">origin</span> = <span class="vc">Point</span>()</code></li>
            <li><code class="code-voice">    <span class="kt">var</span> <span class="vc">size</span> = <span class="vc">Size</span>()</code></li>
            <li><code class="code-voice">    <span class="kt">init</span>() {}</code></li>
            <li><code class="code-voice">    <span class="kt">init</span>(<span class="vc">origin</span>: <span class="n"><!-- a href="" -->Point<!-- /a --></span>, <span class="vc">size</span>: <span class="n"><!-- a href="" -->Size<!-- /a --></span>) {</code></li>
            <li><code class="code-voice">        <span class="kt">self</span>.<span class="vc">origin</span> = <span class="vc">origin</span></code></li>
            <li><code class="code-voice">        <span class="kt">self</span>.<span class="vc">size</span> = <span class="vc">size</span></code></li>
            <li><code class="code-voice">    }</code></li>
            <li><code class="code-voice">    <span class="kt">init</span>(<span class="vc">center</span>: <span class="n"><!-- a href="" -->Point<!-- /a --></span>, <span class="vc">size</span>: <span class="n"><!-- a href="" -->Size<!-- /a --></span>) {</code></li>
            <li><code class="code-voice">        <span class="kt">let</span> <span class="vc">originX</span> = <span class="vc">center</span>.<span class="vc">x</span> - (<span class="vc">size</span>.<span class="vc">width</span> / <span class="m">2</span>)</code></li>
            <li><code class="code-voice">        <span class="kt">let</span> <span class="vc">originY</span> = <span class="vc">center</span>.<span class="vc">y</span> - (<span class="vc">size</span>.<span class="vc">height</span> / <span class="m">2</span>)</code></li>
            <li><code class="code-voice">        <span class="kt">self</span>.<span class="kt">init</span>(<span class="vc">origin</span>: <span class="vc">Point</span>(<span class="vc">x</span>: <span class="vc">originX</span>, <span class="vc">y</span>: <span class="vc">originY</span>), <span class="vc">size</span>: <span class="vc">size</span>)</code></li>
            <li><code class="code-voice">    }</code></li>
            <li><code class="code-voice">}</code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  第一个</font></font><code class="code-voice">Rect</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">初始化程序，</font></font><code class="code-voice">init()</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">在功能上与默认的初始化程序相同，如果该结构体没有自己的自定义初始化程序，该结构会收到它。</font><font style="vertical-align: inherit;">这个初始化器有一个空体，由一对空的花括号表示</font></font><code class="code-voice">{}</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">调用此初始化程序将返回一个</font></font><code class="code-voice">Rect</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">实例，其实例</font></font><code class="code-voice">origin</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">和</font></font><code class="code-voice">size</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">属性都使用</font><font style="vertical-align: inherit;">其属性定义</font><font style="vertical-align: inherit;">的默认值</font></font><code class="code-voice">Point(x: 0.0, y: 0.0)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">以及</font></font><code class="code-voice">Size(width: 0.0, height: 0.0)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">它们的属性定义进行</font><font style="vertical-align: inherit;">初始化</font><font style="vertical-align: inherit;">：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">let</span> <span class="vc">basicRect</span> = <span class="vc">Rect</span>()</code></li>
            <li><code class="code-voice"><span class="c">// basicRect's origin is (0.0, 0.0) and its size is (0.0, 0.0)</span></code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  第二个</font></font><code class="code-voice">Rect</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">初始化程序，</font></font><code class="code-voice">init(origin:size:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">在功能上与结构在没有自己的自定义初始化程序时会收到的成员初始化程序相同。</font><font style="vertical-align: inherit;">这个初始化器简单地将</font><font style="vertical-align: inherit;">参数值</font></font><code class="code-voice">origin</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">和</font></font><code class="code-voice">size</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">参数值</font><font style="vertical-align: inherit;">分配给</font><font style="vertical-align: inherit;">适当的存储属性：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">let</span> <span class="vc">originRect</span> = <span class="vc">Rect</span>(<span class="vc">origin</span>: <span class="vc">Point</span>(<span class="vc">x</span>: <span class="m">2.0</span>, <span class="vc">y</span>: <span class="m">2.0</span>),</code></li>
            <li><code class="code-voice">                      <span class="vc">size</span>: <span class="vc">Size</span>(<span class="vc">width</span>: <span class="m">5.0</span>, <span class="vc">height</span>: <span class="m">5.0</span>))</code></li>
            <li><code class="code-voice"><span class="c">// originRect's origin is (2.0, 2.0) and its size is (5.0, 5.0)</span></code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  第三个</font></font><code class="code-voice">Rect</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">初始化</font></font><code class="code-voice">init(center:size:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">器稍微复杂一些。</font><font style="vertical-align: inherit;">它通过基于</font></font><code class="code-voice">center</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">点和</font></font><code class="code-voice">size</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">值</font><font style="vertical-align: inherit;">计算适当的原点开始</font><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">然后它调用（或</font></font><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">委托</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">）</font></font><code class="code-voice">init(origin:size:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">初始化程序，它将新的原点和大小值存储在适当的属性中：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">let</span> <span class="vc">centerRect</span> = <span class="vc">Rect</span>(<span class="vc">center</span>: <span class="vc">Point</span>(<span class="vc">x</span>: <span class="m">4.0</span>, <span class="vc">y</span>: <span class="m">4.0</span>),</code></li>
            <li><code class="code-voice">                      <span class="vc">size</span>: <span class="vc">Size</span>(<span class="vc">width</span>: <span class="m">3.0</span>, <span class="vc">height</span>: <span class="m">3.0</span>))</code></li>
            <li><code class="code-voice"><span class="c">// centerRect's origin is (2.5, 2.5) and its size is (3.0, 3.0)</span></code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  在</font></font><code class="code-voice">init(center:size:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">初始化可能分配的新值</font></font><code class="code-voice">origin</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，并</font></font><code class="code-voice">size</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">以相应的属性本身。</font><font style="vertical-align: inherit;">但是，</font></font><code class="code-voice">init(center:size:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">初始化程序利用已经提供了该功能的现有初始化程序</font><font style="vertical-align: inherit;">更方便（并且意图更清晰）</font><font style="vertical-align: inherit;">。
</font></font></p><div class="note">
  <a name="//apple_ref/doc/uid/TP40014097-CH18-NoLink_133"></a>
  <aside class="aside">
    <p class="aside-title"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">注意
    </font></font></p>
    	<p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">对于另一种方式来写这个例子中没有定义</font></font><code class="code-voice">init()</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">和</font></font><code class="code-voice">init(origin:size:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">初始化自己，看看</font></font><span class="x-name"><a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Extensions.html#//apple_ref/doc/uid/TP40014097-CH24-ID151" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH24-ID151" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_58&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">扩展</font></font></a></span><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。
    	</font></font></p>
    
  </aside>
</div>
  
</section>
<section class="section">
  <a name="//apple_ref/doc/uid/TP40014097-CH18-ID216"></a>
  <h3 class="section-name" tabindex="0"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">类继承和初始化</font></font></h3>
  <p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">在初始化期间，</font><font style="vertical-align: inherit;">
  所有类的存储属性（包括类从其超类继承的任何属性）都</font></font><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">必须</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">分配一个初始值。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  Swift为类类型定义了两种初始化方法，以帮助确保所有存储的属性都接收初始值。</font><font style="vertical-align: inherit;">这些被称为指定初始化器和便捷初始化器。
</font></font></p>
  <section class="section">
  <a name="//apple_ref/doc/uid/TP40014097-CH18-ID217"></a>
  <h3 class="section-name" tabindex="0"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">指定的初始化程序和便捷初始化程序</font></font></h3>
  <p class="para">
  <em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">指定的初始化器</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">是一个类的主要初始化器。</font><font style="vertical-align: inherit;">指定的初始化程序完全初始化由该类引入的所有属性，并调用适当的超类初始化程序以继续超类链的初始化过程。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  类通常只有极少数指定的初始化器，而一个类只有一个是很常见的。</font><font style="vertical-align: inherit;">指定的初始化器是通过初始化发生的“漏斗”点，并且初始化过程通过它继续超类链。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  每个班级必须至少有一个指定的初始化程序。</font><font style="vertical-align: inherit;">在某些情况下，通过从超类继承一个或多个指定的初始化程序可满足此要求，如</font><font style="vertical-align: inherit;">下面的“ </font></font><span class="x-name"><a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Initialization.html#//apple_ref/doc/uid/TP40014097-CH18-ID222" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH18-ID222" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_59&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">自动初始化程序继承”中</font></font></a></span><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">所述。
</font></font></p><p class="para">
  <em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">便捷初始化器</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">是次要的，支持一个类的初始化器。</font><font style="vertical-align: inherit;">您可以定义一个便利初始值设定项，以便从与初始值设定项相同的类中调用指定初始值设定项，并将某些指定初始值设定项的参数设置为默认值。</font><font style="vertical-align: inherit;">您还可以定义一个便利初始值设定程序，为特定用例或输入值类型创建该类的实例。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  如果你的班级不需要他们，你不必提供便利的初始化工具。</font><font style="vertical-align: inherit;">创建便捷初始值设定项时，只要使用通用初始化模式的快捷方式可以节省时间或在意图中对类进行初始化。
</font></font></p>
  
</section>
<section class="section">
  <a name="//apple_ref/doc/uid/TP40014097-CH18-ID218"></a>
  <h3 class="section-name" tabindex="0"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">指定和便捷初始化程序的语法</font></font></h3>
  <p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  类的指定初始值设定项的编写方式与针对值类型的简单初始值设定项相同：
</font></font></p><span class="caption"></span>
<div class="code-outline">
  <ul class="code-outline-lines">
    <li><pre class="code-voice"><span class="kt"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">init</font></font></span><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">（</font></font><em class="variable-text"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">parameters</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">）{</font></font></pre></li><li><pre class="code-voice">    <em class="variable-text"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">声明</font></font></em></pre></li><li><pre class="code-voice"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">}</font></font></pre></li>
  </ul>
</div><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  便捷初始值设定项以相同样式编写，但</font></font><code class="code-voice">convenience</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">修饰符位于</font></font><code class="code-voice">init</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">关键字</font><font style="vertical-align: inherit;">之前</font><font style="vertical-align: inherit;">，以空格分隔：
</font></font></p><span class="caption"></span>
<div class="code-outline">
  <ul class="code-outline-lines">
    <li><pre class="code-voice"><span class="kt"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">方便的</font></font></span> <span class="kt"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">init</font></font></span><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">（</font></font><em class="variable-text"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">参数</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">）{</font></font></pre></li><li><pre class="code-voice">    <em class="variable-text"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">声明</font></font></em></pre></li><li><pre class="code-voice"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">}</font></font></pre></li>
  </ul>
</div>
  
</section>
<section class="section">
  <a name="//apple_ref/doc/uid/TP40014097-CH18-ID219"></a>
  <h3 class="section-name" tabindex="0"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">类类型的初始化程序委托</font></font></h3>
  <p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  为了简化指定者和便捷初始值设定项之间的关系，Swift为初始值设定项之间的委托调用应用以下三条规则：
</font></font></p><dl class="term-definition termdef">
	
  <dt class="term"><strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">规则1</font></font></strong></dt>
  <dd class="definition"><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  指定的初始化器必须从它的直接超类中调用指定的初始化器。
</font></font></p></dd>


  <dt class="term"><strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">规则2</font></font></strong></dt>
  <dd class="definition"><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  便捷初始值设定项必须调用</font></font><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">同一个</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">类中的</font><font style="vertical-align: inherit;">另一个初始值设定</font><font style="vertical-align: inherit;">项。
</font></font></p></dd>


  <dt class="term"><strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">规则3</font></font></strong></dt>
  <dd class="definition"><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  便利初始值设定程序最终必须调用指定的初始化程序。
</font></font></p></dd>


</dl><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  记住这个简单的方法是：
</font></font></p><ul class="list-bullet">
  <li class="item"><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  指定的初始值必须始终委派</font></font><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">了</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。
</font></font></p>
</li><li class="item"><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  便利的初始化必须始终委派</font></font><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">跨越</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。
</font></font></p>
</li>
</ul><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  这些规则如下图所示：
</font></font></p><figure class="figure">
  
  <span class="caption"></span>
  <img src="./Swift编程语言（Swift 4.1）：初始化_files/initializerDelegation01_2x.png" alt="image：../Art/initializerDelegation01_2x.png" width="448" height="214">
</figure><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  这里，超类有一个指定的初始化器和两个便利初始化器。</font><font style="vertical-align: inherit;">一个便捷初始值设定项调用另一个便捷初始值设定项，它又调用单个指定的初始值设定项。</font><font style="vertical-align: inherit;">这符合上面的规则2和3。</font><font style="vertical-align: inherit;">超类本身没有进一步的超类，所以规则1不适用。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  该图中的子类有两个指定的初始化程序和一个便利初始化程序。</font><font style="vertical-align: inherit;">便利初始值设定程序必须调用两个指定的初始值设定项之一，因为它只能调用同一个类中的另一个初始值设定项。</font><font style="vertical-align: inherit;">这符合上面的规则2和3。</font><font style="vertical-align: inherit;">两个指定的初始化器都必须调用超类中的单个指定初始化器，以满足上面的规则1。
</font></font></p><div class="note">
  <a name="//apple_ref/doc/uid/TP40014097-CH18-NoLink_134"></a>
  <aside class="aside">
    <p class="aside-title"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">注意
    </font></font></p>
    	<p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">这些规则不影响你的类的用户如何</font></font><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">创建</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">每个类的实例。</font><font style="vertical-align: inherit;">上图中的任何初始化器均可用于创建它们所属类的完全初始化的实例。</font><font style="vertical-align: inherit;">规则只影响你编写类的初始化器的实现。
    	</font></font></p>
    
  </aside>
</div><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  下图显示了四个类的更复杂的类层次结构。</font><font style="vertical-align: inherit;">它说明了这个层次结构中指定的初始化器如何作为类初始化的“漏斗”点，简化了链中类之间的相互关系：
</font></font></p><figure class="figure">
  
  <span class="caption"></span>
  <img src="./Swift编程语言（Swift 4.1）：初始化_files/initializerDelegation02_2x.png" alt="image：../Art/initializerDelegation02_2x.png" width="448" height="444">
</figure>
  
</section>
<section class="section">
  <a name="//apple_ref/doc/uid/TP40014097-CH18-ID220"></a>
  <h3 class="section-name" tabindex="0"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">两阶段初始化</font></font></h3>
  <p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  Swift中的类初始化是一个两阶段过程。</font><font style="vertical-align: inherit;">在第一阶段中，每个存储的属性由引入它的类来分配一个初始值。</font><font style="vertical-align: inherit;">一旦确定了每个存储属性的初始状态，第二阶段开始，并且每个类都有机会在新实例被认为准备好使用之前进一步定制其存储的属性。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  使用两阶段初始化过程可以使初始化安全，同时仍然为类层次结构中的每个类提供完全的灵活性。</font><font style="vertical-align: inherit;">两阶段初始化可防止在初始化之前访问属性值，并防止其他初始化程序意外地将属性值设置为不同的值。
</font></font></p><div class="note">
  <a name="//apple_ref/doc/uid/TP40014097-CH18-NoLink_135"></a>
  <aside class="aside">
    <p class="aside-title"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">注意
    </font></font></p>
    	<p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Swift的两阶段初始化过程与Objective-C中的初始化类似。</font><font style="vertical-align: inherit;">主要区别在于，在阶段1中，Objective-C为</font><font style="vertical-align: inherit;">每个属性</font><font style="vertical-align: inherit;">分配零或空值（如</font></font><code class="code-voice">0</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">或</font></font><code class="code-voice">nil</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">）。</font><font style="vertical-align: inherit;">Swift的初始化流程更灵活，因为它可以让你设置自定义的初始值，并且可以处理类型</font></font><code class="code-voice">0</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">或</font></font><code class="code-voice">nil</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">不是有效的默认值。
    	</font></font></p>
    
  </aside>
</div><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  Swift的编译器执行四个有用的安全检查，以确保两阶段初始化完成没有错误：
</font></font></p><dl class="term-definition termdef">
	
  <dt class="term"><strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">安全检查1</font></font></strong></dt>
  <dd class="definition"><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  指定的初始化程序必须确保在其委托给超类初始化程序之前，其类所引入的所有属性都已初始化。
</font></font></p></dd>


</dl><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  如上所述，一旦所有存储属性的初始状态已知，对象的内存就被认为是完全初始化的。</font><font style="vertical-align: inherit;">为了满足这个规则，指定的初始化器必须确保它的所有属性在它传递链之前被初始化。
</font></font></p><dl class="term-definition termdef">
	
  <dt class="term"><strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">安全检查2</font></font></strong></dt>
  <dd class="definition"><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  指定的初始化程序必须在将值分配给继承的属性之前将其委托给超类初始化程序。</font><font style="vertical-align: inherit;">如果不是，指定初始化程序分配的新值将被超类作为其自身初始化的一部分覆盖。
</font></font></p></dd>


  <dt class="term"><strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">安全检查3</font></font></strong></dt>
  <dd class="definition"><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  在为</font></font><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">任何</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">属性（包括由同一类定义的属性）</font><font style="vertical-align: inherit;">分配值之前，便利初始值设定项必须委托给另一个初始值</font><font style="vertical-align: inherit;">设定项。</font><font style="vertical-align: inherit;">如果不是，便利初始值设定项赋予的新值将被其自己的类的指定初始值设定项覆盖。
</font></font></p></dd>


  <dt class="term"><strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">安全检查4</font></font></strong></dt>
  <dd class="definition"><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  初始化程序不能调用任何实例方法，读取任何实例属性的值，或者</font></font><code class="code-voice">self</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">在完成初始化的第一阶段之后才将其</font><font style="vertical-align: inherit;">引用</font><font style="vertical-align: inherit;">为值。
</font></font></p></dd>


</dl><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  在第一阶段结束之前，类实例不完全有效。</font><font style="vertical-align: inherit;">一旦在第一阶段结束时已知该类实例有效，就只能访问属性，并且只能调用方法。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  基于上面的四项安全检查，以下是两阶段初始化的演示过程：
</font></font></p><p class="para">
  <strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">阶段1</font></font></strong>
</p><ul class="list-bullet">
  <li class="item"><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  在一个类上调用指定的或便利的初始化程序。
</font></font></p>
</li><li class="item"><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  分配了该类的新实例的内存。</font><font style="vertical-align: inherit;">内存尚未初始化。
</font></font></p>
</li><li class="item"><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  该类的指定初始化程序确认由该类引入的所有存储属性都具有值。</font><font style="vertical-align: inherit;">这些存储属性的内存现在已初始化。
</font></font></p>
</li><li class="item"><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  指定的初始化程序将切换到超类初始化程序，以针对其自身存储的属性执行相同的任务。
</font></font></p>
</li><li class="item"><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  这继续了类继承链，直到达到链的顶端。
</font></font></p>
</li><li class="item"><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  一旦达到链的顶端，并且链中的最后一个类已确保其所有存储的属性都有值，则认为实例的内存已完全初始化，并且阶段1已完成。
</font></font></p>
</li>
</ul><p class="para">
  <strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">阶段2</font></font></strong>
</p><ul class="list-bullet">
  <li class="item"><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  从链的顶部开始，链中的每个指定初始化程序都可以选择进一步定制实例。</font><font style="vertical-align: inherit;">现在，初始化器能够访问</font></font><code class="code-voice">self</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">并修改其属性，调用其实例方法等等。
</font></font></p>
</li><li class="item"><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  最后，链中的任何便利初始值设定项都可以选择自定义实例并使用它</font></font><code class="code-voice">self</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。
</font></font></p>
</li>
</ul><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  以下是第1阶段如何查找假设的子类和超类的初始化调用：
</font></font></p><figure class="figure">
  
  <span class="caption"></span>
  <img src="./Swift编程语言（Swift 4.1）：初始化_files/twoPhaseInitialization01_2x.png" alt="image：../Art/twoPhaseInitialization01_2x.png" width="448" height="214">
</figure><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  在这个例子中，初始化通过调用子类上的便利初始值设定项开始。</font><font style="vertical-align: inherit;">此便利初始值设定程序不能修改任何属性。</font><font style="vertical-align: inherit;">它将代表转移给同一个班级的指定初始化程序。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  指定的初始化器确保所有子类的属性都具有一个值，如安全检查1所示。然后，它会在其超类上调用指定的初始化程序，以继续初始化链。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  超类的指定初始化器确保所有的超类属性都有一个值。</font><font style="vertical-align: inherit;">没有更多的超类初始化，因此不需要进一步的委派。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  只要超类的所有属性都具有初始值，其内存就被认为已完全初始化，并且阶段1已完成。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  以下是阶段2如何寻找相同的初始化调用：
</font></font></p><figure class="figure">
  
  <span class="caption"></span>
  <img src="./Swift编程语言（Swift 4.1）：初始化_files/twoPhaseInitialization02_2x.png" alt="image：../Art/twoPhaseInitialization02_2x.png" width="448" height="214">
</figure><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  超类的指定初始化器现在有机会进一步自定义实例（尽管它不必）。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  一旦超类的指定初始化工具完成，子类的指定初始化工具就可以执行额外的自定义工作（尽管它不一定）。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  最后，一旦子类的指定初始化程序完成，最初调用的便利初始化程序可以执行其他自定义。
</font></font></p>
  
</section>
<section class="section">
  <a name="//apple_ref/doc/uid/TP40014097-CH18-ID221"></a>
  <h3 class="section-name" tabindex="0"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">初始化器继承和重写</font></font></h3>
  <p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  与Objective-C中的子类不同，Swift子类默认不会继承它们的超类初始化器。</font><font style="vertical-align: inherit;">Swift的方法避免了一个情况，即超类中的简单初始化器被更专用的子类继承，并用于创建未完全或正确初始化的子类的新实例。
</font></font></p><div class="note">
  <a name="//apple_ref/doc/uid/TP40014097-CH18-NoLink_136"></a>
  <aside class="aside">
    <p class="aside-title"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">注意
    </font></font></p>
    	<p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">超类初始化</font></font><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">器</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">在某些情况下</font><em><font style="vertical-align: inherit;">是</font></em><font style="vertical-align: inherit;">继承的，但只有在安全和适当的情况下才能这样做。</font><font style="vertical-align: inherit;">有关更多信息，请参阅</font><font style="vertical-align: inherit;">下面的</font></font><span class="x-name"><a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Initialization.html#//apple_ref/doc/uid/TP40014097-CH18-ID222" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH18-ID222" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_60&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">自动初始化程序继承</font></font></a></span><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。
    	</font></font></p>
    
  </aside>
</div><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  如果你想让自定义的子类提供一个或多个相同的初始化器作为它的超类，你可以在子类中提供这些初始化器的自定义实现。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  当你编写一个与超类</font></font><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">指定的</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">初始值设定项</font><font style="vertical-align: inherit;">相匹配的子类</font><font style="vertical-align: inherit;">初始值设定项时，你正在有效地提供对那个指定的初始值设定项的重写。</font><font style="vertical-align: inherit;">因此，您必须</font></font><code class="code-voice">override</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">在子类的初始化程序定义之前</font><font style="vertical-align: inherit;">编写</font><font style="vertical-align: inherit;">修饰符。</font><font style="vertical-align: inherit;">即使您正在覆盖自动提供的默认初始值设定项，情况也是如此，如默认初始</font></font><span class="x-name"><a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Initialization.html#//apple_ref/doc/uid/TP40014097-CH18-ID213" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH18-ID213" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_61&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">值设定项中</font></font></a></span><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">所述</font><font style="vertical-align: inherit;">。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  与重写的属性，方法或下标一样，</font></font><code class="code-voice">override</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">修饰符</font><font style="vertical-align: inherit;">的存在</font><font style="vertical-align: inherit;">会提示Swift检查超类是否有一个匹配的指定初始化程序被覆盖，并验证是否按照预期指定了覆盖初始化程序的参数。
</font></font></p><div class="note">
  <a name="//apple_ref/doc/uid/TP40014097-CH18-NoLink_137"></a>
  <aside class="aside">
    <p class="aside-title"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">注意
    </font></font></p>
    	<p class="para"><font style="vertical-align: inherit;"></font><code class="code-voice">override</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">即使您的子类的初始值设定项的实现是便捷初始值设定项，</font><font style="vertical-align: inherit;">您仍然</font><font style="vertical-align: inherit;">在覆盖超类指定的初始值设定项时</font><font style="vertical-align: inherit;">编写</font><font style="vertical-align: inherit;">修饰符。
    	</font></font></p>
    
  </aside>
</div><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  相反，如果您编写与超类</font></font><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">方便</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">初始值设定项</font><font style="vertical-align: inherit;">相匹配的子类</font><font style="vertical-align: inherit;">初始值设定项，那么超类方便初始值设定项永远不会由您的子类直接调用，如上面在</font></font><span class="x-name"><a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Initialization.html#//apple_ref/doc/uid/TP40014097-CH18-ID219" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH18-ID219" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_62&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">“类类型的初始化程序委派”中</font></font></a></span><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">所述的规则</font><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">因此，你的子类不是（严格地说）提供超类初始化器的重写。</font><font style="vertical-align: inherit;">因此，</font></font><code class="code-voice">override</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">在提供超类方便初始值设定项的匹配实现时</font><font style="vertical-align: inherit;">，不要编写</font><font style="vertical-align: inherit;">修饰符。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  下面的例子定义了一个名为的基类</font></font><code class="code-voice">Vehicle</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">这个基类声明了一个名为的存储属性</font></font><code class="code-voice">numberOfWheels</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，默认</font></font><code class="code-voice">Int</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">值为</font></font><code class="code-voice">0</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">这个</font></font><code class="code-voice">numberOfWheels</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">属性被一个被调用的属性</font></font><code class="code-voice">description</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">用来创建一个</font></font><code class="code-voice">String</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">车辆特征的描述：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">class</span> <span class="vc">Vehicle</span> {</code></li>
            <li><code class="code-voice">    <span class="kt">var</span> <span class="vc">numberOfWheels</span> = <span class="m">0</span></code></li>
            <li><code class="code-voice">    <span class="kt">var</span> <span class="vc">description</span>: <span class="n"><!-- a href="" -->String<!-- /a --></span> {</code></li>
            <li><code class="code-voice">        <span class="kt">return</span> <span class="s">"</span>\(<span class="vc">numberOfWheels</span>)<span class="s"> wheel(s)"</span></code></li>
            <li><code class="code-voice">    }</code></li>
            <li><code class="code-voice">}</code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  本</font></font><code class="code-voice">Vehicle</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">类提供了其唯一的存储属性的默认值，并没有提供任何自定义初始化本身。</font><font style="vertical-align: inherit;">其结果是，它会自动接收默认初始值，如在描述的</font></font><span class="x-name"><a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Initialization.html#//apple_ref/doc/uid/TP40014097-CH18-ID213" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH18-ID213" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_63&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">默认初始值设定</font></font></a></span><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">默认初始化（如果有的话）始终是一类指定初始化，并且可以用来创建一个新的</font></font><code class="code-voice">Vehicle</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">带有实例</font></font><code class="code-voice">numberOfWheels</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">的</font></font><code class="code-voice">0</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">let</span> <span class="vc">vehicle</span> = <span class="vc">Vehicle</span>()</code></li>
            <li><code class="code-voice"><span class="vc">print</span>(<span class="s">"Vehicle: </span>\(<span class="vc">vehicle</span>.<span class="vc">description</span>)<span class="s">"</span>)</code></li>
            <li><code class="code-voice"><span class="c">// Vehicle: 0 wheel(s)</span></code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  下一个示例定义了一个</font></font><code class="code-voice">Vehicle</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">被调用</font><font style="vertical-align: inherit;">的子类</font></font><code class="code-voice">Bicycle</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">class</span> <span class="vc">Bicycle</span>: <span class="n"><!-- a href="" -->Vehicle<!-- /a --></span> {</code></li>
            <li><code class="code-voice">    <span class="kt">override</span> <span class="kt">init</span>() {</code></li>
            <li><code class="code-voice">        <span class="kt">super</span>.<span class="kt">init</span>()</code></li>
            <li><code class="code-voice">        <span class="vc">numberOfWheels</span> = <span class="m">2</span></code></li>
            <li><code class="code-voice">    }</code></li>
            <li><code class="code-voice">}</code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  该</font></font><code class="code-voice">Bicycle</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">子类定义了一个自定义的指定初始化程序，</font></font><code class="code-voice">init()</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">这个指定的初始值设定项与来自超类的指定初始值设定项相匹配</font></font><code class="code-voice">Bicycle</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，所以</font></font><code class="code-voice">Bicycle</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">此初始值设定项</font><font style="vertical-align: inherit;">的</font><font style="vertical-align: inherit;">版本标有</font></font><code class="code-voice">override</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">修饰符。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  该</font></font><code class="code-voice">init()</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">用于初始化</font></font><code class="code-voice">Bicycle</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">通过调用开始</font></font><code class="code-voice">super.init()</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，这就要求默认初始化</font></font><code class="code-voice">Bicycle</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">类的超类</font></font><code class="code-voice">Vehicle</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">这可以确保</font></font><code class="code-voice">numberOfWheels</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">继承的属性</font></font><code class="code-voice">Vehicle</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">在</font></font><code class="code-voice">Bicycle</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">有机会修改属性</font><font style="vertical-align: inherit;">之前</font><font style="vertical-align: inherit;">被初始化</font><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">调用后</font></font><code class="code-voice">super.init()</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，原始值将</font></font><code class="code-voice">numberOfWheels</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">被替换为新的值</font></font><code class="code-voice">2</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  如果你创建了一个实例</font></font><code class="code-voice">Bicycle</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，你可以调用它的继承</font></font><code class="code-voice">description</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">计算属性来查看它的</font></font><code class="code-voice">numberOfWheels</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">属性是</font><font style="vertical-align: inherit;">如何</font><font style="vertical-align: inherit;">更新的：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">let</span> <span class="vc">bicycle</span> = <span class="vc">Bicycle</span>()</code></li>
            <li><code class="code-voice"><span class="vc">print</span>(<span class="s">"Bicycle: </span>\(<span class="vc">bicycle</span>.<span class="vc">description</span>)<span class="s">"</span>)</code></li>
            <li><code class="code-voice"><span class="c">// Bicycle: 2 wheel(s)</span></code></li>
        </ol>
      </div>
  </div>
</section><div class="note">
  <a name="//apple_ref/doc/uid/TP40014097-CH18-NoLink_138"></a>
  <aside class="aside">
    <p class="aside-title"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">注意
    </font></font></p>
    	<p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">子类可以在初始化期间修改继承的变量属性，但不能修改继承的常量属性。
    	</font></font></p>
    
  </aside>
</div>
  
</section>
<section class="section">
  <a name="//apple_ref/doc/uid/TP40014097-CH18-ID222"></a>
  <h3 class="section-name" tabindex="0"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">自动初始化器继承</font></font></h3>
  <p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  如上所述，默认情况下，子类不会继承其超类初始化程序。</font><font style="vertical-align: inherit;">但是，</font><font style="vertical-align: inherit;">如果满足某些条件</font><font style="vertical-align: inherit;">，超类初始化器</font></font><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">会</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">自动继承。</font><font style="vertical-align: inherit;">实际上，这意味着在许多常见场景中，您不需要编写初始化程序覆盖，并且可以在安全的情况下以最小的努力继承超类初始化程序。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  假设您为在子类中引入的任何新属性提供默认值，则适用以下两个规则：
</font></font></p><dl class="term-definition termdef">
	
  <dt class="term"><strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">规则1</font></font></strong></dt>
  <dd class="definition"><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  如果你的子类没有定义任何指定的初始化器，它会自动继承它所有的超类指定的初始化器。
</font></font></p></dd>


  <dt class="term"><strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">规则2</font></font></strong></dt>
  <dd class="definition"><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  如果你的子类提供了</font><font style="vertical-align: inherit;">它</font></font><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">所有</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">超类指定的初始值设定项的实现 - 或者按照规则1继承它们，或者通过提供一个自定义实现作为它的定义的一部分 - 那么它将自动继承所有的超类方便初始值设定项。
</font></font></p></dd>


</dl><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  即使您的子类添加了更多便利初始值设定项，这些规则也适用。
</font></font></p><div class="note">
  <a name="//apple_ref/doc/uid/TP40014097-CH18-NoLink_139"></a>
  <aside class="aside">
    <p class="aside-title"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">注意
    </font></font></p>
    	<p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">作为满足规则2的一部分，子类可以实现超类指定初始化器作为子类便利初始化器。
    	</font></font></p>
    
  </aside>
</div>
  
</section>
<section class="section">
  <a name="//apple_ref/doc/uid/TP40014097-CH18-ID223"></a>
  <h3 class="section-name" tabindex="0"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">指定和便利初始化程序在行动</font></font></h3>
  <p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  以下示例显示了指定的初始值设定项，便捷初始值设定项和实际上的自动初始化项继承。</font><font style="vertical-align: inherit;">这个例子定义了三类所谓的层次</font></font><code class="code-voice">Food</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，</font></font><code class="code-voice">RecipeIngredient</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">和</font></font><code class="code-voice">ShoppingListItem</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，并演示了如何自己初始化互动。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  调用层次结构中的基类</font></font><code class="code-voice">Food</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，这是一个封装食品名称的简单类。</font><font style="vertical-align: inherit;">该</font></font><code class="code-voice">Food</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">课程介绍一个</font></font><code class="code-voice">String</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">叫做物业</font></font><code class="code-voice">name</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">并提供两个初始化创建</font></font><code class="code-voice">Food</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">实例：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">class</span> <span class="vc">Food</span> {</code></li>
            <li><code class="code-voice">    <span class="kt">var</span> <span class="vc">name</span>: <span class="n"><!-- a href="" -->String<!-- /a --></span></code></li>
            <li><code class="code-voice">    <span class="kt">init</span>(<span class="vc">name</span>: <span class="n"><!-- a href="" -->String<!-- /a --></span>) {</code></li>
            <li><code class="code-voice">        <span class="kt">self</span>.<span class="vc">name</span> = <span class="vc">name</span></code></li>
            <li><code class="code-voice">    }</code></li>
            <li><code class="code-voice">    <span class="kt">convenience</span> <span class="kt">init</span>() {</code></li>
            <li><code class="code-voice">        <span class="kt">self</span>.<span class="kt">init</span>(<span class="vc">name</span>: <span class="s">"[Unnamed]"</span>)</code></li>
            <li><code class="code-voice">    }</code></li>
            <li><code class="code-voice">}</code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  下图显示了</font></font><code class="code-voice">Food</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">该类</font><font style="vertical-align: inherit;">的初始化链</font><font style="vertical-align: inherit;">：
</font></font></p><figure class="figure">
  
  <span class="caption"></span>
  <img src="./Swift编程语言（Swift 4.1）：初始化_files/initializersExample01_2x.png" alt="image：../Art/initializersExample01_2x.png" width="482" height="136">
</figure><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  类没有默认的成员初始值设定项，所以</font></font><code class="code-voice">Food</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">该类提供了一个指定的初始</font><font style="vertical-align: inherit;">值设定项，它只</font><font style="vertical-align: inherit;">接受一个名为的参数</font></font><code class="code-voice">name</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">此初始值设定项可用于创建</font></font><code class="code-voice">Food</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">具有特定名称</font><font style="vertical-align: inherit;">的新</font><font style="vertical-align: inherit;">实例：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">let</span> <span class="vc">namedMeat</span> = <span class="vc">Food</span>(<span class="vc">name</span>: <span class="s">"Bacon"</span>)</code></li>
            <li><code class="code-voice"><span class="c">// namedMeat's name is "Bacon"</span></code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"></font><code class="code-voice">init(name: String)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">来自</font></font><code class="code-voice">Food</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">该类</font><font style="vertical-align: inherit;">
  的</font><font style="vertical-align: inherit;">初始化程序</font><font style="vertical-align: inherit;">是作为</font></font><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">指定的</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">初始化程序提供的，因为它可确保新</font></font><code class="code-voice">Food</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">实例的</font><font style="vertical-align: inherit;">所有存储属性</font><font style="vertical-align: inherit;">都已完全初始化。</font><font style="vertical-align: inherit;">本</font></font><code class="code-voice">Food</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">类没有超类，所以</font></font><code class="code-voice">init(name: String)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">初始化并不需要调用</font></font><code class="code-voice">super.init()</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">来完成初始化。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  该</font></font><code class="code-voice">Food</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">级还提供了一个</font></font><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">方便的</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">初始化，</font></font><code class="code-voice">init()</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">不带参数。</font><font style="vertical-align: inherit;">该</font></font><code class="code-voice">init()</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">初始化通过委派跨越到一个新的食品提供了默认的占位符名称</font></font><code class="code-voice">Food</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">类的</font></font><code class="code-voice">init(name: String)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">具有</font></font><code class="code-voice">name</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">的价值</font></font><code class="code-voice">[Unnamed]</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">let</span> <span class="vc">mysteryMeat</span> = <span class="vc">Food</span>()</code></li>
            <li><code class="code-voice"><span class="c">// mysteryMeat's name is "[Unnamed]"</span></code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  层次结构中的第二个类是被</font></font><code class="code-voice">Food</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">调用</font><font style="vertical-align: inherit;">的子类</font></font><code class="code-voice">RecipeIngredient</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">本</font></font><code class="code-voice">RecipeIngredient</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">类机型中的烹饪配方的成分。</font><font style="vertical-align: inherit;">它引入了一个</font></font><code class="code-voice">Int</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">属性</font></font><code class="code-voice">quantity</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">（除了</font></font><code class="code-voice">name</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">它继承</font><font style="vertical-align: inherit;">的</font><font style="vertical-align: inherit;">属性外</font></font><code class="code-voice">Food</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">），并为创建</font></font><code class="code-voice">RecipeIngredient</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">实例</font><font style="vertical-align: inherit;">定义了两个初始化器</font><font style="vertical-align: inherit;">：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">class</span> <span class="vc">RecipeIngredient</span>: <span class="n"><!-- a href="" -->Food<!-- /a --></span> {</code></li>
            <li><code class="code-voice">    <span class="kt">var</span> <span class="vc">quantity</span>: <span class="n"><!-- a href="" -->Int<!-- /a --></span></code></li>
            <li><code class="code-voice">    <span class="kt">init</span>(<span class="vc">name</span>: <span class="n"><!-- a href="" -->String<!-- /a --></span>, <span class="vc">quantity</span>: <span class="n"><!-- a href="" -->Int<!-- /a --></span>) {</code></li>
            <li><code class="code-voice">        <span class="kt">self</span>.<span class="vc">quantity</span> = <span class="vc">quantity</span></code></li>
            <li><code class="code-voice">        <span class="kt">super</span>.<span class="kt">init</span>(<span class="vc">name</span>: <span class="vc">name</span>)</code></li>
            <li><code class="code-voice">    }</code></li>
            <li><code class="code-voice">    <span class="kt">override</span> <span class="kt">convenience</span> <span class="kt">init</span>(<span class="vc">name</span>: <span class="n"><!-- a href="" -->String<!-- /a --></span>) {</code></li>
            <li><code class="code-voice">        <span class="kt">self</span>.<span class="kt">init</span>(<span class="vc">name</span>: <span class="vc">name</span>, <span class="vc">quantity</span>: <span class="m">1</span>)</code></li>
            <li><code class="code-voice">    }</code></li>
            <li><code class="code-voice">}</code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  下图显示了</font></font><code class="code-voice">RecipeIngredient</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">该类</font><font style="vertical-align: inherit;">的初始化链</font><font style="vertical-align: inherit;">：
</font></font></p><figure class="figure">
  
  <span class="caption"></span>
  <img src="./Swift编程语言（Swift 4.1）：初始化_files/initializersExample02_2x.png" alt="image：../Art/initializersExample02_2x.png" width="482" height="286">
</figure><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  该</font></font><code class="code-voice">RecipeIngredient</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">班有一个单一的指定初始化，</font></font><code class="code-voice">init(name: String, quantity: Int)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，它可以用来填充的所有新的属性的</font></font><code class="code-voice">RecipeIngredient</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">实例。</font><font style="vertical-align: inherit;">该初始化器首先将传递的</font></font><code class="code-voice">quantity</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">参数</font><font style="vertical-align: inherit;">分配给</font></font><code class="code-voice">quantity</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">属性，该属性是唯一引入的新属性</font></font><code class="code-voice">RecipeIngredient</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">这样做后，初始化程序将委派给</font><font style="vertical-align: inherit;">该类</font><font style="vertical-align: inherit;">的</font></font><code class="code-voice">init(name: String)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">初始化程序</font></font><code class="code-voice">Food</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">该过程满足</font><font style="vertical-align: inherit;">上述</font></font><span class="x-name"><a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Initialization.html#//apple_ref/doc/uid/TP40014097-CH18-ID220" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH18-ID220" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_64&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">两阶段初始化中的</font></font></a></span><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">安全检查1 </font><font style="vertical-align: inherit;">。
</font></font></p><p class="para">
  <code class="code-voice">RecipeIngredient</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">还定义了一个便利初始值设定项，</font></font><code class="code-voice">init(name: String)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">它用于</font></font><code class="code-voice">RecipeIngredient</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">仅通过名称</font><font style="vertical-align: inherit;">创建一个</font><font style="vertical-align: inherit;">实例。</font><font style="vertical-align: inherit;">这个便捷初始值设定项假定数量</font></font><code class="code-voice">1</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">为</font></font><code class="code-voice">RecipeIngredient</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">没有明确数量的情况下创建的</font><font style="vertical-align: inherit;">任何</font><font style="vertical-align: inherit;">实例。</font><font style="vertical-align: inherit;">此便捷初始值设定程序的定义使</font></font><code class="code-voice">RecipeIngredient</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">创建实例更快更方便，并且在创建多个单个数量的</font></font><code class="code-voice">RecipeIngredient</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">实例</font><font style="vertical-align: inherit;">时避免代码重复</font><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">这个方便初始化器简单地委托给类的指定初始化器，传入一个</font></font><code class="code-voice">quantity</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">值</font></font><code class="code-voice">1</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。
</font></font></p><p class="para"><font style="vertical-align: inherit;"></font><code class="code-voice">init(name: String)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">由提供</font><font style="vertical-align: inherit;">
  的</font><font style="vertical-align: inherit;">便捷初始值</font></font><code class="code-voice">RecipeIngredient</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">设定项与来自</font></font><code class="code-voice">init(name: String)</code> <em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">指定的</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">初始值</font><font style="vertical-align: inherit;">设定项的参数相同</font></font><code class="code-voice">Food</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">由于此便利初始值设定项将从其超类中覆盖指定的初始值设定项，因此必须使用</font></font><code class="code-voice">override</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">修饰符</font><font style="vertical-align: inherit;">进行标记</font><font style="vertical-align: inherit;">（如</font></font><span class="x-name"><a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Initialization.html#//apple_ref/doc/uid/TP40014097-CH18-ID221" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH18-ID221" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_65&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">初始化项继承和覆盖中所述</font></font></a></span><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">）。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  尽管</font></font><code class="code-voice">RecipeIngredient</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">提供了</font></font><code class="code-voice">init(name: String)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">初始化器作为便利初始化器，</font></font><code class="code-voice">RecipeIngredient</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">但它仍然提供了其所有超类的指定初始化器的实现。</font><font style="vertical-align: inherit;">因此，</font></font><code class="code-voice">RecipeIngredient</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">它也会自动继承其所有超类的便利初始值设定项。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  在这个例子中，</font></font><code class="code-voice">RecipeIngredient</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">is </font><font style="vertical-align: inherit;">的超类</font></font><code class="code-voice">Food</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，它有一个简单的初始化器调用</font></font><code class="code-voice">init()</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">这个初始化器因此被继承</font></font><code class="code-voice">RecipeIngredient</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。</font></font><code class="code-voice">init()</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">函数</font><font style="vertical-align: inherit;">的继承版本与版本</font><font style="vertical-align: inherit;">完全相同</font></font><code class="code-voice">Food</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，只是它委托给</font></font><code class="code-voice">RecipeIngredient</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">版本</font></font><code class="code-voice">init(name: String)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">而不是</font></font><code class="code-voice">Food</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">版本。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  所有这三种初始化器都可以用来创建新的</font></font><code class="code-voice">RecipeIngredient</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">实例：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">let</span> <span class="vc">oneMysteryItem</span> = <span class="vc">RecipeIngredient</span>()</code></li>
            <li><code class="code-voice"><span class="kt">let</span> <span class="vc">oneBacon</span> = <span class="vc">RecipeIngredient</span>(<span class="vc">name</span>: <span class="s">"Bacon"</span>)</code></li>
            <li><code class="code-voice"><span class="kt">let</span> <span class="vc">sixEggs</span> = <span class="vc">RecipeIngredient</span>(<span class="vc">name</span>: <span class="s">"Eggs"</span>, <span class="vc">quantity</span>: <span class="m">6</span>)</code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  层次结构中的第三个也是最后一个类是</font></font><code class="code-voice">RecipeIngredient</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">被调用</font><font style="vertical-align: inherit;">的子类</font></font><code class="code-voice">ShoppingListItem</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">该</font></font><code class="code-voice">ShoppingListItem</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">级车型，因为它出现在购物清单配方成分。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  购物清单中的每个项目都以“未购买”开始。</font><font style="vertical-align: inherit;">为了表示这个事实，</font></font><code class="code-voice">ShoppingListItem</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">引入一个名为的布尔属性</font></font><code class="code-voice">purchased</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，默认值为</font></font><code class="code-voice">false</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。</font></font><code class="code-voice">ShoppingListItem</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">还添加了一个计算</font></font><code class="code-voice">description</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">属性，它提供了一个</font></font><code class="code-voice">ShoppingListItem</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">实例</font><font style="vertical-align: inherit;">的文本描述</font><font style="vertical-align: inherit;">：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">class</span> <span class="vc">ShoppingListItem</span>: <span class="n"><!-- a href="" -->RecipeIngredient<!-- /a --></span> {</code></li>
            <li><code class="code-voice">    <span class="kt">var</span> <span class="vc">purchased</span> = <span class="kt">false</span></code></li>
            <li><code class="code-voice">    <span class="kt">var</span> <span class="vc">description</span>: <span class="n"><!-- a href="" -->String<!-- /a --></span> {</code></li>
            <li><code class="code-voice">        <span class="kt">var</span> <span class="vc">output</span> = <span class="s">"</span>\(<span class="vc">quantity</span>)<span class="s"> x </span>\(<span class="vc">name</span>)<span class="s">"</span></code></li>
            <li><code class="code-voice">        <span class="vc">output</span> += <span class="vc">purchased</span> ? <span class="s">" ✔"</span> : <span class="s">" ✘"</span></code></li>
            <li><code class="code-voice">        <span class="kt">return</span> <span class="vc">output</span></code></li>
            <li><code class="code-voice">    }</code></li>
            <li><code class="code-voice">}</code></li>
        </ol>
      </div>
  </div>
</section><div class="note">
  <a name="//apple_ref/doc/uid/TP40014097-CH18-NoLink_140"></a>
  <aside class="aside">
    <p class="aside-title"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">注意
    </font></font></p>
    	<p class="para"><code class="code-voice">ShoppingListItem</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">没有定义一个初始值设定</font></font><code class="code-voice">purchased</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">项</font><font style="vertical-align: inherit;">来提供一个初始值</font><font style="vertical-align: inherit;">，因为购物清单中的项目（如这里建模的）始终始终未被购买。
    	</font></font></p>
    
  </aside>
</div><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  因为它为所引入的所有属性提供了默认值，并且没有定义任何初始化器本身，所以会</font></font><code class="code-voice">ShoppingListItem</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">自动继承</font><font style="vertical-align: inherit;">其超类中的</font></font><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">所有</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">指定和便捷初始化器。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  下图显示了所有三个类的总体初始化链：
</font></font></p><figure class="figure">
  
  <span class="caption"></span>
  <img src="./Swift编程语言（Swift 4.1）：初始化_files/initializersExample03_2x.png" alt="image：../Art/initializersExample03_2x.png" width="482" height="436">
</figure><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  您可以使用全部三种继承的初始化器来创建一个新的</font></font><code class="code-voice">ShoppingListItem</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">实例：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">var</span> <span class="vc">breakfastList</span> = [</code></li>
            <li><code class="code-voice">    <span class="vc">ShoppingListItem</span>(),</code></li>
            <li><code class="code-voice">    <span class="vc">ShoppingListItem</span>(<span class="vc">name</span>: <span class="s">"Bacon"</span>),</code></li>
            <li><code class="code-voice">    <span class="vc">ShoppingListItem</span>(<span class="vc">name</span>: <span class="s">"Eggs"</span>, <span class="vc">quantity</span>: <span class="m">6</span>),</code></li>
            <li><code class="code-voice">]</code></li>
            <li><code class="code-voice"><span class="vc">breakfastList</span>[<span class="m">0</span>].<span class="vc">name</span> = <span class="s">"Orange juice"</span></code></li>
            <li><code class="code-voice"><span class="vc">breakfastList</span>[<span class="m">0</span>].<span class="vc">purchased</span> = <span class="kt">true</span></code></li>
            <li><code class="code-voice"><span class="kt">for</span> <span class="vc">item</span> <span class="kt">in</span> <span class="vc">breakfastList</span> {</code></li>
            <li><code class="code-voice">    <span class="vc">print</span>(<span class="vc">item</span>.<span class="vc">description</span>)</code></li>
            <li><code class="code-voice">}</code></li>
            <li><code class="code-voice"><span class="c">// 1 x Orange juice ✔</span></code></li>
            <li><code class="code-voice"><span class="c">// 1 x Bacon ✘</span></code></li>
            <li><code class="code-voice"><span class="c">// 6 x Eggs ✘</span></code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  在这里，一个新的数组被调用</font></font><code class="code-voice">breakfastList</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">是由一个包含三个新</font></font><code class="code-voice">ShoppingListItem</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">实例</font><font style="vertical-align: inherit;">的数组文字创建的</font><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">数组的类型被推断为</font></font><code class="code-voice">[ShoppingListItem]</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">数组创建完成后，数组</font></font><code class="code-voice">ShoppingListItem</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">起始处</font><font style="vertical-align: inherit;">的名称</font><font style="vertical-align: inherit;">将从中更改为</font></font><code class="code-voice">"[Unnamed]"</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，</font></font><code class="code-voice">"Orange juice"</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">并标记为已购买。</font><font style="vertical-align: inherit;">打印阵列中每个项目的说明显示其默认状态已按预期设置。
</font></font></p>
  
</section>

</section>
<section class="section">
  <a name="//apple_ref/doc/uid/TP40014097-CH18-ID224"></a>
  <h3 class="section-name" tabindex="0"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Failable初始化器</font></font></h3>
  <p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  定义初始化可能失败的类，结构或枚举有时很有用。</font><font style="vertical-align: inherit;">此故障可能由无效的初始化参数值，缺少所需的外部资源或阻止初始化成功的其他条件触发。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  为了处理可能失败的初始化条件，可以将一个或多个failable初始化器定义为类，结构或枚举定义的一部分。</font><font style="vertical-align: inherit;">您通过在</font></font><code class="code-voice">init</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">关键字（</font></font><code class="code-voice">init?</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">）</font><font style="vertical-align: inherit;">后面放置一个问号来编写一个failable初始化程序</font><font style="vertical-align: inherit;">。
</font></font></p><div class="note">
  <a name="//apple_ref/doc/uid/TP40014097-CH18-NoLink_141"></a>
  <aside class="aside">
    <p class="aside-title"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">注意
    </font></font></p>
    	<p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">您不能使用相同的参数类型和名称定义failable和nonfailable初始值设定项。
    	</font></font></p>
    
  </aside>
</div><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  failable初始化器</font><font style="vertical-align: inherit;">为它初始化的类型</font><font style="vertical-align: inherit;">创建一个</font></font><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">可选</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">值。</font><font style="vertical-align: inherit;">您</font></font><code class="code-voice">return nil</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">在可分区的初始化程序中</font><font style="vertical-align: inherit;">写入</font><font style="vertical-align: inherit;">以指示可以触发初始化失败的点。
</font></font></p><div class="note">
  <a name="//apple_ref/doc/uid/TP40014097-CH18-NoLink_142"></a>
  <aside class="aside">
    <p class="aside-title"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">注意
    </font></font></p>
    	<p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">严格地说，初始化器不会返回一个值。</font><font style="vertical-align: inherit;">相反，它们的作用是确保</font></font><code class="code-voice">self</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">在初始化结束时完全正确地初始化。</font><font style="vertical-align: inherit;">虽然您编写</font></font><code class="code-voice">return nil</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">触发初始化失败，但您不使用</font></font><code class="code-voice">return</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">关键字来指示初始化成功。
    	</font></font></p>
    
  </aside>
</div><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  例如，failable初始化器是为数字类型转换实现的。</font><font style="vertical-align: inherit;">为了确保数字类型之间的转换能够精确保持该值，请使用</font></font><code class="code-voice">init(exactly:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">初始值设定项。</font><font style="vertical-align: inherit;">如果类型转换无法保持该值，则初始化器失败。
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">let</span> <span class="vc">wholeNumber</span>: <span class="n"><!-- a href="" -->Double<!-- /a --></span> = <span class="m">12345.0</span></code></li>
            <li><code class="code-voice"><span class="kt">let</span> <span class="vc">pi</span> = <span class="m">3.14159</span></code></li>
            <li><code class="code-voice"> </code></li>
            <li><code class="code-voice"><span class="kt">if</span> <span class="kt">let</span> <span class="vc">valueMaintained</span> = <span class="vc">Int</span>(<span class="vc">exactly</span>: <span class="vc">wholeNumber</span>) {</code></li>
            <li><code class="code-voice">    <span class="vc">print</span>(<span class="s">"</span>\(<span class="vc">wholeNumber</span>)<span class="s"> conversion to Int maintains value of </span>\(<span class="vc">valueMaintained</span>)<span class="s">"</span>)</code></li>
            <li><code class="code-voice">}</code></li>
            <li><code class="code-voice"><span class="c">// Prints "12345.0 conversion to Int maintains value of 12345"</span></code></li>
            <li><code class="code-voice"> </code></li>
            <li><code class="code-voice"><span class="kt">let</span> <span class="vc">valueChanged</span> = <span class="vc">Int</span>(<span class="vc">exactly</span>: <span class="vc">pi</span>)</code></li>
            <li><code class="code-voice"><span class="c">// valueChanged is of type Int?, not Int</span></code></li>
            <li><code class="code-voice"> </code></li>
            <li><code class="code-voice"><span class="kt">if</span> <span class="vc">valueChanged</span> == <span class="kt">nil</span> {</code></li>
            <li><code class="code-voice">    <span class="vc">print</span>(<span class="s">"</span>\(<span class="vc">pi</span>)<span class="s"> conversion to Int does not maintain value"</span>)</code></li>
            <li><code class="code-voice">}</code></li>
            <li><code class="code-voice"><span class="c">// Prints "3.14159 conversion to Int does not maintain value"</span></code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  下面的例子定义了一个称为的结构</font></font><code class="code-voice">Animal</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，其中</font><font style="vertical-align: inherit;">调用</font><font style="vertical-align: inherit;">了一个常量</font></font><code class="code-voice">String</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">属性</font></font><code class="code-voice">species</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">该</font></font><code class="code-voice">Animal</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">结构还定义了一个带有单个参数的可分区初始化程序</font></font><code class="code-voice">species</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">此初始</font></font><code class="code-voice">species</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">值设定项会</font><font style="vertical-align: inherit;">检查</font><font style="vertical-align: inherit;">传递给初始值设定项的值是否为空字符串。</font><font style="vertical-align: inherit;">如果找到空字符串，则会触发初始化失败。</font><font style="vertical-align: inherit;">否则，该</font></font><code class="code-voice">species</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">属性的值将被设置，并且初始化成功：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">struct</span> <span class="vc">Animal</span> {</code></li>
            <li><code class="code-voice">    <span class="kt">let</span> <span class="vc">species</span>: <span class="n"><!-- a href="" -->String<!-- /a --></span></code></li>
            <li><code class="code-voice">    <span class="kt">init</span>?(<span class="vc">species</span>: <span class="n"><!-- a href="" -->String<!-- /a --></span>) {</code></li>
            <li><code class="code-voice">        <span class="kt">if</span> <span class="vc">species</span>.<span class="vc">isEmpty</span> { <span class="kt">return</span> <span class="kt">nil</span> }</code></li>
            <li><code class="code-voice">        <span class="kt">self</span>.<span class="vc">species</span> = <span class="vc">species</span></code></li>
            <li><code class="code-voice">    }</code></li>
            <li><code class="code-voice">}</code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  你可以使用这个failable初始化器尝试初始化一个新的</font></font><code class="code-voice">Animal</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">实例并检查初始化是否成功：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">let</span> <span class="vc">someCreature</span> = <span class="vc">Animal</span>(<span class="vc">species</span>: <span class="s">"Giraffe"</span>)</code></li>
            <li><code class="code-voice"><span class="c">// someCreature is of type Animal?, not Animal</span></code></li>
            <li><code class="code-voice"> </code></li>
            <li><code class="code-voice"><span class="kt">if</span> <span class="kt">let</span> <span class="vc">giraffe</span> = <span class="vc">someCreature</span> {</code></li>
            <li><code class="code-voice">    <span class="vc">print</span>(<span class="s">"An animal was initialized with a species of </span>\(<span class="vc">giraffe</span>.<span class="vc">species</span>)<span class="s">"</span>)</code></li>
            <li><code class="code-voice">}</code></li>
            <li><code class="code-voice"><span class="c">// Prints "An animal was initialized with a species of Giraffe"</span></code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  如果将空字符串值传递给可分区的初始化程序的</font></font><code class="code-voice">species</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">参数，则初始化程序会触发初始化失败：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">let</span> <span class="vc">anonymousCreature</span> = <span class="vc">Animal</span>(<span class="vc">species</span>: <span class="s">""</span>)</code></li>
            <li><code class="code-voice"><span class="c">// anonymousCreature is of type Animal?, not Animal</span></code></li>
            <li><code class="code-voice"> </code></li>
            <li><code class="code-voice"><span class="kt">if</span> <span class="vc">anonymousCreature</span> == <span class="kt">nil</span> {</code></li>
            <li><code class="code-voice">    <span class="vc">print</span>(<span class="s">"The anonymous creature could not be initialized"</span>)</code></li>
            <li><code class="code-voice">}</code></li>
            <li><code class="code-voice"><span class="c">// Prints "The anonymous creature could not be initialized"</span></code></li>
        </ol>
      </div>
  </div>
</section><div class="note">
  <a name="//apple_ref/doc/uid/TP40014097-CH18-NoLink_143"></a>
  <aside class="aside">
    <p class="aside-title"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">注意
    </font></font></p>
    	<p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">检查空字符串值（例如</font></font><code class="code-voice">""</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">而不是</font></font><code class="code-voice">"Giraffe"</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">）与检查</font></font><code class="code-voice">nil</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">以指示缺少</font></font><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">可选</font></font></em> <code class="code-voice">String</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">值不同。</font><font style="vertical-align: inherit;">在上面的例子中，一个空字符串（</font></font><code class="code-voice">""</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">）是一个有效的非自选的</font></font><code class="code-voice">String</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">然而，动物将空串作为其</font></font><code class="code-voice">species</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">财产</font><font style="vertical-align: inherit;">价值是不合适的</font><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">为了对这个限制进行建模，如果找到空字符串，则failable初始化程序会触发初始化失败。
    	</font></font></p>
    
  </aside>
</div>
  <section class="section">
  <a name="//apple_ref/doc/uid/TP40014097-CH18-ID225"></a>
  <h3 class="section-name" tabindex="0"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">枚举的Failable初始化器</font></font></h3>
  <p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  您可以使用failable初始化程序根据一个或多个参数选择适当的枚举个案。</font><font style="vertical-align: inherit;">如果提供的参数与适当的枚举大小写不匹配，则初始化程序可能会失败。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  下面的例子定义称为枚举</font></font><code class="code-voice">TemperatureUnit</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，具有三种可能的状态（</font></font><code class="code-voice">kelvin</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，</font></font><code class="code-voice">celsius</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，和</font></font><code class="code-voice">fahrenheit</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">）。</font><font style="vertical-align: inherit;">failable初始化器用于为</font></font><code class="code-voice">Character</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">代表温度符号</font><font style="vertical-align: inherit;">的</font><font style="vertical-align: inherit;">值</font><font style="vertical-align: inherit;">找到适当的枚举情况</font><font style="vertical-align: inherit;">：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">enum</span> <span class="vc">TemperatureUnit</span> {</code></li>
            <li><code class="code-voice">    <span class="kt">case</span> <span class="vc">kelvin</span>, <span class="vc">celsius</span>, <span class="vc">fahrenheit</span></code></li>
            <li><code class="code-voice">    <span class="kt">init</span>?(<span class="vc">symbol</span>: <span class="n"><!-- a href="" -->Character<!-- /a --></span>) {</code></li>
            <li><code class="code-voice">        <span class="kt">switch</span> <span class="vc">symbol</span> {</code></li>
            <li><code class="code-voice">        <span class="kt">case</span> <span class="s">"K"</span>:</code></li>
            <li><code class="code-voice">            <span class="kt">self</span> = .<span class="vc">kelvin</span></code></li>
            <li><code class="code-voice">        <span class="kt">case</span> <span class="s">"C"</span>:</code></li>
            <li><code class="code-voice">            <span class="kt">self</span> = .<span class="vc">celsius</span></code></li>
            <li><code class="code-voice">        <span class="kt">case</span> <span class="s">"F"</span>:</code></li>
            <li><code class="code-voice">            <span class="kt">self</span> = .<span class="vc">fahrenheit</span></code></li>
            <li><code class="code-voice">        <span class="kt">default</span>:</code></li>
            <li><code class="code-voice">            <span class="kt">return</span> <span class="kt">nil</span></code></li>
            <li><code class="code-voice">        }</code></li>
            <li><code class="code-voice">    }</code></li>
            <li><code class="code-voice">}</code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  您可以使用这个failable初始化程序为三种可能的状态选择适当的枚举情况，并在参数不符合以下任何一种状态时导致初始化失败：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">let</span> <span class="vc">fahrenheitUnit</span> = <span class="vc">TemperatureUnit</span>(<span class="vc">symbol</span>: <span class="s">"F"</span>)</code></li>
            <li><code class="code-voice"><span class="kt">if</span> <span class="vc">fahrenheitUnit</span> != <span class="kt">nil</span> {</code></li>
            <li><code class="code-voice">    <span class="vc">print</span>(<span class="s">"This is a defined temperature unit, so initialization succeeded."</span>)</code></li>
            <li><code class="code-voice">}</code></li>
            <li><code class="code-voice"><span class="c">// Prints "This is a defined temperature unit, so initialization succeeded."</span></code></li>
            <li><code class="code-voice"> </code></li>
            <li><code class="code-voice"><span class="kt">let</span> <span class="vc">unknownUnit</span> = <span class="vc">TemperatureUnit</span>(<span class="vc">symbol</span>: <span class="s">"X"</span>)</code></li>
            <li><code class="code-voice"><span class="kt">if</span> <span class="vc">unknownUnit</span> == <span class="kt">nil</span> {</code></li>
            <li><code class="code-voice">    <span class="vc">print</span>(<span class="s">"This is not a defined temperature unit, so initialization failed."</span>)</code></li>
            <li><code class="code-voice">}</code></li>
            <li><code class="code-voice"><span class="c">// Prints "This is not a defined temperature unit, so initialization failed."</span></code></li>
        </ol>
      </div>
  </div>
</section>
  
</section>
<section class="section">
  <a name="//apple_ref/doc/uid/TP40014097-CH18-ID226"></a>
  <h3 class="section-name" tabindex="0"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">具有原始值的枚举的Failable初始化器</font></font></h3>
  <p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  具有原始值的枚举自动接收可失败的初始化程序，</font></font><code class="code-voice">init?(rawValue:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">该程序采用一个称为</font></font><code class="code-voice">rawValue</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">相应原始值类型</font><font style="vertical-align: inherit;">的参数</font><font style="vertical-align: inherit;">，并在找到匹配枚举的情况下选择一个匹配枚举的情况，如果不存在匹配值，则触发初始化失败。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  您可以重写</font></font><code class="code-voice">TemperatureUnit</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">上面</font><font style="vertical-align: inherit;">的</font><font style="vertical-align: inherit;">示例以使用类型的原始值</font></font><code class="code-voice">Character</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">并利用</font></font><code class="code-voice">init?(rawValue:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">初始化程序：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">enum</span> <span class="vc">TemperatureUnit</span>: <span class="n"><!-- a href="" -->Character<!-- /a --></span> {</code></li>
            <li><code class="code-voice">    <span class="kt">case</span> <span class="vc">kelvin</span> = <span class="s">"K"</span>, <span class="vc">celsius</span> = <span class="s">"C"</span>, <span class="vc">fahrenheit</span> = <span class="s">"F"</span></code></li>
            <li><code class="code-voice">}</code></li>
            <li><code class="code-voice"> </code></li>
            <li><code class="code-voice"><span class="kt">let</span> <span class="vc">fahrenheitUnit</span> = <span class="vc">TemperatureUnit</span>(<span class="vc">rawValue</span>: <span class="s">"F"</span>)</code></li>
            <li><code class="code-voice"><span class="kt">if</span> <span class="vc">fahrenheitUnit</span> != <span class="kt">nil</span> {</code></li>
            <li><code class="code-voice">    <span class="vc">print</span>(<span class="s">"This is a defined temperature unit, so initialization succeeded."</span>)</code></li>
            <li><code class="code-voice">}</code></li>
            <li><code class="code-voice"><span class="c">// Prints "This is a defined temperature unit, so initialization succeeded."</span></code></li>
            <li><code class="code-voice"> </code></li>
            <li><code class="code-voice"><span class="kt">let</span> <span class="vc">unknownUnit</span> = <span class="vc">TemperatureUnit</span>(<span class="vc">rawValue</span>: <span class="s">"X"</span>)</code></li>
            <li><code class="code-voice"><span class="kt">if</span> <span class="vc">unknownUnit</span> == <span class="kt">nil</span> {</code></li>
            <li><code class="code-voice">    <span class="vc">print</span>(<span class="s">"This is not a defined temperature unit, so initialization failed."</span>)</code></li>
            <li><code class="code-voice">}</code></li>
            <li><code class="code-voice"><span class="c">// Prints "This is not a defined temperature unit, so initialization failed."</span></code></li>
        </ol>
      </div>
  </div>
</section>
  
</section>
<section class="section">
  <a name="//apple_ref/doc/uid/TP40014097-CH18-ID228"></a>
  <h3 class="section-name" tabindex="0"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">初始化失败的传播</font></font></h3>
  <p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  类，结构或枚举的failable初始值设定项可以从相同的类，结构或枚举中委托给另一个failable初始值设定项。</font><font style="vertical-align: inherit;">同样，一个子类failable初始化器可以委托给一个超类failable初始化器。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  在任何一种情况下，如果委派给其他初始化程序导致初始化失败，则整个初始化过程将立即失败，并且不会执行进一步的初始化代码。
</font></font></p><div class="note">
  <a name="//apple_ref/doc/uid/TP40014097-CH18-NoLink_144"></a>
  <aside class="aside">
    <p class="aside-title"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">注意
    </font></font></p>
    	<p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">failable初始化程序也可以委托给一个不可破解的初始化程序。</font><font style="vertical-align: inherit;">如果您需要将潜在的故障状态添加到现有的初始化过程，否则不会失败，请使用此方法。
    	</font></font></p>
    
  </aside>
</div><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  下面的例子定义了一个</font></font><code class="code-voice">Product</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">被调用</font><font style="vertical-align: inherit;">的子类</font></font><code class="code-voice">CartItem</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">该</font></font><code class="code-voice">CartItem</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">课程在线购物车中模拟一个项目。</font></font><code class="code-voice">CartItem</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">引入一个存储的常量属性，</font></font><code class="code-voice">quantity</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">并确保该属性的值至少为</font></font><code class="code-voice">1</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">class</span> <span class="vc">Product</span> {</code></li>
            <li><code class="code-voice">    <span class="kt">let</span> <span class="vc">name</span>: <span class="n"><!-- a href="" -->String<!-- /a --></span></code></li>
            <li><code class="code-voice">    <span class="kt">init</span>?(<span class="vc">name</span>: <span class="n"><!-- a href="" -->String<!-- /a --></span>) {</code></li>
            <li><code class="code-voice">        <span class="kt">if</span> <span class="vc">name</span>.<span class="vc">isEmpty</span> { <span class="kt">return</span> <span class="kt">nil</span> }</code></li>
            <li><code class="code-voice">        <span class="kt">self</span>.<span class="vc">name</span> = <span class="vc">name</span></code></li>
            <li><code class="code-voice">    }</code></li>
            <li><code class="code-voice">}</code></li>
            <li><code class="code-voice"> </code></li>
            <li><code class="code-voice"><span class="kt">class</span> <span class="vc">CartItem</span>: <span class="n"><!-- a href="" -->Product<!-- /a --></span> {</code></li>
            <li><code class="code-voice">    <span class="kt">let</span> <span class="vc">quantity</span>: <span class="n"><!-- a href="" -->Int<!-- /a --></span></code></li>
            <li><code class="code-voice">    <span class="kt">init</span>?(<span class="vc">name</span>: <span class="n"><!-- a href="" -->String<!-- /a --></span>, <span class="vc">quantity</span>: <span class="n"><!-- a href="" -->Int<!-- /a --></span>) {</code></li>
            <li><code class="code-voice">        <span class="kt">if</span> <span class="vc">quantity</span> &lt; <span class="m">1</span> { <span class="kt">return</span> <span class="kt">nil</span> }</code></li>
            <li><code class="code-voice">        <span class="kt">self</span>.<span class="vc">quantity</span> = <span class="vc">quantity</span></code></li>
            <li><code class="code-voice">        <span class="kt">super</span>.<span class="kt">init</span>(<span class="vc">name</span>: <span class="vc">name</span>)</code></li>
            <li><code class="code-voice">    }</code></li>
            <li><code class="code-voice">}</code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"></font><code class="code-voice">CartItem</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">通过验证它已收到一个</font><font style="vertical-align: inherit;">或更多</font><font style="vertical-align: inherit;">的</font></font><code class="code-voice">quantity</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">值</font><font style="vertical-align: inherit;">
  来</font><font style="vertical-align: inherit;">启动</font><font style="vertical-align: inherit;">failable初始化程序</font></font><code class="code-voice">1</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">如果</font></font><code class="code-voice">quantity</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">无效，则整个初始化过程立即失败，并且不会执行进一步的初始化代码。</font><font style="vertical-align: inherit;">同样，用于</font></font><code class="code-voice">Product</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">检查</font></font><code class="code-voice">name</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">值</font><font style="vertical-align: inherit;">的failable初始化</font><font style="vertical-align: inherit;">程序，如果</font></font><code class="code-voice">name</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">是空字符串</font><font style="vertical-align: inherit;">，则初始化程序立即失败</font><font style="vertical-align: inherit;">。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  如果您</font></font><code class="code-voice">CartItem</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">使用非空名称和数量</font></font><code class="code-voice">1</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">或更多</font><font style="vertical-align: inherit;">的数量</font><font style="vertical-align: inherit;">创建</font><font style="vertical-align: inherit;">实例</font><font style="vertical-align: inherit;">，则初始化会成功：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">if</span> <span class="kt">let</span> <span class="vc">twoSocks</span> = <span class="vc">CartItem</span>(<span class="vc">name</span>: <span class="s">"sock"</span>, <span class="vc">quantity</span>: <span class="m">2</span>) {</code></li>
            <li><code class="code-voice">    <span class="vc">print</span>(<span class="s">"Item: </span>\(<span class="vc">twoSocks</span>.<span class="vc">name</span>)<span class="s">, quantity: </span>\(<span class="vc">twoSocks</span>.<span class="vc">quantity</span>)<span class="s">"</span>)</code></li>
            <li><code class="code-voice">}</code></li>
            <li><code class="code-voice"><span class="c">// Prints "Item: sock, quantity: 2"</span></code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  如果您尝试创建</font><font style="vertical-align: inherit;">值为的</font></font><code class="code-voice">CartItem</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">实例</font><font style="vertical-align: inherit;">，则</font><font style="vertical-align: inherit;">初始化程序会导致初始化失败：
</font></font><code class="code-voice">quantity</code><font style="vertical-align: inherit;"></font><code class="code-voice">0</code><font style="vertical-align: inherit;"></font><code class="code-voice">CartItem</code><font style="vertical-align: inherit;"></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">if</span> <span class="kt">let</span> <span class="vc">zeroShirts</span> = <span class="vc">CartItem</span>(<span class="vc">name</span>: <span class="s">"shirt"</span>, <span class="vc">quantity</span>: <span class="m">0</span>) {</code></li>
            <li><code class="code-voice">    <span class="vc">print</span>(<span class="s">"Item: </span>\(<span class="vc">zeroShirts</span>.<span class="vc">name</span>)<span class="s">, quantity: </span>\(<span class="vc">zeroShirts</span>.<span class="vc">quantity</span>)<span class="s">"</span>)</code></li>
            <li><code class="code-voice">} <span class="kt">else</span> {</code></li>
            <li><code class="code-voice">    <span class="vc">print</span>(<span class="s">"Unable to initialize zero shirts"</span>)</code></li>
            <li><code class="code-voice">}</code></li>
            <li><code class="code-voice"><span class="c">// Prints "Unable to initialize zero shirts"</span></code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  同样，如果您尝试</font></font><code class="code-voice">CartItem</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">使用空</font></font><code class="code-voice">name</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">值</font><font style="vertical-align: inherit;">创建</font><font style="vertical-align: inherit;">实例</font><font style="vertical-align: inherit;">，则超类</font></font><code class="code-voice">Product</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">初始化程序会导致初始化失败：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">if</span> <span class="kt">let</span> <span class="vc">oneUnnamed</span> = <span class="vc">CartItem</span>(<span class="vc">name</span>: <span class="s">""</span>, <span class="vc">quantity</span>: <span class="m">1</span>) {</code></li>
            <li><code class="code-voice">    <span class="vc">print</span>(<span class="s">"Item: </span>\(<span class="vc">oneUnnamed</span>.<span class="vc">name</span>)<span class="s">, quantity: </span>\(<span class="vc">oneUnnamed</span>.<span class="vc">quantity</span>)<span class="s">"</span>)</code></li>
            <li><code class="code-voice">} <span class="kt">else</span> {</code></li>
            <li><code class="code-voice">    <span class="vc">print</span>(<span class="s">"Unable to initialize one unnamed product"</span>)</code></li>
            <li><code class="code-voice">}</code></li>
            <li><code class="code-voice"><span class="c">// Prints "Unable to initialize one unnamed product"</span></code></li>
        </ol>
      </div>
  </div>
</section>
  
</section>
<section class="section">
  <a name="//apple_ref/doc/uid/TP40014097-CH18-ID229"></a>
  <h3 class="section-name" tabindex="0"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">覆盖失败的初始化程序</font></font></h3>
  <p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  就像其他任何初始化器一样，您可以在子类中覆盖超类failable初始化器。</font><font style="vertical-align: inherit;">或者，您可以使用子类</font></font><em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">非易失性</font></font></em><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">初始值设定项</font><font style="vertical-align: inherit;">来覆盖超类failable初始化</font><font style="vertical-align: inherit;">程序。</font><font style="vertical-align: inherit;">这使您可以定义初始化无法失败的子类，即使允许超类的初始化失败。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  请注意，如果使用非破坏子类初始值设定项覆盖failable超类初始值设定项，那么委托给超类初始值设定项的唯一方法是强制 - 解包failable超类初始值设定项的结果。
</font></font></p><div class="note">
  <a name="//apple_ref/doc/uid/TP40014097-CH18-NoLink_145"></a>
  <aside class="aside">
    <p class="aside-title"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">注意
    </font></font></p>
    	<p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">你可以用一个不可破解的初始化器重写一个可以破坏的初始化器，但不能用其他方式。
    	</font></font></p>
    
  </aside>
</div><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  下面的例子定义了一个叫做的类</font></font><code class="code-voice">Document</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">这个类建模一个文档，该文档可以</font></font><code class="code-voice">name</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">使用一个非空字符串值</font><font style="vertical-align: inherit;">的</font><font style="vertical-align: inherit;">属性</font><font style="vertical-align: inherit;">进行初始化</font></font><code class="code-voice">nil</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，但不能为空字符串：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">class</span> <span class="vc">Document</span> {</code></li>
            <li><code class="code-voice">    <span class="kt">var</span> <span class="vc">name</span>: <span class="n"><!-- a href="" -->String<!-- /a --></span>?</code></li>
            <li><code class="code-voice">    <span class="c">// this initializer creates a document with a nil name value</span></code></li>
            <li><code class="code-voice">    <span class="kt">init</span>() {}</code></li>
            <li><code class="code-voice">    <span class="c">// this initializer creates a document with a nonempty name value</span></code></li>
            <li><code class="code-voice">    <span class="kt">init</span>?(<span class="vc">name</span>: <span class="n"><!-- a href="" -->String<!-- /a --></span>) {</code></li>
            <li><code class="code-voice">        <span class="kt">if</span> <span class="vc">name</span>.<span class="vc">isEmpty</span> { <span class="kt">return</span> <span class="kt">nil</span> }</code></li>
            <li><code class="code-voice">        <span class="kt">self</span>.<span class="vc">name</span> = <span class="vc">name</span></code></li>
            <li><code class="code-voice">    }</code></li>
            <li><code class="code-voice">}</code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  下一个例子定义了一个</font></font><code class="code-voice">Document</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">被调用</font><font style="vertical-align: inherit;">的子类</font></font><code class="code-voice">AutomaticallyNamedDocument</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">这个</font></font><code class="code-voice">AutomaticallyNamedDocument</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">子类覆盖了两个由它引入的指定初始值设定项</font></font><code class="code-voice">Document</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">如果实例初始化时没有名称，或者如果将空字符串传递给</font></font><code class="code-voice">AutomaticallyNamedDocument</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">初始</font></font><code class="code-voice">name</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">值设定项，</font><font style="vertical-align: inherit;">这些重写确保</font><font style="vertical-align: inherit;">实例具有初始</font><font style="vertical-align: inherit;">值</font><font style="vertical-align: inherit;">：
</font></font><code class="code-voice">"[Untitled]"</code><font style="vertical-align: inherit;"></font><code class="code-voice">init(name:)</code><font style="vertical-align: inherit;"></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">class</span> <span class="vc">AutomaticallyNamedDocument</span>: <span class="n"><!-- a href="" -->Document<!-- /a --></span> {</code></li>
            <li><code class="code-voice">    <span class="kt">override</span> <span class="kt">init</span>() {</code></li>
            <li><code class="code-voice">        <span class="kt">super</span>.<span class="kt">init</span>()</code></li>
            <li><code class="code-voice">        <span class="kt">self</span>.<span class="vc">name</span> = <span class="s">"[Untitled]"</span></code></li>
            <li><code class="code-voice">    }</code></li>
            <li><code class="code-voice">    <span class="kt">override</span> <span class="kt">init</span>(<span class="vc">name</span>: <span class="n"><!-- a href="" -->String<!-- /a --></span>) {</code></li>
            <li><code class="code-voice">        <span class="kt">super</span>.<span class="kt">init</span>()</code></li>
            <li><code class="code-voice">        <span class="kt">if</span> <span class="vc">name</span>.<span class="vc">isEmpty</span> {</code></li>
            <li><code class="code-voice">            <span class="kt">self</span>.<span class="vc">name</span> = <span class="s">"[Untitled]"</span></code></li>
            <li><code class="code-voice">        } <span class="kt">else</span> {</code></li>
            <li><code class="code-voice">            <span class="kt">self</span>.<span class="vc">name</span> = <span class="vc">name</span></code></li>
            <li><code class="code-voice">        }</code></li>
            <li><code class="code-voice">    }</code></li>
            <li><code class="code-voice">}</code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  将</font></font><code class="code-voice">AutomaticallyNamedDocument</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">覆盖其超类的failable </font></font><code class="code-voice">init?(name:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">与nonfailable初始化</font></font><code class="code-voice">init(name:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">初始化。</font><font style="vertical-align: inherit;">由于</font></font><code class="code-voice">AutomaticallyNamedDocument</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">用空字符串大小写处理的方式不同于其超类，因此它的初始化程序不需要失败，因此它提供了初始化程序的非破坏版本。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  您可以在初始化程序中使用强制解包来从超类调用failable初始化程序，作为实现子类的非破坏初始化程序的一部分。</font><font style="vertical-align: inherit;">例如，</font></font><code class="code-voice">UntitledDocument</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">下面</font><font style="vertical-align: inherit;">的</font><font style="vertical-align: inherit;">子类总是被命名的</font></font><code class="code-voice">"[Untitled]"</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，并且它</font></font><code class="code-voice">init(name:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">在初始化期间</font><font style="vertical-align: inherit;">使用</font><font style="vertical-align: inherit;">它超类中</font><font style="vertical-align: inherit;">的failable </font><font style="vertical-align: inherit;">初始化器。
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">class</span> <span class="vc">UntitledDocument</span>: <span class="n"><!-- a href="" -->Document<!-- /a --></span> {</code></li>
            <li><code class="code-voice">    <span class="kt">override</span> <span class="kt">init</span>() {</code></li>
            <li><code class="code-voice">        <span class="kt">super</span>.<span class="kt">init</span>(<span class="vc">name</span>: <span class="s">"[Untitled]"</span>)!</code></li>
            <li><code class="code-voice">    }</code></li>
            <li><code class="code-voice">}</code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  在这种情况下，如果</font></font><code class="code-voice">init(name:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">超类</font><font style="vertical-align: inherit;">的</font><font style="vertical-align: inherit;">初始化程序曾以空字符串作为名称被调用，则强制解包操作将导致运行时错误。</font><font style="vertical-align: inherit;">但是，因为它是用字符串常量调用的，所以可以看到初始化程序不会失败，因此在这种情况下不会发生运行时错误。
</font></font></p>
  
</section>
<section class="section">
  <a name="//apple_ref/doc/uid/TP40014097-CH18-ID230"></a>
  <h3 class="section-name" tabindex="0"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">init！</font><font style="vertical-align: inherit;">Failable初始化程序</font></font></h3>
  <p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  您通常会定义一个failable初始化程序，通过在</font></font><code class="code-voice">init</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">关键字（</font></font><code class="code-voice">init?</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">）</font><font style="vertical-align: inherit;">后面放置一个问号来创建适当类型的可选实例</font><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">或者，您可以定义一个可分区的初始化程序，以创建适当类型的隐式解包可选实例。</font><font style="vertical-align: inherit;">通过在</font></font><code class="code-voice">init</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">关键字（</font></font><code class="code-voice">init!</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">）</font><font style="vertical-align: inherit;">后面放置感叹号</font><font style="vertical-align: inherit;">而不是</font><font style="vertical-align: inherit;">问号来做到这一点</font><font style="vertical-align: inherit;">。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  您可以从中</font></font><code class="code-voice">init?</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">进行</font><font style="vertical-align: inherit;">委托，</font></font><code class="code-voice">init!</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">反之亦然，您可以覆盖</font></font><code class="code-voice">init?</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，</font></font><code class="code-voice">init!</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">反之亦然。</font><font style="vertical-align: inherit;">你也可以从</font></font><code class="code-voice">init</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">to </font><font style="vertical-align: inherit;">委托</font></font><code class="code-voice">init!</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，虽然这样做会触发一个断言，如果</font></font><code class="code-voice">init!</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">初始化器导致初始化失败。
</font></font></p>
  
</section>

</section>
<section class="section">
  <a name="//apple_ref/doc/uid/TP40014097-CH18-ID231"></a>
  <h3 class="section-name" tabindex="0"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">必需的初始化器</font></font></h3>
  <p class="para"><font style="vertical-align: inherit;"></font><code class="code-voice">required</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">在定义类初始化程序之前</font><font style="vertical-align: inherit;">
  写入</font><font style="vertical-align: inherit;">修饰符，以指示类的每个子类都必须实现该初始化程序：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">class</span> <span class="vc">SomeClass</span> {</code></li>
            <li><code class="code-voice">    <span class="kt">required</span> <span class="kt">init</span>() {</code></li>
            <li><code class="code-voice">        <span class="c">// initializer implementation goes here</span></code></li>
            <li><code class="code-voice">    }</code></li>
            <li><code class="code-voice">}</code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  您还必须</font></font><code class="code-voice">required</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">在所需初始化程序的每个子类实现之前</font><font style="vertical-align: inherit;">编写</font><font style="vertical-align: inherit;">修饰符，以指示初始化程序的要求适用于链中的其他子类。</font></font><code class="code-voice">override</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">覆盖所需的指定初始化程序时，</font><font style="vertical-align: inherit;">不要编写</font><font style="vertical-align: inherit;">修饰符：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">class</span> <span class="vc">SomeSubclass</span>: <span class="n"><!-- a href="" -->SomeClass<!-- /a --></span> {</code></li>
            <li><code class="code-voice">    <span class="kt">required</span> <span class="kt">init</span>() {</code></li>
            <li><code class="code-voice">        <span class="c">// subclass implementation of the required initializer goes here</span></code></li>
            <li><code class="code-voice">    }</code></li>
            <li><code class="code-voice">}</code></li>
        </ol>
      </div>
  </div>
</section><div class="note">
  <a name="//apple_ref/doc/uid/TP40014097-CH18-NoLink_146"></a>
  <aside class="aside">
    <p class="aside-title"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">注意
    </font></font></p>
    	<p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">如果您可以通过继承的初始化程序满足要求，则不必提供必需的初始化程序的显式实现。
    	</font></font></p>
    
  </aside>
</div>
  
</section>
<section class="section">
  <a name="//apple_ref/doc/uid/TP40014097-CH18-ID232"></a>
  <h3 class="section-name" tabindex="0"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">使用闭包或函数设置默认属性值</font></font></h3>
  <p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  如果存储属性的默认值需要一些定制或设置，则可以使用闭包或全局函数为该属性提供定制的默认值。</font><font style="vertical-align: inherit;">只要属性所属类型的新实例被初始化，就调用闭包或函数，并将其返回值指定为属性的默认值。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  这些类型的闭包或函数通常会创建与该属性相同类型的临时值，定制该值来表示所需的初始状态，然后返回该临时值以用作属性的默认值。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  以下是关于如何使用闭包来提供默认属性值的框架大纲：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">class</span> <span class="vc">SomeClass</span> {</code></li>
            <li><code class="code-voice">    <span class="kt">let</span> <span class="vc">someProperty</span>: <span class="n"><!-- a href="" -->SomeType<!-- /a --></span> = {</code></li>
            <li><code class="code-voice">        <span class="c">// create a default value for someProperty inside this closure</span></code></li>
            <li><code class="code-voice">        <span class="c">// someValue must be of the same type as SomeType</span></code></li>
            <li><code class="code-voice">        <span class="kt">return</span> <span class="vc">someValue</span></code></li>
            <li><code class="code-voice">    }()</code></li>
            <li><code class="code-voice">}</code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  请注意，封闭的最后一个大括号后面是一对空括号。</font><font style="vertical-align: inherit;">这告诉Swift立即执行关闭。</font><font style="vertical-align: inherit;">如果省略这些圆括号，则试图将闭包本身分配给该属性，而不是闭包的返回值。
</font></font></p><div class="note">
  <a name="//apple_ref/doc/uid/TP40014097-CH18-NoLink_147"></a>
  <aside class="aside">
    <p class="aside-title"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">注意
    </font></font></p>
    	<p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">如果您使用闭包来初始化属性，请记住，在执行闭包的位置，实例的其余部分尚未初始化。</font><font style="vertical-align: inherit;">这意味着即使这些属性具有默认值，您也无法从闭包中访问任何其他属性值。</font><font style="vertical-align: inherit;">您也不能使用隐式</font></font><code class="code-voice">self</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">属性，或者调用任何实例的方法。
    	</font></font></p>
    
  </aside>
</div><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  下面的例子定义了一个叫做的结构</font></font><code class="code-voice">Chessboard</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，它模拟棋盘的棋盘。</font><font style="vertical-align: inherit;">国际象棋在8×8的棋盘上进行，黑白棋子交替出现。
</font></font></p><figure class="figure">
  
  <span class="caption"></span>
  <img src="./Swift编程语言（Swift 4.1）：初始化_files/chessBoard_2x.png" alt="image：../Art/chessBoard_2x.png" width="230" height="230">
</figure><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  为了表示这个游戏板，该</font></font><code class="code-voice">Chessboard</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">结构有一个叫做的属性</font></font><code class="code-voice">boardColors</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，它是一个64 </font></font><code class="code-voice">Bool</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">值</font><font style="vertical-align: inherit;">的数组</font><font style="vertical-align: inherit;">。</font></font><code class="code-voice">true</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">数组中的</font><font style="vertical-align: inherit;">值</font><font style="vertical-align: inherit;">表示黑色方块，值</font></font><code class="code-voice">false</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">表示白色方块。</font><font style="vertical-align: inherit;">数组中的第一项表示棋盘上的左上角，数组中的最后一项表示棋盘上的右下角。
</font></font></p><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  该</font></font><code class="code-voice">boardColors</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">数组使用闭包进行初始化以设置其颜色值：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">struct</span> <span class="vc">Chessboard</span> {</code></li>
            <li><code class="code-voice">    <span class="kt">let</span> <span class="vc">boardColors</span>: [<span class="n"><!-- a href="" -->Bool<!-- /a --></span>] = {</code></li>
            <li><code class="code-voice">        <span class="kt">var</span> <span class="vc">temporaryBoard</span> = [<span class="vc">Bool</span>]()</code></li>
            <li><code class="code-voice">        <span class="kt">var</span> <span class="vc">isBlack</span> = <span class="kt">false</span></code></li>
            <li><code class="code-voice">        <span class="kt">for</span> <span class="vc">i</span> <span class="kt">in</span> <span class="m">1</span>...<span class="m">8</span> {</code></li>
            <li><code class="code-voice">            <span class="kt">for</span> <span class="vc">j</span> <span class="kt">in</span> <span class="m">1</span>...<span class="m">8</span> {</code></li>
            <li><code class="code-voice">                <span class="vc">temporaryBoard</span>.<span class="vc">append</span>(<span class="vc">isBlack</span>)</code></li>
            <li><code class="code-voice">                <span class="vc">isBlack</span> = !<span class="vc">isBlack</span></code></li>
            <li><code class="code-voice">            }</code></li>
            <li><code class="code-voice">            <span class="vc">isBlack</span> = !<span class="vc">isBlack</span></code></li>
            <li><code class="code-voice">        }</code></li>
            <li><code class="code-voice">        <span class="kt">return</span> <span class="vc">temporaryBoard</span></code></li>
            <li><code class="code-voice">    }()</code></li>
            <li><code class="code-voice">    <span class="kt">func</span> <span class="vc">squareIsBlackAt</span>(<span class="vc">row</span>: <span class="n"><!-- a href="" -->Int<!-- /a --></span>, <span class="vc">column</span>: <span class="n"><!-- a href="" -->Int<!-- /a --></span>) -&gt; <span class="n"><!-- a href="" -->Bool<!-- /a --></span> {</code></li>
            <li><code class="code-voice">        <span class="kt">return</span> <span class="vc">boardColors</span>[(<span class="vc">row</span> * <span class="m">8</span>) + <span class="vc">column</span>]</code></li>
            <li><code class="code-voice">    }</code></li>
            <li><code class="code-voice">}</code></li>
        </ol>
      </div>
  </div>
</section><p class="para"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
  无论何时</font></font><code class="code-voice">Chessboard</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">创建</font><font style="vertical-align: inherit;">新</font><font style="vertical-align: inherit;">实例，都会执行闭包，并</font></font><code class="code-voice">boardColors</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">计算并返回</font><font style="vertical-align: inherit;">缺省值</font><font style="vertical-align: inherit;">。</font><font style="vertical-align: inherit;">上例中的闭包在一个临时数组中调用板上每个方块的适当颜色</font></font><code class="code-voice">temporaryBoard</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">，并在其设置完成后返回该临时数组作为闭包的返回值。</font><font style="vertical-align: inherit;">返回的数组值存储在</font><font style="vertical-align: inherit;">实用程序函数</font><font style="vertical-align: inherit;">中</font></font><code class="code-voice">boardColors</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">并可以查询</font></font><code class="code-voice">squareIsBlackAt(row:column:)</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">：
</font></font></p><section class="code-listing">
  
  <div class="code-sample">
      <div class="Swift">
        <ol class="code-lines">
            <li><code class="code-voice"><span class="kt">let</span> <span class="vc">board</span> = <span class="vc">Chessboard</span>()</code></li>
            <li><code class="code-voice"><span class="vc">print</span>(<span class="vc">board</span>.<span class="vc">squareIsBlackAt</span>(<span class="vc">row</span>: <span class="m">0</span>, <span class="vc">column</span>: <span class="m">1</span>))</code></li>
            <li><code class="code-voice"><span class="c">// Prints "true"</span></code></li>
            <li><code class="code-voice"><span class="vc">print</span>(<span class="vc">board</span>.<span class="vc">squareIsBlackAt</span>(<span class="vc">row</span>: <span class="m">7</span>, <span class="vc">column</span>: <span class="m">7</span>))</code></li>
            <li><code class="code-voice"><span class="c">// Prints "false"</span></code></li>
        </ol>
      </div>
  </div>
</section>
  
</section>

  	
 	<section id="next_previous" class="">
    		<p class="previous-link"><a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Inheritance.html#//apple_ref/doc/uid/TP40014097-CH17-ID193" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH17-ID193" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_66&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">遗产</font></font></a></p>
  			<p class="next-link"><a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Deinitialization.html#//apple_ref/doc/uid/TP40014097-CH19-ID142" data-renderer-version="2" data-id="//apple_ref/doc/uid/TP40014097-CH19-ID142" onclick="s_objectID=&quot;https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Lang_67&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">反初始化</font></font></a></p>

    <p class="copyright"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Copyright©2018 Apple Inc.保留所有权利。 
  </font></font><a class="link" href="http://www.apple.com/legal/terms/site.html" target="_blank" rel="external" onclick="s_objectID=&quot;http://www.apple.com/legal/terms/site.html_1&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">使用条款</font></font></a><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> | 
  </font></font><a class="link" href="http://www.apple.com/privacy/" target="_blank" rel="external" onclick="s_objectID=&quot;http://www.apple.com/privacy/_1&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">隐私政策</font></font></a><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> | </font><font style="vertical-align: inherit;">更新日期：2018-02-20
</font></font></p>
  </section>
</article>

    </div>
    <div id="big_button"></div>
    <footer id="footer">
  <div class="content-wrapper">
  	<div id="leave_feedback" class="button" role="button" tabindex="0"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">反馈</font></font></div>
  </div>
  <script src="./Swift编程语言（Swift 4.1）：初始化_files/devpubs-1.6.3.js" type="text/javascript" charset="utf-8"></script>
  <script src="./Swift编程语言（Swift 4.1）：初始化_files/feedback-1.6.3.js" type="text/javascript" charset="utf-8"></script>
  <div id="_omniture_top">
<!-- SiteCatalyst code version: H.8. Copyright 1997-2006 Omniture, Inc. -->
<script type="text/javascript">
/* RSID: */
var s_account="appleglobal,appleusdeveloper,dappdeveloperlib"
</script>

<script type="text/javascript" src="./Swift编程语言（Swift 4.1）：初始化_files/s_code_h.js"></script>
<script type="text/javascript">
s.pageName=AC.Tracking.pageName();
s.channel="www.us.developer"

/************* DO NOT ALTER ANYTHING BELOW THIS LINE ! **************/
var s_code=s.t();if(s_code)document.write(s_code)</script>
<!-- End SiteCatalyst code version: H.8. -->
</div>

</footer>

    
  
    <div id="blackout">
    <div id="preload"></div>
</div>
<div id="modal" aria-hidden="true">
    <div id="closebox" tabindex="0" aria-label="Close feedback form" role="button"></div>
    <div id="sending" class="hidden">
        <h2 tabindex="0"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">发送反馈...</font></font></h2>
        <div id="sending_img"></div>
    </div>
    <div id="error" class="hidden">
        <h2 tabindex="0"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">我们很抱歉发生了错误。</font></font></h2>
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">请稍后尝试提交您的反馈。</font></font></p>
        <div id="error_icon"></div>
    </div>
    <div id="success" class="hidden">
        <h2 tabindex="0"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">感谢您提供反馈！</font></font></h2>
        <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">您的意见有助于改进我们的开发者文档</font></font></p>
        <div id="thank_you_icon"></div>
    </div>
    
    <form id="feedback" action="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Initialization.html#" method="post">
        <div class="left-leaf">
            <h2 id="helpful_title" data-asterisk="a1" tabindex="0"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">这份文件有多大帮助？</font></font></h2>     
            <sup id="a1" class="asterisk" aria-hidden="true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">*</font></font></sup>

            <div id="star_group" role="radiogroup" aria-required="true">
                <label> 
                    <input class="radio" type="radio" name="helped" value="1"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> 
                    很有帮助
                </font></font></label>
                <label> 
                    <input class="radio" type="radio" name="helped" value="2"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> 
                    有点帮助
                </font></font></label>
                <label>
                    <input class="radio" type="radio" name="helped" value="3"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> 
                    没有帮助
                </font></font></label>
            </div>
        </div>
        <div class="right-leaf">
            <h2><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">我们如何改进这个文件？</font></font></h2>
            <div id="improve" class="checkboxes">
                <label>
                    <input type="checkbox" name="typo"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> 
                    修正错别字或链接
                </font></font></label>
                <label>
                    <input type="checkbox" name="infoIncorrect"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> 
                    修正错误的信息
                </font></font></label>
                <label>
                    <input type="checkbox" name="needs_examples"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> 
                    添加或更新代码示例
                </font></font></label>
                <label>
                    <input type="checkbox" name="needs_art"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> 
                    添加或更新插图
                </font></font></label>
                <label>
                    <input type="checkbox" name="missingInfo"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> 
                    添加有关...的信息
                </font></font></label>
            </div>
        </div>

        <textarea id="comment" name="problem" cols="70" rows="8" placeholder="Please tell us more about your experience with this document" data-asterisk="a2" required=""></textarea>
        <sup id="a2" class="asterisk" aria-hidden="true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">*</font></font></sup>

        <p class="fineprint">
            <em aria-hidden="true"><span><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">*</font></font></span><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">必填信息</font></font></em>
        </p> 

        <font style="vertical-align: inherit;"><font style="vertical-align: inherit;"><input id="submit" type="button" value="发送"></font></font>

        <section id="legal">
            <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
                要提交产品错误或增强请求，请访问 
                 </font></font><a href="https://developer.apple.com/bugreporter/" target="_blank" onclick="s_objectID=&quot;https://developer.apple.com/bugreporter/_1&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Bug Reporter</font></font></a><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">  
                页面。
            </font></font></p>
            <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> 
                在您向我们发送反馈之前，</font><font style="vertical-align: inherit;">
                请阅读</font></font><a href="http://www.apple.com/legal/policies/ideas.html" target="_blank" onclick="s_objectID=&quot;http://www.apple.com/legal/policies/ideas.html_1&quot;;return this.s_oc?this.s_oc(e):true"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Apple的未经请求的意见提交政策</font></font></a><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">。
            </font></font></p> 
        </section>
    </form>
</div><div id="goog-gt-tt" class="skiptranslate" dir="ltr"><div style="padding: 8px;"><div><div class="logo"><img src="./Swift编程语言（Swift 4.1）：初始化_files/translate_24dp.png" width="20" height="20" alt="Google 翻译"></div></div></div><div class="top" style="padding: 8px; float: left; width: 100%;"><h1 class="title gray">原文</h1></div><div class="middle" style="padding: 8px;"><div class="original-text"></div></div><div class="bottom" style="padding: 8px;"><div class="activity-links"><span class="activity-link">提供更好的翻译建议</span><span class="activity-link"></span></div><div class="started-activity-container"><hr style="color: #CCC; background-color: #CCC; height: 1px; border: none;"><div class="activity-root"></div></div></div><div class="status-message" style="display: none;"></div></div>



<div class="goog-te-spinner-pos"><div class="goog-te-spinner-animation"><svg xmlns="http://www.w3.org/2000/svg" class="goog-te-spinner" width="96px" height="96px" viewBox="0 0 66 66"><circle class="goog-te-spinner-path" fill="none" stroke-width="6" stroke-linecap="round" cx="33" cy="33" r="30"></circle></svg></div></div></body></html>